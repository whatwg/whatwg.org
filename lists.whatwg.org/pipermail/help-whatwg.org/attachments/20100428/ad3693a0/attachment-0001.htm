<tt>
&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;font-family:&nbsp;arial,&nbsp;sans-serif;&nbsp;font-size:&nbsp;13px;&nbsp;border-collapse:&nbsp;collapse;&nbsp;&quot;&gt;Thank&nbsp;you&nbsp;for&nbsp;your&nbsp;input&nbsp;Philip, &lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;am&nbsp;thinkin&nbsp;maybe&nbsp;i&nbsp;should&nbsp;grab&nbsp;an&nbsp;ImageData&nbsp;of&nbsp;each&nbsp;of&nbsp;my&nbsp;images&nbsp;to&nbsp;be&nbsp;used,&nbsp;and&nbsp;then&nbsp;make&nbsp;modified&nbsp;copies&nbsp;of&nbsp;those&nbsp;dynamically&nbsp;as&nbsp;i&nbsp;draw&nbsp;graphics.&nbsp;Maybe&nbsp;that&nbsp;should&nbsp;be&nbsp;the&nbsp;fastest&nbsp;way,&nbsp;to&nbsp;never&nbsp;work&nbsp;directly&nbsp;with&nbsp;Image&nbsp;objects&nbsp;but&nbsp;with&nbsp;ImageData&nbsp;objects. &lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Here&nbsp;is&nbsp;a&nbsp;screenshot&nbsp;of&nbsp;the&nbsp;application&nbsp;i&nbsp;am&nbsp;making&nbsp;wich&nbsp;is&nbsp;a&nbsp;performance&nbsp;comparison&nbsp;between&nbsp;current&nbsp;flash&nbsp;and &lt;span&nbsp;class=&quot;il&quot;&nbsp;style=&quot;background-image:&nbsp;initial;&nbsp;background-attachment:&nbsp;initial;&nbsp;background-origin:&nbsp;initial;&nbsp;background-clip:&nbsp;initial;&nbsp;background-color:&nbsp;rgb(219,&nbsp;240,&nbsp;250);&nbsp;background-position:&nbsp;initial&nbsp;initial;&nbsp;background-repeat:&nbsp;initial&nbsp;initial;&nbsp;&quot;&gt;canvas&lt;/span&gt; implementations.&nbsp;Hopefully&nbsp;sometime&nbsp;in&nbsp;the&nbsp;future&nbsp;if&nbsp;we&nbsp;get&nbsp;full&nbsp;hardware&nbsp;acceleration&nbsp;on &lt;span&nbsp;class=&quot;il&quot;&nbsp;style=&quot;background-image:&nbsp;initial;&nbsp;background-attachment:&nbsp;initial;&nbsp;background-origin:&nbsp;initial;&nbsp;background-clip:&nbsp;initial;&nbsp;background-color:&nbsp;rgb(219,&nbsp;240,&nbsp;250);&nbsp;background-position:&nbsp;initial&nbsp;initial;&nbsp;background-repeat:&nbsp;initial&nbsp;initial;&nbsp;&quot;&gt;canvas&lt;/span&gt; it&nbsp;will&nbsp;be&nbsp;faster&nbsp;than&nbsp;flash.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;a&nbsp;href=&quot;http://twitpic.com/1j2aeg/full&quot;&nbsp;target=&quot;_blank&quot;&nbsp;style=&quot;color:&nbsp;rgb(51,&nbsp;102,&nbsp;51);&nbsp;&quot;&gt;http://twitpic.com/1j2aeg/full&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;http://twitpic.com/1j2aeg&quot;&nbsp;target=&quot;_blank&quot;&nbsp;style=&quot;color:&nbsp;rgb(51,&nbsp;102,&nbsp;51);&nbsp;&quot;&gt;http://twitpic.com/1j2aeg&lt;/a&gt;&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;a&nbsp;href=&quot;http://twitpic.com/1j2aeg&quot;&nbsp;target=&quot;_blank&quot;&nbsp;style=&quot;color:&nbsp;rgb(51,&nbsp;102,&nbsp;51);&nbsp;&quot;&gt;&lt;/a&gt;I&nbsp;really&nbsp;look&nbsp;forward&nbsp;to&nbsp;other&nbsp;advice&nbsp;on&nbsp;how&nbsp;to&nbsp;best&nbsp;do&nbsp;this&nbsp;if&nbsp;someone&nbsp;has&nbsp;any&nbsp;input.&nbsp;Personally&nbsp;i&nbsp;think&nbsp;the &lt;span&nbsp;class=&quot;il&quot;&nbsp;style=&quot;background-image:&nbsp;initial;&nbsp;background-attachment:&nbsp;initial;&nbsp;background-origin:&nbsp;initial;&nbsp;background-clip:&nbsp;initial;&nbsp;background-color:&nbsp;rgb(219,&nbsp;240,&nbsp;250);&nbsp;background-position:&nbsp;initial&nbsp;initial;&nbsp;background-repeat:&nbsp;initial&nbsp;initial;&nbsp;&quot;&gt;canvas&lt;/span&gt; specification&nbsp;should&nbsp;be&nbsp;updated&nbsp;to&nbsp;include&nbsp;this&nbsp;into&nbsp;the&nbsp;composite&nbsp;operation,&nbsp;that&nbsp;you&nbsp;could&nbsp;define&nbsp;a&nbsp;tint&nbsp;color.&nbsp;I&nbsp;also&nbsp;think&nbsp;there&nbsp;should&nbsp;be&nbsp;added&nbsp;a&nbsp;way&nbsp;to&nbsp;create&nbsp;an&nbsp;ImageData&nbsp;object&nbsp;with&nbsp;an&nbsp;Image&nbsp;object&nbsp;as&nbsp;indata.&nbsp;What&nbsp;do&nbsp;you&nbsp;think&nbsp;?&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Regards,&lt;/div&gt;&lt;div&gt;Steve&lt;/div&gt;&lt;/span&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;2010/4/25&nbsp;Philip&nbsp;Taylor&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:excors@gmail.com&quot;&gt;excors@gmail.com&lt;/a&gt;&gt;&lt;/span&gt;&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
<br>
On&nbsp;Sun,&nbsp;Apr&nbsp;25,&nbsp;2010&nbsp;at&nbsp;9:48&nbsp;AM,&nbsp;Steve&nbsp;Olofsson&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:SteveOlofsson@gmail.com&quot;&gt;SteveOlofsson@gmail.com&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&gt;&nbsp;[...]&nbsp;i&nbsp;would&nbsp;also&nbsp;like&nbsp;to&nbsp;tint&nbsp;my&nbsp;images&nbsp;on&nbsp;the&nbsp;fly&nbsp;as&nbsp;i&nbsp;draw&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&gt;&nbsp;them.&nbsp;This&nbsp;would&nbsp;be&nbsp;used&nbsp;for&nbsp;example&nbsp;when&nbsp;rendering&nbsp;a&nbsp;particle&nbsp;fire&nbsp;effect&lt;br&gt;<br>
&gt;&nbsp;where&nbsp;each&nbsp;particle&nbsp;starts&nbsp;out&nbsp;as&nbsp;yellow&nbsp;and&nbsp;moves&nbsp;towards&nbsp;a&nbsp;red-ish&nbsp;tint&nbsp;as&lt;br&gt;<br>
&gt;&nbsp;they&nbsp;grow&nbsp;older.&lt;br&gt;<br>
&lt;/div&gt;&gt;&nbsp;[...]&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&gt;&nbsp;I&nbsp;have&nbsp;heard&nbsp;of&nbsp;solutions&nbsp;where&nbsp;you&nbsp;draw&nbsp;the&nbsp;image&nbsp;onto&nbsp;another&nbsp;canvas&nbsp;and&lt;br&gt;<br>
&gt;&nbsp;tint&nbsp;that&nbsp;based&nbsp;on&nbsp;pixel&nbsp;values&nbsp;and&nbsp;then&nbsp;grab&nbsp;it&nbsp;and&nbsp;draw&nbsp;it&nbsp;on&nbsp;the&nbsp;main&lt;br&gt;<br>
&gt;&nbsp;canvas.&nbsp;However,&nbsp;i&nbsp;am&nbsp;assuming&nbsp;that&nbsp;this&nbsp;solution&nbsp;will&nbsp;1.&nbsp;be&nbsp;slow&nbsp;and&lt;br&gt;<br>
&gt;&nbsp;cumbersome&nbsp;to&nbsp;use&nbsp;on&nbsp;the&nbsp;fly,&nbsp;2.&nbsp;i&nbsp;am&nbsp;assuming&nbsp;that&nbsp;you&nbsp;loose&nbsp;transparency&lt;br&gt;<br>
&gt;&nbsp;data&nbsp;when&nbsp;you&nbsp;draw&nbsp;the&nbsp;image,&nbsp;because&nbsp;particle&nbsp;images&nbsp;will&nbsp;need&nbsp;to&nbsp;be&lt;br&gt;<br>
&gt;&nbsp;partially&nbsp;transparent&nbsp;in&nbsp;most&nbsp;cases.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;You&nbsp;can&nbsp;do&nbsp;a&nbsp;similar&nbsp;effect&nbsp;like&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://software.hixie.ch/utilities/js/live-dom-viewer/saved/460&quot;&nbsp;target=&quot;_blank&quot;&gt;http://software.hixie.ch/utilities/js/live-dom-viewer/saved/460&lt;/a&gt;&nbsp;-&nbsp;draw&lt;br&gt;<br>
the&nbsp;image&nbsp;onto&nbsp;a&nbsp;transparent&nbsp;canvas,&nbsp;draw&nbsp;a&nbsp;semi-transparent&nbsp;coloured&lt;br&gt;<br>
rectangle&nbsp;over&nbsp;it&nbsp;with&nbsp;globalCompositeOperation=&#39;source-atop&#39;,&nbsp;and&lt;br&gt;<br>
then&nbsp;use&nbsp;that&nbsp;canvas&nbsp;as&nbsp;the&nbsp;source&nbsp;for&nbsp;a&nbsp;normal&nbsp;drawImage&nbsp;onto&nbsp;your&lt;br&gt;<br>
main&nbsp;canvas.&nbsp;That&nbsp;mostly&nbsp;preserves&nbsp;the&nbsp;transparency,&nbsp;as&nbsp;long&nbsp;as&nbsp;you&lt;br&gt;<br>
don&#39;t&nbsp;want&nbsp;the&nbsp;tinting&nbsp;too&nbsp;strong.&nbsp;If&nbsp;you&nbsp;want&nbsp;to&nbsp;simply&nbsp;multiply&nbsp;the&lt;br&gt;<br>
RGB&nbsp;channels&nbsp;without&nbsp;affecting&nbsp;A,&nbsp;then&nbsp;I&nbsp;think&nbsp;you&#39;d&nbsp;have&nbsp;to&nbsp;use&lt;br&gt;<br>
getImageData/putImageData&nbsp;(which&nbsp;may&nbsp;be&nbsp;a&nbsp;bit&nbsp;slow,&nbsp;though&nbsp;it&#39;s&nbsp;full&lt;br&gt;<br>
RGBA&nbsp;so&nbsp;you&nbsp;won&#39;t&nbsp;lose&nbsp;transparency).&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
--&lt;br&gt;<br>
Philip&nbsp;Taylor&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:excors@gmail.com&quot;&gt;excors@gmail.com&lt;/a&gt;&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
