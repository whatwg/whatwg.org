<tt>
You&nbsp;bring&nbsp;up&nbsp;some&nbsp;good&nbsp;points&nbsp;-&nbsp;I&nbsp;appreciate&nbsp;the&nbsp;detail.&nbsp; In&nbsp;the&nbsp;typical&nbsp;&amp;quot;youtube&amp;quot;&nbsp;scenario,&nbsp;sections&nbsp;aren&amp;#39;t&nbsp;necessary,&nbsp;and&nbsp;buffering&nbsp;could&nbsp;be&nbsp;limited&nbsp;to&nbsp;a&nbsp;defined&nbsp;number&nbsp;of&nbsp;bytes.&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Perhaps&nbsp;&amp;quot;sections&amp;quot;&nbsp;is&nbsp;not&nbsp;the&nbsp;right&nbsp;concept&nbsp;for&nbsp;limiting&nbsp;playback.&nbsp; There&nbsp;is&nbsp;value&nbsp;in&nbsp;being&nbsp;able&nbsp;to&nbsp;change&nbsp;the&nbsp;video&nbsp;source&nbsp;client-side,&nbsp;however.&nbsp; More&nbsp;specifically,&nbsp;beyond&nbsp;playlists&nbsp;mentioned&nbsp;below,&nbsp;it&nbsp;would&nbsp;allow&nbsp;providers&nbsp;to&nbsp;seamlessly&nbsp;serve advertisements,&nbsp;interactive&nbsp;video,&nbsp;channel&nbsp;surfing,&nbsp;changing&nbsp;audio&nbsp;stream&nbsp;to&nbsp;a&nbsp;different&nbsp;language,&nbsp;multi-angle,&nbsp;etc.&lt;br&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Below,&nbsp;you&nbsp;mentioned&nbsp;you&nbsp;had&nbsp;concern&nbsp;about&nbsp;reusing&nbsp;URL1.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;What&nbsp;problems&nbsp;might&nbsp;this&nbsp;code&nbsp;or&nbsp;corresponding&nbsp;HTML&nbsp;cause?&lt;/div&gt;&lt;div&gt;video.setSection(0,&nbsp;URL1,&nbsp;0,&nbsp;999999);&lt;br&gt;video.setSection(1,&nbsp;URL1,&nbsp;1000000,&nbsp;2999999);&lt;br&gt;<br>
<br>
video.setSection(2,&nbsp;URL1,&nbsp;3000000,&nbsp;5000000);&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Using&nbsp;your&nbsp;example&nbsp;below,&nbsp;the&nbsp;UA&nbsp;would&nbsp;send:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;GET &lt;a&nbsp;href=&quot;http://example.com/video.webm&quot;&nbsp;target=&quot;_blank&quot;&gt;http://example.com/video.webm&lt;/a&gt; HTTP/1.1&lt;br&gt;<br>
<br>
Range:&nbsp;bytes&nbsp;0-999999&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;GET &lt;a&nbsp;href=&quot;http://example.com/video.webm&quot;&nbsp;target=&quot;_blank&quot;&gt;http://example.com/video.webm&lt;/a&gt; HTTP/1.1&lt;br&gt;Range:&nbsp;bytes&nbsp;1000000-2999999&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;GET &lt;a&nbsp;href=&quot;http://example.com/video.webm&quot;&nbsp;target=&quot;_blank&quot;&gt;http://example.com/video.webm&lt;/a&gt; HTTP/1.1&lt;br&gt;<br>
<br>
Range:&nbsp;bytes&nbsp;3000000-5000000&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Wed,&nbsp;Jun&nbsp;30,&nbsp;2010&nbsp;at&nbsp;1:16&nbsp;PM,&nbsp;Marques&nbsp;Johansson&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:marques@displague.com&quot;&gt;marques@displague.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;On&nbsp;Wed,&nbsp;Jun&nbsp;30,&nbsp;2010&nbsp;at&nbsp;2:29&nbsp;PM,&nbsp;Richard&nbsp;Kern&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:kernrj@gmail.com&quot;&gt;kernrj@gmail.com&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;br&gt;<br>
<br>
<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;&amp;gt;&nbsp;If&nbsp;video&nbsp;were&nbsp;downloaded&nbsp;in&nbsp;sections,&nbsp;there&nbsp;could&nbsp;be&nbsp;a&nbsp;mechanism&nbsp;for&nbsp;telling&lt;br&gt;<br>
&amp;gt;&nbsp;the&nbsp;browser&nbsp;to&nbsp;wait&nbsp;for&nbsp;a&nbsp;certain&nbsp;number&nbsp;of&nbsp;sections&nbsp;to&nbsp;be&nbsp;downloaded&nbsp;before&lt;br&gt;<br>
&amp;gt;&nbsp;playback.&nbsp; Also,&nbsp;if&nbsp;we&nbsp;had&nbsp;the&nbsp;option&nbsp;to&nbsp;specify&nbsp;a&nbsp;different&nbsp;URL/file&nbsp;offset&lt;br&gt;<br>
&amp;gt;&nbsp;for&nbsp;each&nbsp;section,&nbsp;that&nbsp;opens&nbsp;a&nbsp;few&nbsp;possibilities&nbsp;-&nbsp;in&nbsp;Marques&amp;#39;s&nbsp;case,&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Apple&amp;#39;s&nbsp;solution&nbsp;involves&nbsp;a&nbsp;playlist&nbsp;file&nbsp;with&nbsp;.ts&nbsp;files&nbsp;that&nbsp;each&lt;br&gt;<br>
represent&nbsp;a&nbsp;few&nbsp;seconds&nbsp;worth&nbsp;of&nbsp;video.&nbsp; I&amp;#39;m&nbsp;not&nbsp;a&nbsp;fan&nbsp;of&nbsp;cutting&nbsp;up&lt;br&gt;<br>
original&nbsp;seemless&nbsp;videos&nbsp;when&nbsp;these&nbsp;codecs&nbsp;were&nbsp;designed&nbsp;with&lt;br&gt;<br>
streaming&nbsp;in&nbsp;mind.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&amp;gt;&nbsp;&amp;lt;video&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;  &amp;lt;source&nbsp;min_buffer=&amp;quot;1&amp;quot;&nbsp;max_buffer=&amp;quot;2&amp;quot;&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;  &nbsp; &nbsp;&amp;lt;section&nbsp;src=&amp;quot;URL1&amp;quot;/&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;  &nbsp; &nbsp;&amp;lt;section&nbsp;src=&amp;quot;URL2&amp;quot;&nbsp;start_offset=&amp;quot;1000000bytes&amp;quot;&lt;br&gt;<br>
&amp;gt;&nbsp;end_offset=&amp;quot;3000000bytes&amp;quot;&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;  &nbsp; &nbsp;&amp;lt;section&nbsp;src=&amp;quot;URL3&amp;quot;/&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;  &amp;lt;/source&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;&amp;lt;/video&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;or&lt;br&gt;<br>
&amp;gt;&nbsp;video.setSection(0,&nbsp;URL1);&lt;br&gt;<br>
&amp;gt;&nbsp;video.setSection(1,&nbsp;URL2,&nbsp;1000000,&nbsp;3000000);&lt;br&gt;<br>
&amp;gt;&nbsp;video.setSection(2,&nbsp;URL3);&lt;br&gt;<br>
&amp;gt;&nbsp;video.setMinBufferedSections(1);&nbsp; //The&nbsp;first&nbsp;section&nbsp;must&nbsp;be&nbsp;completely&lt;br&gt;<br>
&amp;gt;&nbsp;downloaded&nbsp;before&nbsp;playback&nbsp;begins&lt;br&gt;<br>
&amp;gt;&nbsp;video.setMaxBufferedSections(2);&nbsp; //The&nbsp;download&nbsp;will&nbsp;not&nbsp;be&nbsp;permitted&nbsp;to&lt;br&gt;<br>
&amp;gt;&nbsp;get&nbsp;more&nbsp;than&nbsp;2&nbsp;sections&nbsp;ahead&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Sections&nbsp;like&nbsp;these&nbsp;would&nbsp;work&nbsp;to&nbsp;splice&nbsp;video&nbsp;from&nbsp;different&nbsp;sources&lt;br&gt;<br>
together.&nbsp; My&nbsp;concern&nbsp;is&nbsp;with&nbsp;URL1&nbsp;being&nbsp;used&nbsp;for&nbsp;each&nbsp;section&nbsp;rather&lt;br&gt;<br>
than&nbsp;URL1,&nbsp;URL2,&nbsp;and&nbsp;URL3.&lt;br&gt;<br>
&lt;br&gt;<br>
My&nbsp;other&nbsp;problem&nbsp;with&nbsp;sections&nbsp;as&nbsp;you&amp;#39;ve&nbsp;provided&nbsp;them&nbsp;is&nbsp;that&nbsp;it&lt;br&gt;<br>
fills&nbsp;the&nbsp;document&nbsp;with&nbsp;unnecessary&nbsp;nodes.&nbsp; In&nbsp;the&nbsp;case&nbsp;of&nbsp;a&nbsp;video&lt;br&gt;<br>
with&nbsp;2-32&nbsp;chapters&nbsp;/&nbsp;sections&nbsp;this&nbsp;would&nbsp;be&nbsp;fine,&nbsp;but&nbsp;realistically&lt;br&gt;<br>
every&nbsp;I-frame&nbsp;should&nbsp;be&nbsp;a&nbsp;section,&nbsp;allowing&nbsp;the&nbsp;user&nbsp;to&nbsp;seek&nbsp;a&nbsp;video&lt;br&gt;<br>
with&nbsp;very&nbsp;fine&nbsp;controls.&nbsp; Needless&nbsp;to&nbsp;say,&nbsp;a&nbsp;video&nbsp;can&nbsp;have&nbsp;thousands&lt;br&gt;<br>
of&nbsp;I-frames.&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;would&nbsp;be&nbsp;looking&nbsp;for&nbsp;something&nbsp;more&nbsp;like:&lt;br&gt;<br>
&amp;lt;source&nbsp;ranges&nbsp;maxrangelength=&amp;quot;100000&amp;quot;&amp;gt;&lt;br&gt;<br>
and&lt;br&gt;<br>
video.setRangedAccess(true);&lt;br&gt;<br>
video.setMaxRangeLength(100000);&lt;br&gt;<br>
&lt;br&gt;<br>
This&nbsp;would&nbsp;prompt&nbsp;the&nbsp;UA&nbsp;to&nbsp;send:&lt;br&gt;<br>
&lt;br&gt;<br>
GET&nbsp;&lt;a&nbsp;href=&quot;http://example.com/video.webm&quot;&nbsp;target=&quot;_blank&quot;&gt;http://example.com/video.webm&lt;/a&gt;&nbsp;HTTP/1.1&lt;br&gt;<br>
Range:&nbsp;bytes&nbsp;0-99999&lt;br&gt;<br>
&lt;br&gt;<br>
rather&nbsp;than&nbsp;the&nbsp;default&nbsp;behavior&nbsp;which&nbsp;seems&nbsp;to&nbsp;be&lt;br&gt;<br>
&lt;br&gt;<br>
GET&nbsp; &lt;a&nbsp;href=&quot;http://example.com/video.webm&quot;&nbsp;target=&quot;_blank&quot;&gt;http://example.com/video.webm&lt;/a&gt;&nbsp;HTTP/1.1&lt;br&gt;<br>
[&nbsp;...&nbsp;no&nbsp;range&nbsp;...]&lt;br&gt;<br>
&lt;br&gt;<br>
or&lt;br&gt;<br>
&lt;br&gt;<br>
GET&nbsp;&lt;a&nbsp;href=&quot;http://example.com/video.webm&quot;&nbsp;target=&quot;_blank&quot;&gt;http://example.com/video.webm&lt;/a&gt;&nbsp;HTTP/1.1&lt;br&gt;<br>
Range:&nbsp;bytes&nbsp;0-&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;last&nbsp;two&nbsp;request&nbsp;methods&nbsp;are&nbsp;problems&nbsp;because&nbsp;the&nbsp;server&nbsp;has&nbsp;no&lt;br&gt;<br>
choice&nbsp;but&nbsp;to&nbsp;send&nbsp;the&nbsp;entire&nbsp;document&nbsp;to&nbsp;the&nbsp;client&nbsp;or&nbsp;respond&nbsp;with&nbsp;a&lt;br&gt;<br>
403&nbsp;or&nbsp;416&nbsp;(to&nbsp;the&nbsp;Ranged&nbsp;request&nbsp;only).&nbsp; These&nbsp;status&nbsp;codes&nbsp;are&nbsp;not&lt;br&gt;<br>
recoverable&nbsp;by&nbsp;the&nbsp;UA;&nbsp;there&nbsp;is&nbsp;no&nbsp;retry&nbsp;behavior&nbsp;or&nbsp;way&nbsp;to&nbsp;specify&lt;br&gt;<br>
what&nbsp;should&nbsp;have&nbsp;been&nbsp;different.&nbsp; A&nbsp;416&nbsp;response&nbsp;can&nbsp;specify&lt;br&gt;<br>
Content-Range:&nbsp;*/fullsize,&nbsp;but&nbsp;that&nbsp;won&amp;#39;t&nbsp;change&nbsp;the&nbsp;client&amp;#39;s&nbsp;Range&lt;br&gt;<br>
request&nbsp;behavior&nbsp;in&nbsp;terms&nbsp;of&nbsp;max&nbsp;requested&nbsp;range&nbsp;bytes.&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;server&nbsp;would&nbsp;rather&nbsp;not&nbsp;reply&nbsp;with&nbsp;a&nbsp;200&nbsp;or&nbsp;a&nbsp;206/Content-Range:0-&lt;br&gt;<br>
(essentially&nbsp;the&nbsp;same&nbsp;response)&nbsp;and&nbsp;keep&nbsp;the&nbsp;connection&nbsp;open&nbsp;for&lt;br&gt;<br>
throttling..&nbsp;Likewise,&nbsp;the&nbsp;user&nbsp;would&nbsp;rather&nbsp;not&nbsp;be&nbsp;charged&nbsp;for&nbsp;more&lt;br&gt;<br>
video&nbsp;than&nbsp;they&nbsp;intend&nbsp;to&nbsp;watch.&lt;br&gt;<br>
&lt;br&gt;<br>
In&nbsp;the&nbsp;real&nbsp;world&nbsp;a&nbsp;307&nbsp;redirect&nbsp;that&nbsp;specifies&nbsp;&amp;quot;Accept-Ranges:&nbsp;bytes&amp;quot;&lt;br&gt;<br>
will&nbsp;get&nbsp;some&nbsp;UAs&nbsp;to&nbsp;send&nbsp;a&nbsp;Range&nbsp;on&nbsp;the&nbsp;follow-up&nbsp;request,&nbsp;but&nbsp;the&lt;br&gt;<br>
range&nbsp;will&nbsp;be&nbsp;&amp;quot;Range:&nbsp;bytes&nbsp;0-&amp;quot;.&nbsp; The&nbsp;server&nbsp;can&nbsp;also&nbsp;try&nbsp;to&nbsp;sneak&nbsp;a&lt;br&gt;<br>
206&nbsp;response&nbsp;to&nbsp;an&nbsp;unranged&nbsp;request&nbsp;which&nbsp;seems&nbsp;to&nbsp;work&nbsp;against&nbsp;the&lt;br&gt;<br>
HTTP&nbsp;spec&amp;#39;s&nbsp;terms.&lt;br&gt;<br>
&lt;br&gt;<br>
If&nbsp;the&nbsp;HTTP&nbsp;spec&nbsp;expressly&nbsp;allowed&nbsp;a&nbsp;206&nbsp;response&nbsp;to&nbsp;contain&nbsp;less&nbsp;data&lt;br&gt;<br>
than&nbsp;requested&nbsp;and&nbsp;required&nbsp;the&nbsp;UA&nbsp;to&nbsp;follow-up&nbsp;with&nbsp;additional&nbsp;Ranged&lt;br&gt;<br>
requests&nbsp;I&nbsp;wouldn&amp;#39;t&nbsp;be&nbsp;having&nbsp;this&nbsp;conversation.&nbsp; When&nbsp;the&nbsp;server&lt;br&gt;<br>
responds&nbsp;with&nbsp;less&nbsp;than&nbsp;the&nbsp;full&nbsp;document&nbsp;Chrome&nbsp;users&nbsp;(and&nbsp;Opera&nbsp;Ogg&lt;br&gt;<br>
users(but&nbsp;not&nbsp;Opera&nbsp;webm))&nbsp;will&nbsp;be&nbsp;happy&nbsp;because&nbsp;their&nbsp;browser&nbsp;will&lt;br&gt;<br>
continue&nbsp;to&nbsp;send&nbsp;Ranged&nbsp;GETs&nbsp;where&nbsp;the&nbsp;response&nbsp;left&nbsp;off.&nbsp; Other&lt;br&gt;<br>
browsers&nbsp;will&nbsp;play&nbsp;the&nbsp;content&nbsp;provided&nbsp;in&nbsp;the&nbsp;short&nbsp;206&nbsp;response&nbsp;as&lt;br&gt;<br>
though&nbsp;it&nbsp;was&nbsp;a&nbsp;200&nbsp;or&nbsp;a&nbsp;206&nbsp;for&nbsp;the&nbsp;full&nbsp;length&nbsp;requested&nbsp;and&nbsp;stop&lt;br&gt;<br>
there.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&amp;gt;&nbsp; Buffering&nbsp;from/to&nbsp;a&nbsp;specific&nbsp;time&nbsp;is&nbsp;still&nbsp;possible,&nbsp;but&nbsp;would&nbsp;require&lt;br&gt;<br>
&amp;gt;&nbsp;metadata&nbsp;correlating&nbsp;video&nbsp;time&nbsp;to&nbsp;file&nbsp;position.&lt;br&gt;<br>
&amp;gt;&nbsp;Searching&nbsp;to&nbsp;a&nbsp;random&nbsp;file&nbsp;address&nbsp;may&nbsp;also&nbsp;present&nbsp;a&nbsp;problem&nbsp;if&nbsp;it&nbsp;is&nbsp;not&lt;br&gt;<br>
&amp;gt;&nbsp;the&nbsp;address&nbsp;of&nbsp;an&nbsp;I-frame.&nbsp; In&nbsp;this&nbsp;case&nbsp;the&nbsp;browser&nbsp;would&nbsp;need&nbsp;to&nbsp;continue&lt;br&gt;<br>
&amp;gt;&nbsp;seeking&nbsp;until&nbsp;it&nbsp;reaches&nbsp;a&nbsp;point&nbsp;it&nbsp;can&nbsp;decode&nbsp;from.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Chrome,&nbsp;as&nbsp;I&nbsp;have&nbsp;seen,&nbsp;fetches&nbsp;the&nbsp;beginning&nbsp;of&nbsp;a&nbsp;webm&nbsp;file&nbsp;and&nbsp;then&lt;br&gt;<br>
a&nbsp;block&nbsp;near&nbsp;the&nbsp;end&nbsp;of&nbsp;a&nbsp;webm&nbsp;file&nbsp;when&nbsp;it&nbsp;is&nbsp;made&nbsp;to&nbsp;request&nbsp;the&lt;br&gt;<br>
file&nbsp;with&nbsp;Ranges.&nbsp; This&nbsp;seems&nbsp;like&nbsp;an&nbsp;obvious&nbsp;choice&nbsp; for&nbsp; &amp;lt;video&lt;br&gt;<br>
prefetch=&amp;quot;metadata&amp;quot;&amp;gt;&nbsp;content&nbsp;but&nbsp;I&nbsp;have&nbsp;also&nbsp;seen&nbsp;it&nbsp;take&nbsp;this&lt;br&gt;<br>
behavior&nbsp;when&nbsp;given&nbsp;the&nbsp;URI&nbsp;to&nbsp;the&nbsp;direct&nbsp;video&nbsp;(or&nbsp;in&nbsp;my&nbsp;case&nbsp;a&nbsp;PHP&lt;br&gt;<br>
script&nbsp;that&nbsp;fseeks/fgets&nbsp;the&nbsp;range&nbsp;requested&nbsp;up&nbsp;to&nbsp;X&nbsp;bytes)&nbsp;which&nbsp;may&lt;br&gt;<br>
be&nbsp;related&nbsp;to&nbsp;the&nbsp;&amp;lt;video&amp;gt;&nbsp;element&nbsp;style&nbsp;controls&nbsp;they&nbsp;render&nbsp;for&lt;br&gt;<br>
videos&nbsp;with&nbsp;this&nbsp;mime-type.&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
