<tt>
On&nbsp;Tue,&nbsp;Sep&nbsp;8,&nbsp;2009&nbsp;at&nbsp;5:54&nbsp;PM,&nbsp;Aaron&nbsp;Boodman&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:aa@google.com&quot;&gt;aa@google.com&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
&gt;&nbsp;You&#39;d&nbsp;have&nbsp;to&nbsp;implement&nbsp;it&nbsp;via&nbsp;a&nbsp;mutex.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&nbsp;think&nbsp;you&nbsp;would&nbsp;have&nbsp;a&nbsp;queue&nbsp;of&nbsp;all&nbsp;pending&nbsp;requests&nbsp;for&nbsp;access&nbsp;to&lt;br&gt;<br>
storage,&nbsp;along&nbsp;with&nbsp;their&nbsp;associated&nbsp;callbacks,&nbsp;message&nbsp;loops,&nbsp;and&lt;br&gt;<br>
execution&nbsp;environments.&nbsp;Each&nbsp;time&nbsp;the&nbsp;local&nbsp;storage&nbsp;frees&nbsp;up,&nbsp;if&nbsp;there&lt;br&gt;<br>
is&nbsp;any&nbsp;queued&nbsp;request,&nbsp;invoke&nbsp;the&nbsp;callback&nbsp;in&nbsp;the&nbsp;correct&nbsp;environment. &lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;guess&nbsp;I&nbsp;should&nbsp;have&nbsp;said&nbsp;&quot;mutex&quot;&nbsp;(in&nbsp;quotes)&nbsp;because&nbsp;something&nbsp;like&nbsp;this&nbsp;is&nbsp;what&nbsp;I&nbsp;intended.&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
<br>
&lt;/div&gt;&lt;div&gt;Not&nbsp;that&nbsp;it&nbsp;matters&nbsp;to&nbsp;the&nbsp;spec,&nbsp;but&nbsp;this&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;how&nbsp;I&#39;m&nbsp;implementing&nbsp;locking&nbsp;within&nbsp;Chromium.&nbsp; The&nbsp;only&nbsp;difference&nbsp;is&nbsp;that&nbsp;the&nbsp;queue&nbsp;is&nbsp;of&nbsp;renderer&nbsp;processes&nbsp;(blocked&nbsp;on&nbsp;getting&nbsp;the&nbsp;lock)&nbsp;rather&nbsp;than&nbsp;individual&nbsp;callbacks.&nbsp; Doing&nbsp;the&nbsp;latter&nbsp;would&nbsp;be&nbsp;nice&nbsp;since&nbsp;sometimes&nbsp;web&nbsp;pages&nbsp;have&nbsp;to&nbsp;share&nbsp;the&nbsp;same&nbsp;process&nbsp;(and&nbsp;thus&nbsp;one&nbsp;origin&nbsp;may&nbsp;block&nbsp;another&nbsp;from&nbsp;executing&nbsp;because&nbsp;of&nbsp;Chromium implementational details).&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&gt;&nbsp;An&nbsp;optimized&nbsp;implementation&nbsp;could&lt;br&gt;<br>
&gt;&nbsp;wait&nbsp;until&nbsp;the&nbsp;first&nbsp;operation&nbsp;that&nbsp;can&#39;t&nbsp;be&nbsp;un-done&nbsp;before&nbsp;acquiring&nbsp;it,&lt;br&gt;<br>
&gt;&nbsp;and&nbsp;do&nbsp;everything&nbsp;optimistically&nbsp;until&nbsp;then.&nbsp; This&nbsp;is&nbsp;the&nbsp;same&nbsp;situation&nbsp;as&lt;br&gt;<br>
&gt;&nbsp;WebDatabase&nbsp;if&nbsp;I&nbsp;understand&nbsp;it&nbsp;correctly.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;You&nbsp;can&#39;t&nbsp;do&nbsp;this&nbsp;because&nbsp;upgrading&nbsp;the&nbsp;lock&nbsp;could&nbsp;block&nbsp;the&nbsp;UI&lt;br&gt;<br>
thread.&nbsp;Same&nbsp;thing&nbsp;with&nbsp;the&nbsp;database&nbsp;spec.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Sure&nbsp;you&nbsp;could&nbsp;block&nbsp;the&nbsp;UI&nbsp;thread&nbsp;more,&nbsp;but&nbsp;there&#39;s&nbsp;nothing&nbsp;to&nbsp;stop&nbsp;you&nbsp;from&nbsp;doing&nbsp;a&nbsp;&#39;while&nbsp;(true)&nbsp;{&nbsp;}&#39;&nbsp;inside&nbsp;the&nbsp;callback,&nbsp;which&nbsp;will&nbsp;block&nbsp;the&nbsp;UI&nbsp;thread&nbsp;as&nbsp;well.&nbsp; So&nbsp;I&nbsp;disagree&nbsp;with&nbsp;your&nbsp;assertion&nbsp;that&nbsp;waiting&nbsp;for&nbsp;a&nbsp;lock&nbsp;upgrade&nbsp;is&nbsp;a&nbsp;deal&nbsp;breaker.&nbsp; I&nbsp;don&#39;t&nbsp;think&nbsp;any&nbsp;implementation&nbsp;is&nbsp;realistically&nbsp;going&nbsp;to&nbsp;do&nbsp;anything&nbsp;like&nbsp;this&nbsp;in&nbsp;the&nbsp;near&nbsp;term,&nbsp;though.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;If&nbsp;you&nbsp;want&nbsp;to&nbsp;get&nbsp;fancy,&nbsp;the&nbsp;transaction()&nbsp;method&nbsp;can&nbsp;take&nbsp;a&lt;br&gt;<br>
read/write&nbsp;param.&nbsp;This&nbsp;is&nbsp;what&nbsp;the&nbsp;database&nbsp;spec&nbsp;does,&nbsp;but&nbsp;I&nbsp;think&nbsp;it&lt;br&gt;<br>
is&nbsp;overkill&nbsp;here,&nbsp;personally.&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Agreed.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;On&nbsp;Tue,&nbsp;Sep&nbsp;8,&nbsp;2009&nbsp;at&nbsp;6:02&nbsp;PM,&nbsp;Robert&nbsp;O&#39;Callahan &lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:robert@ocallahan.org&quot;&gt;robert@ocallahan.org&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;<br>
<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin-top:&nbsp;0px;&nbsp;margin-right:&nbsp;0px;&nbsp;margin-bottom:&nbsp;0px;&nbsp;margin-left:&nbsp;0.8ex;&nbsp;border-left-width:&nbsp;1px;&nbsp;border-left-color:&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;border-left-style:&nbsp;solid;&nbsp;padding-left:&nbsp;1ex;&nbsp;&quot;&gt;<br>
<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;On&nbsp;Tue,&nbsp;Sep&nbsp;8,&nbsp;2009&nbsp;at&nbsp;8:38&nbsp;PM,&nbsp;Jeremy&nbsp;Orlow &lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:jorlow@chromium.org&quot;&nbsp;target=&quot;_blank&quot;&gt;jorlow@chromium.org&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin-top:&nbsp;0pt;&nbsp;margin-right:&nbsp;0pt;&nbsp;margin-bottom:&nbsp;0pt;&nbsp;margin-left:&nbsp;0.8ex;&nbsp;border-left-width:&nbsp;1px;&nbsp;border-left-style:&nbsp;solid;&nbsp;border-left-color:&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;padding-left:&nbsp;1ex;&nbsp;&quot;&gt;<br>
<br>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;To&nbsp;be&nbsp;clear,&nbsp;Chrome&nbsp;is&nbsp;not&nbsp;going&nbsp;to&nbsp;implement&nbsp;the&nbsp;storage&nbsp;mutex&nbsp;with&nbsp;respect&nbsp;to&nbsp;cookies,&nbsp;but&nbsp;we&nbsp;are&nbsp;going&nbsp;to implement it&nbsp;for&nbsp;LocalStorage.&nbsp; Because&nbsp;of&nbsp;this,&nbsp;we&nbsp;can&nbsp;handle&nbsp;the&nbsp;localStorage&nbsp;mutex&nbsp;on&nbsp;a&nbsp;per-origin&nbsp;basis&nbsp;(which&nbsp;I&#39;m implementing right&nbsp;now).&lt;br&nbsp;clear=&quot;all&quot;&gt;<br>
<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;Looking&nbsp;back&nbsp;over&nbsp;previous&nbsp;threads&nbsp;on&nbsp;the&nbsp;storage&nbsp;mutex,&nbsp;I&nbsp;can&#39;t&nbsp;seem&nbsp;to&nbsp;remember&nbsp;or&nbsp;find&nbsp;the&nbsp;reason&nbsp;that&nbsp;implementing&nbsp;the&nbsp;storage&nbsp;mutex&nbsp;for&nbsp;cookies&nbsp;can&#39;t&nbsp;easily&nbsp;be&nbsp;done&nbsp;with&nbsp;a&nbsp;mutex&nbsp;per&nbsp;domain.&nbsp;Ian&nbsp;pointed&nbsp;out&nbsp;this&nbsp;approach&nbsp;breaks&nbsp;if&nbsp;you&nbsp;can&nbsp;make&nbsp;synchronous&nbsp;script&nbsp;calls&nbsp;across&nbsp;origins&nbsp;(e.g.&nbsp;across&nbsp;IFRAME&nbsp;boundaries),&nbsp;but&nbsp;can&nbsp;you&nbsp;actually&nbsp;make&nbsp;such&nbsp;calls?&nbsp;Or&nbsp;if&nbsp;you&nbsp;can&nbsp;(NPAPI?),&nbsp;can&nbsp;we&nbsp;just&nbsp;declare&nbsp;that&nbsp;those&nbsp;APIs&nbsp;release&nbsp;the&nbsp;storage&nbsp;mutex?&lt;br&gt;<br>
<br>
&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;thought&nbsp;it&nbsp;over,&nbsp;but&nbsp;I&nbsp;can&#39;t&nbsp;come&nbsp;up&nbsp;with&nbsp;any&nbsp;deadlock scenario.&nbsp; I&nbsp;would&nbsp;still&nbsp;be&nbsp;a&nbsp;bit&nbsp;worried&nbsp;about&nbsp;performance&nbsp;issues&nbsp;(including&nbsp;many&nbsp;ways&nbsp;a&nbsp;developer&nbsp;could&nbsp;shoot&nbsp;themself&nbsp;in&nbsp;the&nbsp;foot),&nbsp;but&nbsp;it&nbsp;is&nbsp;an&nbsp;interesting&nbsp;idea.&lt;/div&gt;<br>
<br>
&lt;div&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin-top:&nbsp;0px;&nbsp;margin-right:&nbsp;0px;&nbsp;margin-bottom:&nbsp;0px;&nbsp;margin-left:&nbsp;0.8ex;&nbsp;border-left-width:&nbsp;1px;&nbsp;border-left-color:&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;border-left-style:&nbsp;solid;&nbsp;padding-left:&nbsp;1ex;&nbsp;&quot;&gt;<br>
<br>
I&nbsp;know&nbsp;that&nbsp;setting&nbsp;document.domain&nbsp;makes&nbsp;this&nbsp;tricky&nbsp;because&nbsp;it&nbsp;synchronously&nbsp;enables&nbsp;new&nbsp;cross-domain&nbsp;interactions,&nbsp;but&nbsp;can&#39;t&nbsp;we&nbsp;handle&nbsp;that&nbsp;by&nbsp;declaring&nbsp;that&nbsp;setting&nbsp;document.domain&nbsp;releases&nbsp;the&nbsp;storage&nbsp;mutex?&lt;/blockquote&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;think&nbsp;this&nbsp;would&nbsp;be&nbsp;very&nbsp;reasonable.&nbsp; Especially&nbsp;with&nbsp;all&nbsp;the&nbsp;other&nbsp;things&nbsp;that&nbsp;already&nbsp;implicitly&nbsp;drop&nbsp;the&nbsp;lock.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
