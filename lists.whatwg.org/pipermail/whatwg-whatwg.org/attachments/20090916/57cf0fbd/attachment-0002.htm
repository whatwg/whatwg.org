<tt>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Wed,&nbsp;Sep&nbsp;16,&nbsp;2009&nbsp;at&nbsp;3:32&nbsp;PM,&nbsp;Jonas&nbsp;Sicking&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;jonas@sicking.cc&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;On&nbsp;Wed,&nbsp;Sep&nbsp;16,&nbsp;2009&nbsp;at&nbsp;3:21&nbsp;PM,&nbsp;Robert&nbsp;O&#39;Callahan&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:robert@ocallahan.org&quot;&gt;robert@ocallahan.org&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;&gt;&nbsp;On&nbsp;Thu,&nbsp;Sep&nbsp;17,&nbsp;2009&nbsp;at&nbsp;9:56&nbsp;AM,&nbsp;Jeremy&nbsp;Orlow&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:jorlow@chromium.org&quot;&gt;jorlow@chromium.org&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;1)&nbsp;Create&nbsp;a&nbsp;LocalStorage&nbsp;like&nbsp;API&nbsp;that&nbsp;can&nbsp;only&nbsp;be&nbsp;accessed&nbsp;in&nbsp;an&nbsp;async&lt;br&gt;<br>
&gt;&gt;&nbsp;way&nbsp;via&nbsp;pages&nbsp;(kind&nbsp;of&nbsp;like&nbsp;WebDatabase).&lt;br&gt;<br>
&gt;&gt;&nbsp;2)&nbsp;Remove&nbsp;any&lt;br&gt;<br>
&gt;&gt;&nbsp;atomicity/consistency guarantees from synchronous LocalStorage&nbsp;access&nbsp;within&lt;br&gt;<br>
&gt;&gt;&nbsp;pages&nbsp;(like&nbsp;IE8&nbsp;currently&nbsp;does)&nbsp;and&nbsp;add&nbsp;an&nbsp;async&nbsp;interface&nbsp;for&nbsp;when&nbsp;pages&nbsp;do&lt;br&gt;<br>
&gt;&gt;&nbsp;need&nbsp;atomicity/consistency.&lt;br&gt;<br>
&gt;&gt;&nbsp;3)&nbsp;Come&nbsp;up&nbsp;with&nbsp;a&nbsp;completely&nbsp;different&nbsp;storage&nbsp;API&nbsp;that&nbsp;all&nbsp;the&nbsp;browser&lt;br&gt;<br>
&gt;&gt;&nbsp;vendors&nbsp;are&nbsp;willing&nbsp;to&nbsp;implement&nbsp;that&nbsp;only&nbsp;allows&nbsp;Async&nbsp;access&nbsp;from&nbsp;within&lt;br&gt;<br>
&gt;&gt;&nbsp;pages.&nbsp; WebSimpleDatabase&nbsp;might&nbsp;be&nbsp;a&nbsp;good&nbsp;starting&nbsp;point&nbsp;for&nbsp;this.&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;4)&nbsp;Create&nbsp;WorkerStorage&nbsp;so&nbsp;that&nbsp;shared&nbsp;workers&nbsp;have&nbsp;exclusive,&nbsp;synchronous&lt;br&gt;<br>
&gt;&nbsp;access&nbsp;to&nbsp;their&nbsp;own&nbsp;persistent&nbsp;storage&nbsp;via&nbsp;an&nbsp;API&nbsp;compatible&nbsp;with&lt;br&gt;<br>
&gt;&nbsp;LocalStorage.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&nbsp;think&nbsp;some&nbsp;of&nbsp;the&nbsp;use&nbsp;cases&nbsp;require&nbsp;that&nbsp;code&nbsp;running&nbsp;in&nbsp;Window&lt;br&gt;<br>
objects&nbsp;can&nbsp;access&nbsp;the&nbsp;same&nbsp;storage&nbsp;area&nbsp;though.&nbsp;Consider&nbsp;for&nbsp;example&lt;br&gt;<br>
an&nbsp;email&nbsp;web&nbsp;app&nbsp;that&nbsp;uses&nbsp;a&nbsp;WorkerStorage&nbsp;area&nbsp;for&nbsp;to&nbsp;store&nbsp;email&lt;br&gt;<br>
data&nbsp;locally&nbsp;(for&nbsp;performance&nbsp;and&nbsp;for&nbsp;offline&nbsp;support),&nbsp;and&nbsp;then&nbsp;uses&lt;br&gt;<br>
a&nbsp;worker&nbsp;to&nbsp;synchronize&nbsp;that&nbsp;with&nbsp;the&nbsp;server.&lt;br&gt;<br>
&lt;br&gt;<br>
Here&nbsp;the&nbsp;code&nbsp;running&nbsp;in&nbsp;the&nbsp;Window&nbsp;wants&nbsp;to&nbsp;access&nbsp;the&nbsp;storage&nbsp;in&lt;br&gt;<br>
order&nbsp;to&nbsp;render&nbsp;the&nbsp;emails&nbsp;in&nbsp;the&nbsp;page,&nbsp;and&nbsp;the&nbsp;worker&nbsp;wants&nbsp;to&nbsp;access&lt;br&gt;<br>
it&nbsp;to&nbsp;synchronize&nbsp;with&nbsp;the&nbsp;server.&lt;br&gt;<br>
&lt;br&gt;<br>
See&nbsp;my&nbsp;email&nbsp;earlier&nbsp;in&nbsp;this&nbsp;thread.&nbsp;If&nbsp;we&nbsp;change&nbsp;the&nbsp;name&nbsp;from&lt;br&gt;<br>
&#39;clientStorage&#39;&nbsp;to&nbsp;&#39;workerStorage&#39;,&nbsp;while&nbsp;still&nbsp;allowing&nbsp;the&nbsp;main&lt;br&gt;<br>
window&nbsp;to&nbsp;asynchronously&nbsp;get&nbsp;a&nbsp;reference&nbsp;to&nbsp;the&nbsp;storage,&nbsp;then&nbsp;I&nbsp;think&lt;br&gt;<br>
that&nbsp;about&nbsp;matches&nbsp;what&nbsp;you&#39;re&nbsp;proposing&nbsp;(and&nbsp;what&nbsp;item&nbsp;1&nbsp;is&lt;br&gt;<br>
proposing).&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Code&nbsp;wise,&nbsp;what&nbsp;Robert&nbsp;suggested&nbsp;is&nbsp;MUCH&nbsp;simpler.&nbsp; Almost&nbsp;for&nbsp;free&nbsp;in&nbsp;WebKit.&nbsp; Creating&nbsp;an&nbsp;asynchronous&nbsp;access&nbsp;method&nbsp;and&nbsp;exposing&nbsp;this&nbsp;in&nbsp;the&nbsp;page&nbsp;is&nbsp;much&nbsp;more&nbsp;complex.&nbsp; It&nbsp;also&nbsp;defeats&nbsp;the&nbsp;main purpose of&nbsp;LocalStorage&nbsp;(which&nbsp;is&nbsp;to&nbsp;be&nbsp;a&nbsp;simple,&nbsp;light&nbsp;weight&nbsp;way&nbsp;to&nbsp;store&nbsp;data).&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;certainly&nbsp;agree&nbsp;that&nbsp;having&nbsp;some&nbsp;shared&nbsp;memory&nbsp;format&nbsp;between&nbsp;workers&nbsp;and&nbsp;pages&nbsp;would&nbsp;be&nbsp;good,&nbsp;and&nbsp;there&#39;s&nbsp;some&nbsp;use&nbsp;cases&nbsp;which&nbsp;would&nbsp;certainly benefit,&nbsp;but&nbsp;most&nbsp;of&nbsp;the&nbsp;developers&nbsp;I&#39;ve&nbsp;talked&nbsp;to&nbsp;so&nbsp;far&nbsp;were&nbsp;mostly&nbsp;concerned&nbsp;about&nbsp;having&nbsp;_some_&nbsp;form&nbsp;of&nbsp;storage&nbsp;and&nbsp;the&nbsp;shared&nbsp;memory&nbsp;aspects&nbsp;were&nbsp;more&nbsp;nice&nbsp;to&nbsp;have.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;J&lt;/div&gt;&lt;/div&gt;<br>

</tt>
