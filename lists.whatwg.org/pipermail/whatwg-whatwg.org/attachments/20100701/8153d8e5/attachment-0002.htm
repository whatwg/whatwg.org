<tt>
Glad&nbsp;to&nbsp;see&nbsp;my&nbsp;post&nbsp;spurred&nbsp;some&nbsp;good&nbsp;discussion&nbsp;-&nbsp;I&#39;ll&nbsp;try&nbsp;to&nbsp;address&nbsp;topic&nbsp;by&nbsp;topic&nbsp;below,&nbsp;but&nbsp;one&nbsp;of&nbsp;the&nbsp;great&nbsp;points&nbsp;made&nbsp;is&nbsp;that&nbsp;some&nbsp;of&nbsp;the&nbsp;functionality&nbsp;YouTube&nbsp;needs&nbsp;from&nbsp;browsers&nbsp;probably&nbsp;doesn&#39;t&nbsp;belong&nbsp;in&nbsp;the&nbsp;HTML5&nbsp;spec&nbsp;(e.g.&nbsp;streaming,&nbsp;content&nbsp;protection).&nbsp; I&#39;m&nbsp;happy&nbsp;to&nbsp;take&nbsp;those&nbsp;discussions&nbsp;elsewhere&nbsp;if&nbsp;this&nbsp;forum&nbsp;is&nbsp;inappropriate,&nbsp;but&nbsp;it&nbsp;seems&nbsp;like&nbsp;it&nbsp;would&nbsp;likely&nbsp;be&nbsp;the&nbsp;same&nbsp;group&nbsp;of&nbsp;people,&nbsp;just&nbsp;on&nbsp;a&nbsp;different&nbsp;mailing&nbsp;list.&lt;div&gt;<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;1.&nbsp;Standard&nbsp;Video&nbsp;Format&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Yes,&nbsp;this&nbsp;has&nbsp;been&nbsp;debated&nbsp;a&nbsp;lot,&nbsp;and&nbsp;I&nbsp;generally&nbsp;agree&nbsp;that&nbsp;leaving&nbsp;it&nbsp;out&nbsp;of&nbsp;the&nbsp;spec&nbsp;was&nbsp;the&nbsp;best&nbsp;way&nbsp;forward&nbsp;for&nbsp;the&nbsp;spec.&nbsp; Shane&nbsp;Fagan&nbsp;pointed&nbsp;out&nbsp;that&nbsp;Flash&nbsp;supports&nbsp;multiple&nbsp;different&nbsp;codecs,&nbsp;which&nbsp;is&nbsp;true,&nbsp;but&nbsp;every&nbsp;version&nbsp;since&nbsp;Flash&nbsp;7&nbsp;has&nbsp;supported&nbsp;Sorenson&nbsp;Spark&nbsp;video&nbsp;and&nbsp;MP3&nbsp;audio.&nbsp; I&nbsp;don&#39;t&nbsp;think&nbsp;anyone&nbsp;is&nbsp;suggesting&nbsp;that&nbsp;browsers&nbsp;shouldn&#39;t&nbsp;support&nbsp;multiple&nbsp;codecs,&nbsp;but&nbsp;having&nbsp;a&nbsp;consistent&nbsp;baseline&nbsp;is&nbsp;important.&nbsp; On&nbsp;the&nbsp;current&nbsp;path,&nbsp;a&nbsp;content&nbsp;provider&nbsp;knows&nbsp;that&nbsp;by&nbsp;offering&nbsp;H.264&nbsp;and&nbsp;WebM,&nbsp;they&nbsp;can&nbsp;reach&nbsp;all&nbsp;HTML5-capable&nbsp;browsers.&nbsp; This&nbsp;honestly&nbsp;is&nbsp;a&nbsp;reasonable&nbsp;state&nbsp;for&nbsp;YouTube&nbsp;right&nbsp;now&nbsp;-&nbsp;we&nbsp;use&nbsp;H.264&nbsp;in&nbsp;cases&nbsp;outside&nbsp;the&nbsp;&lt;video&gt;&nbsp;tag&nbsp;as&nbsp;well,&nbsp;but&nbsp;it&nbsp;would&nbsp;be&nbsp;nice&nbsp;to&nbsp;converge&nbsp;on&nbsp;a&nbsp;single&nbsp;baseline&nbsp;format&nbsp;at&nbsp;some&nbsp;point&nbsp;in&nbsp;the&nbsp;future.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2.&nbsp;Robust&nbsp;Video&nbsp;Streaming&lt;/div&gt;&lt;div&gt;Andy&nbsp;Berkheimer&nbsp;on&nbsp;our&nbsp;team&nbsp;has&nbsp;been&nbsp;putting&nbsp;some&nbsp;thought&nbsp;into&nbsp;this,&nbsp;so&nbsp;I&#39;ll&nbsp;defer&nbsp;to&nbsp;him&nbsp;for&nbsp;more&nbsp;specific&nbsp;proposals.&nbsp; For&nbsp;an&nbsp;app&nbsp;like&nbsp;YouTube,&nbsp;it&nbsp;is&nbsp;&lt;i&gt;extremely&nbsp;&lt;/i&gt;useful&nbsp;to&nbsp;have&nbsp;fine-grained&nbsp;control&nbsp;over&nbsp;how&nbsp;the&nbsp;browser&nbsp;fetches&nbsp;media&nbsp;from&nbsp;the&nbsp;server.&nbsp; Whether&nbsp;the&nbsp;details&nbsp;belong&nbsp;in&nbsp;the&nbsp;HTML5&nbsp;spec&nbsp;or&nbsp;not&nbsp;depends&nbsp;on&nbsp;the&nbsp;preferred&nbsp;design&nbsp;-&nbsp;something&nbsp;similar&nbsp;to&nbsp;Flash&nbsp;10.1&#39;s&nbsp;appendBytes()&nbsp;mechanism&nbsp;would&nbsp;affect&nbsp;the&nbsp;&lt;video&gt;&nbsp;tag&nbsp;interface,&nbsp;for&nbsp;example,&nbsp;while&nbsp;a&nbsp;transport&nbsp;protocol&nbsp;could&nbsp;be&nbsp;completely&nbsp;separate.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;3.&nbsp;Content&nbsp;Protection&lt;/div&gt;&lt;div&gt;Some&nbsp;of&nbsp;the&nbsp;discussion&nbsp;here&nbsp;seems&nbsp;to&nbsp;have&nbsp;conflated&nbsp;application-controlled&nbsp;video&nbsp;delivery&nbsp;with&nbsp;content&nbsp;protection,&nbsp;but&nbsp;in&nbsp;an&nbsp;ideal&nbsp;world,&nbsp;the&nbsp;two&nbsp;are&nbsp;independent.&nbsp; The&nbsp;basic&nbsp;requirements&nbsp;around&nbsp;content&nbsp;protection&nbsp;that&nbsp;we&nbsp;get&nbsp;from&nbsp;content&nbsp;owners&nbsp;basically&nbsp;consist&nbsp;of&nbsp;encrypting&nbsp;the&nbsp;content&nbsp;and&nbsp;limiting&nbsp;the&nbsp;decryption&nbsp;to&nbsp;a&nbsp;&quot;verified&quot;&nbsp;and&nbsp;authorized&nbsp;client&nbsp;-&nbsp;the&nbsp;realm&nbsp;of&nbsp;traditional&nbsp;DRM.&nbsp; Rather&nbsp;than&nbsp;ask&nbsp;browsers&nbsp;to&nbsp;get&nbsp;into&nbsp;the&nbsp;DRM&nbsp;business,&nbsp;what&nbsp;I&nbsp;think&nbsp;would&nbsp;work&nbsp;best&nbsp;is&nbsp;having&nbsp;a&nbsp;means&nbsp;for&nbsp;3rd&nbsp;party&nbsp;DRM&nbsp;providers&nbsp;to&nbsp;supply&nbsp;browser&nbsp;plug-ins&nbsp;which&nbsp;implement&nbsp;the&nbsp;&lt;video&gt;&nbsp;tag&nbsp;for&nbsp;protected&nbsp;content&nbsp;-&nbsp;not&nbsp;all&nbsp;that&nbsp;different&nbsp;than&nbsp;selecting&nbsp;a&nbsp;pluggable&nbsp;codec.&nbsp; &lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;4.&nbsp;Encapsulation&nbsp;and&nbsp;Embedding&lt;/div&gt;&lt;div&gt;As&nbsp;several&nbsp;people&nbsp;pointed&nbsp;out&nbsp;(and&nbsp;which&nbsp;I&nbsp;tried&nbsp;to&nbsp;get&nbsp;at&nbsp;in&nbsp;my&nbsp;post),&nbsp;this&nbsp;is&nbsp;really&nbsp;an&nbsp;ecosystem&nbsp;issue&nbsp;rather&nbsp;than&nbsp;a&nbsp;change&nbsp;needed&nbsp;in&nbsp;the&nbsp;spec&nbsp;or&nbsp;in&nbsp;browsers.&nbsp; I&nbsp;suspect&nbsp;it&#39;s&nbsp;going&nbsp;to&nbsp;take&nbsp;some&nbsp;time,&nbsp;but&nbsp;the&nbsp;flexibility&nbsp;of&nbsp;embedding&nbsp;content&nbsp;via&nbsp;&lt;iframe&gt;&nbsp;will&nbsp;be&nbsp;a&nbsp;big&nbsp;step&nbsp;forward.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;5.&nbsp;Fullscreen&lt;/div&gt;&lt;div&gt;Maciej&nbsp;actually&nbsp;covered&nbsp;YouTube&#39;s&nbsp;requirements&nbsp;pretty&nbsp;well.&nbsp; I&#39;d&nbsp;add&nbsp;that&nbsp;it&#39;s&nbsp;not&nbsp;just&nbsp;controls&nbsp;that&nbsp;are&nbsp;important&nbsp;for&nbsp;us&nbsp;to&nbsp;maintain:&nbsp;we&nbsp;have&nbsp;a&nbsp;lot&nbsp;of&nbsp;additional&nbsp;content&nbsp;that&nbsp;needs&nbsp;to&nbsp;display&nbsp;with&nbsp;and&nbsp;sometimes&nbsp;on&nbsp;top&nbsp;of&nbsp;the&nbsp;video&nbsp;-&nbsp;our&nbsp;interactive&nbsp;annotations,&nbsp;captions,&nbsp;and&nbsp;ads&nbsp;most&nbsp;notably.&nbsp; Maciej&#39;s&nbsp;proposal&nbsp;also&nbsp;looks&nbsp;fairly&nbsp;reasonable,&nbsp;though&nbsp;some&nbsp;thoughts&nbsp;on&nbsp;it:&lt;/div&gt;<br>
<br>
&lt;div&gt;When&nbsp;limiting&nbsp;keyboard&nbsp;input,&nbsp;I&#39;d&nbsp;suggest&nbsp;devices&nbsp;w/&nbsp;onscreen&nbsp;keyboards&nbsp;simply&nbsp;disable&nbsp;the&nbsp;keyboard.&nbsp; Applications&nbsp;that&nbsp;work&nbsp;well&nbsp;with&nbsp;touch&nbsp;interfaces&nbsp;generally&nbsp;provide&nbsp;gesture&nbsp;alternatives&nbsp;for&nbsp;the&nbsp;limited&nbsp;set&nbsp;of&nbsp;keys&nbsp;that&nbsp;would&nbsp;be&nbsp;available.&nbsp; Alternately,&nbsp;devices&nbsp;could&nbsp;limit&nbsp;the&nbsp;keyboard&nbsp;to&nbsp;the&nbsp;set&nbsp;of&nbsp;allowed&nbsp;keys.&lt;/div&gt;<br>
<br>
&lt;div&gt;Keyboard&nbsp;restrictions&nbsp;are&nbsp;better&nbsp;than&nbsp;not&nbsp;having&nbsp;fullscreen&nbsp;support,&nbsp;though&nbsp;they&nbsp;do&nbsp;limit&nbsp;functionality&nbsp;-&nbsp;it&nbsp;would&nbsp;prevent&nbsp;us&nbsp;from&nbsp;supporting&nbsp;search&nbsp;in&nbsp;fullscreen&nbsp;mode,&nbsp;for&nbsp;example.&nbsp; &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;6.&nbsp;Camera&nbsp;and&nbsp;Micrphone&nbsp;access&lt;/div&gt;<br>
<br>
&lt;div&gt;As&nbsp;pointed&nbsp;out,&nbsp;this&nbsp;is&nbsp;not&nbsp;strictly&nbsp;an&nbsp;issue&nbsp;for&nbsp;&lt;video&gt;&nbsp;tag,&nbsp;though&nbsp;certainly&nbsp;related&nbsp;especially&nbsp;for&nbsp;local&nbsp;preview.&nbsp; I&nbsp;have&nbsp;not&nbsp;been&nbsp;closely&nbsp;following&nbsp;the&nbsp;work&nbsp;on&nbsp;the&nbsp;&lt;device&gt;&nbsp;element,&nbsp;though&nbsp;that&nbsp;seems&nbsp;to&nbsp;be&nbsp;where&nbsp;this&nbsp;is&nbsp;headed.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-John&lt;/div&gt;<br>

</tt>
