<tt>
&lt;div&gt;I&#39;m&nbsp;currently&nbsp;implementing&nbsp;window.localStorage&nbsp;(&lt;a&nbsp;href=&quot;http://dev.w3.org/html5/webstorage/#storage&quot;&nbsp;target=&quot;_blank&quot;&gt;http://dev.w3.org/html5/webstorage/#storage&lt;/a&gt;) in&nbsp;Chromium.&nbsp; While&nbsp;figuring&nbsp;out&nbsp;how&nbsp;to&nbsp;handle&nbsp;concurrency,&nbsp;the&nbsp;issue&nbsp;of&nbsp;integration&nbsp;with&nbsp;workers&nbsp;came&nbsp;up.&nbsp; The&nbsp;big&nbsp;problem&nbsp;is&nbsp;that&nbsp;there&nbsp;are&nbsp;many&nbsp;valid/good&nbsp;uses&nbsp;of&nbsp;workers&nbsp;that&nbsp;could&nbsp;not&nbsp;be&nbsp;used&nbsp;in&nbsp;conjunction&nbsp;with&nbsp;localStorage.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Before&nbsp;I&nbsp;continue,&nbsp;so&nbsp;that&nbsp;this&nbsp;discussion&nbsp;can&nbsp;be&nbsp;focused,&nbsp;let&#39;s&nbsp;just&nbsp;assume&nbsp;that&nbsp;modern&nbsp;day&nbsp;browsers&nbsp;will&nbsp;use&nbsp;the&nbsp;following&nbsp;concurrency&nbsp;model: &lt;span&nbsp;style=&quot;font-family:-webkit-sans-serif;font-size:16px&quot;&gt;&lt;span&nbsp;style=&quot;font-family:arial;font-size:13px&quot;&gt;&quot;&lt;span&nbsp;style=&quot;font-family:-webkit-sans-serif;font-size:16px;color:rgb(0,&nbsp;128,&nbsp;0);font-style:italic;font-weight:bold&quot;&gt;the&nbsp;user&nbsp;agent&nbsp;blocks&nbsp;scripts&nbsp;in&nbsp;other&nbsp;browsing&nbsp;contexts&nbsp;when&nbsp;they&nbsp;try&nbsp;to&nbsp;access&nbsp;the&nbsp;same&nbsp;storage&nbsp;area&nbsp;until&nbsp;the &lt;span&gt;event&nbsp;loop&lt;/span&gt; running&nbsp;the&nbsp;first&nbsp;script&nbsp;has&nbsp;completed&nbsp;running&nbsp;the&nbsp;task&nbsp;that&nbsp;started&nbsp;that&nbsp;script&lt;span&nbsp;style=&quot;color:rgb(0,&nbsp;0,&nbsp;0);font-family:arial;font-style:normal;font-weight:normal;font-size:13px&quot;&gt;&quot;&nbsp; (Workers&nbsp;running&nbsp;within&nbsp;a&nbsp;single&nbsp;event&nbsp;loop&nbsp;makes&nbsp;no&nbsp;sense&nbsp;and&nbsp;I&nbsp;really&nbsp;don&#39;t&nbsp;want&nbsp;this&nbsp;to&nbsp;turn&nbsp;into&nbsp;a&nbsp;debate&nbsp;on&nbsp;the&nbsp;practicality&nbsp;of&nbsp;optimistic&nbsp;transactions.&nbsp;:-)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Anyhow,&nbsp;the&nbsp;very&nbsp;first&nbsp;example&nbsp;in&nbsp;the&nbsp;spec&nbsp;(&lt;a&nbsp;href=&quot;http://dev.w3.org/html5/workers/#a-background-number-crunching-worker&quot;&nbsp;target=&quot;_blank&quot;&gt;http://dev.w3.org/html5/workers/#a-background-number-crunching-worker&lt;/a&gt;)&nbsp;shows&nbsp;work&nbsp;that&#39;s&nbsp;being&nbsp;done&nbsp;in&nbsp;a&nbsp;infinite&nbsp;loop&nbsp;with&nbsp;postMessage&nbsp;being&nbsp;called&nbsp;when&nbsp;each&nbsp;prime&nbsp;is&nbsp;found.&nbsp; If&nbsp;you&nbsp;called&nbsp;localStorage&nbsp;anywhere&nbsp;within&nbsp;that&nbsp;loop&nbsp;(say,&nbsp;to&nbsp;periodically&nbsp;save&nbsp;all&nbsp;primes&nbsp;found),&nbsp;you&nbsp;would&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;safely&nbsp;call&nbsp;window.localStorage&nbsp;in&nbsp;any&nbsp;other&nbsp;worker&nbsp;or&nbsp;the&nbsp;web&nbsp;page.&nbsp; This&nbsp;is&nbsp;because&nbsp;the&nbsp;&quot;task&nbsp;that&nbsp;started&nbsp;the&nbsp;script&quot;&nbsp;never&nbsp;ends.&nbsp;And&nbsp;this&nbsp;its&nbsp;&#39;lock&#39;&nbsp;(on&nbsp;other&nbsp;scripts&nbsp;using&nbsp;local&nbsp;storage)&nbsp;will&nbsp;never&nbsp;be&nbsp;released.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;That&#39;s&nbsp;obviously&nbsp;a&nbsp;somewhat&nbsp;extreme&nbsp;(though&nbsp;I&#39;d&nbsp;argue&nbsp;_not_&nbsp;contrived)&nbsp;example,&nbsp;but&nbsp;it&nbsp;seems&nbsp;to&nbsp;me&nbsp;that&nbsp;a&nbsp;lot&nbsp;of&nbsp;the&nbsp;work&nbsp;done&nbsp;in&nbsp;workers&nbsp;will&nbsp;be&nbsp;fairly&nbsp;long&nbsp;lived.&nbsp; Thus&nbsp;presenting&nbsp;serious&nbsp;latency&nbsp;problems&nbsp;for&nbsp;any&nbsp;page&nbsp;or&nbsp;other&nbsp;worker&nbsp;trying&nbsp;to&nbsp;access&nbsp;localStorage.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;What&nbsp;is&nbsp;the&nbsp;need&nbsp;for&nbsp;localStorage&nbsp;access&nbsp;within&nbsp;workers?&nbsp; Technically&nbsp;if&nbsp;someone&nbsp;really&nbsp;needed&nbsp;to&nbsp;access&nbsp;it,&nbsp;they&nbsp;could&nbsp;always&nbsp;have&nbsp;a&nbsp;function&nbsp;in&nbsp;the&nbsp;web&nbsp;page&nbsp;for&nbsp;accessing&nbsp;it&nbsp;and&nbsp;then&nbsp;use&nbsp;postMessage.&nbsp; In&nbsp;other&nbsp;words,&nbsp;they&nbsp;could&nbsp;build&nbsp;their&nbsp;own&nbsp;ad-hoc&nbsp;async&nbsp;API&nbsp;pretty&nbsp;easily.&nbsp; Another&nbsp;alternative&nbsp;is&nbsp;to&nbsp;just&nbsp;build&nbsp;an&nbsp;async&nbsp;API&nbsp;into&nbsp;the&nbsp;spec&nbsp;(and&nbsp;remove synchronous access&nbsp;to&nbsp;localStorage).&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thoughts?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;J&lt;br&gt;&lt;/div&gt;<br>

</tt>
