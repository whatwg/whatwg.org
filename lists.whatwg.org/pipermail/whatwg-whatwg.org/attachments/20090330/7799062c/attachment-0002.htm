<tt>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Fri,&nbsp;Mar&nbsp;27,&nbsp;2009&nbsp;at&nbsp;6:23&nbsp;PM,&nbsp;Ian&nbsp;Hickson&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;ian@hixie.ch&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
&lt;br&gt;<br>
Another&nbsp;use&nbsp;case&nbsp;would&nbsp;be&nbsp;keeping&nbsp;track&nbsp;of&nbsp;what&nbsp;has&nbsp;been&nbsp;done&nbsp;so&nbsp;far,&nbsp;for&lt;br&gt;<br>
this&nbsp;I&nbsp;guess&nbsp;it&nbsp;would&nbsp;make&nbsp;sense&nbsp;to&nbsp;have&nbsp;a&nbsp;localStorage&nbsp;API&nbsp;for&nbsp;shared&lt;br&gt;<br>
workers&nbsp;(scoped&nbsp;to&nbsp;their&nbsp;name).&nbsp;I&nbsp;haven&#39;t&nbsp;added&nbsp;this&nbsp;yet,&nbsp;though.&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;On&nbsp;a&nbsp;related&nbsp;note,&nbsp;I&nbsp;totally&nbsp;understand&nbsp;the&nbsp;desire&nbsp;to&nbsp;protect&nbsp;developers&nbsp;from&nbsp;race&nbsp;conditions,&nbsp;so&nbsp;I&nbsp;understand&nbsp;why&nbsp;we&#39;ve&nbsp;removed&nbsp;localStorage&nbsp;access&nbsp;from&nbsp;dedicated&nbsp;workers.&nbsp;In&nbsp;the&nbsp;past&nbsp;we&#39;ve&nbsp;discussed&nbsp;having&nbsp;synchronous&nbsp;APIs&nbsp;for&nbsp;structured&nbsp;storage&nbsp;that&nbsp;only&nbsp;workers&nbsp;can&nbsp;use&nbsp;-&nbsp;it&#39;s&nbsp;a&nbsp;much&nbsp;more&nbsp;convenient&nbsp;API,&nbsp;particularly&nbsp;for&nbsp;applications&nbsp;porting&nbsp;to&nbsp;HTML5&nbsp;structured&nbsp;storage&nbsp;from&nbsp;gears.&nbsp;It&nbsp;sounds&nbsp;like&nbsp;if&nbsp;we&nbsp;want&nbsp;to&nbsp;support&nbsp;these&nbsp;APIs&nbsp;in&nbsp;workers,&nbsp;we&#39;d&nbsp;need&nbsp;to&nbsp;enforce&nbsp;the&nbsp;same&nbsp;kind&nbsp;of&nbsp;serializability&nbsp;guarantees&nbsp;that&nbsp;we&nbsp;have&nbsp;for&nbsp;localStorage&nbsp;in&nbsp;browser&nbsp;windows&nbsp;(i.e.&nbsp;add&nbsp;some&nbsp;kind&nbsp;of&nbsp;structured&nbsp;storage&nbsp;mutex&nbsp;similar&nbsp;to&nbsp;the&nbsp;localStorage&nbsp;mutex).&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
&gt;&nbsp;&gt;&nbsp;&gt;&nbsp;Gears&nbsp;had&nbsp;an&nbsp;explicit&nbsp;permissions&nbsp;variable&nbsp;applications&nbsp;could&nbsp;check,&lt;br&gt;<br>
&gt;&nbsp;&gt;&nbsp;&gt;&nbsp;which&nbsp;seems&nbsp;valuable&nbsp;-&nbsp;do&nbsp;we&nbsp;do&nbsp;anything&nbsp;similar&nbsp;elsewhere&nbsp;in&nbsp;HTML5&lt;br&gt;<br>
&gt;&nbsp;&gt;&nbsp;&gt;&nbsp;that&nbsp;we&nbsp;could&nbsp;use&nbsp;as&nbsp;a&nbsp;model&nbsp;here?&lt;br&gt;<br>
&gt;&nbsp;&gt;&lt;br&gt;<br>
&gt;&nbsp;&gt;&nbsp;HTML5&nbsp;so&nbsp;far&nbsp;has&nbsp;avoided&nbsp;anything&nbsp;that&nbsp;requires&nbsp;explicit&nbsp;permission&lt;br&gt;<br>
&gt;&nbsp;&gt;&nbsp;grants,&nbsp;because&nbsp;they&nbsp;are&nbsp;generally&nbsp;a&nbsp;bad&nbsp;idea&nbsp;from&nbsp;a&nbsp;security&lt;br&gt;<br>
&gt;&nbsp;&gt;&nbsp;perspective&nbsp;(users&nbsp;will&nbsp;grant&nbsp;any&nbsp;permissions&nbsp;the&nbsp;system&nbsp;asks&nbsp;them&lt;br&gt;<br>
&gt;&nbsp;&gt;&nbsp;for).&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;The&nbsp;Database&nbsp;spec&nbsp;has&nbsp;a&nbsp;strong&nbsp;implication&nbsp;that&nbsp;applications&nbsp;can&nbsp;request&lt;br&gt;<br>
&gt;&nbsp;a&nbsp;larger&nbsp;DB&nbsp;quota,&nbsp;which&nbsp;will&nbsp;result&nbsp;in&nbsp;the&nbsp;user&nbsp;being&nbsp;prompted&nbsp;for&lt;br&gt;<br>
&gt;&nbsp;permission&nbsp;either&nbsp;immediately,&nbsp;or&nbsp;at&nbsp;the&nbsp;point&nbsp;that&nbsp;the&nbsp;default&nbsp;quota&nbsp;is&lt;br&gt;<br>
&gt;&nbsp;exceeded.&nbsp;So&nbsp;it&#39;s&nbsp;not&nbsp;without&nbsp;precedent,&nbsp;I&nbsp;think.&nbsp;Or&nbsp;maybe&nbsp;I&#39;m&nbsp;just&lt;br&gt;<br>
&gt;&nbsp;misreading&nbsp;this:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;User&nbsp;agents&nbsp;are&nbsp;expected&nbsp;to&nbsp;use&nbsp;the&nbsp;display&nbsp;name&nbsp;and&nbsp;the&nbsp;estimated&lt;br&gt;<br>
&gt;&nbsp;database&nbsp;size&nbsp;to&nbsp;optimize&nbsp;the&nbsp;user&nbsp;experience.&nbsp;For&nbsp;example,&nbsp;a&nbsp;user&nbsp;agent&lt;br&gt;<br>
&gt;&nbsp;could&nbsp;use&nbsp;the&nbsp;estimated&nbsp;size&nbsp;to&nbsp;suggest&nbsp;an&nbsp;initial&nbsp;quota&nbsp;to&nbsp;the&nbsp;user.&lt;br&gt;<br>
&gt;&nbsp;This&nbsp;allows&nbsp;a&nbsp;site&nbsp;that&nbsp;is&nbsp;aware&nbsp;that&nbsp;it&nbsp;will&nbsp;try&nbsp;to&nbsp;use&nbsp;hundreds&nbsp;of&lt;br&gt;<br>
&gt;&nbsp;megabytes&nbsp;to&nbsp;declare&nbsp;this&nbsp;upfront,&nbsp;instead&nbsp;of&nbsp;the&nbsp;user&nbsp;agent&nbsp;prompting&lt;br&gt;<br>
&gt;&nbsp;the&nbsp;user&nbsp;for&nbsp;permission&nbsp;to&nbsp;increase&nbsp;the&nbsp;quota&nbsp;every&nbsp;five&nbsp;megabytes.&lt;br&gt;<br>
&lt;br&gt;<br>
There&nbsp;are&nbsp;many&nbsp;ways&nbsp;to&nbsp;expose&nbsp;this,&nbsp;e.g.&nbsp;asynchronously&nbsp;as&nbsp;a&nbsp;drop-down&lt;br&gt;<br>
infobar,&nbsp;or&nbsp;as&nbsp;a&nbsp;pie&nbsp;chart&nbsp;showing&nbsp;the&nbsp;disk&nbsp;usage&nbsp;that&nbsp;the&nbsp;user&nbsp;can&nbsp;click&lt;br&gt;<br>
on&nbsp;to&nbsp;increase&nbsp;the&nbsp;allocaton&nbsp;whenever&nbsp;they&nbsp;want,&nbsp;etc.&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Certainly.&nbsp;I&nbsp;actually&nbsp;think&nbsp;we&#39;re&nbsp;in&nbsp;agreement&nbsp;here&nbsp;-&nbsp;my&nbsp;point&nbsp;is&nbsp;not&nbsp;that&nbsp;you&nbsp;need&nbsp;a&nbsp;synchronous&nbsp;permission&nbsp;grant&nbsp;(since&nbsp;starting&nbsp;up&nbsp;a&nbsp;worker&nbsp;is&nbsp;an&nbsp;inherently&nbsp;asynchronous&nbsp;operation&nbsp;anyway)&nbsp;-&nbsp;just&nbsp;that&nbsp;there&#39;s&nbsp;precedent&nbsp;in&nbsp;the&nbsp;spec&nbsp;for&nbsp;applications&nbsp;to&nbsp;request&nbsp;access&nbsp;to&nbsp;resources&nbsp;(storage&nbsp;space,&nbsp;persistent&nbsp;workers)&nbsp;that&nbsp;are&nbsp;not&nbsp;necessarily&nbsp;granted&nbsp;to&nbsp;all&nbsp;sites&nbsp;by&nbsp;default.&nbsp;It&nbsp;sounds&nbsp;like&nbsp;the&nbsp;specifics&nbsp;of&nbsp;how&nbsp;the&nbsp;UA&nbsp;chooses&nbsp;to&nbsp;expose&nbsp;this&nbsp;access&nbsp;control&nbsp;(pie&nbsp;charts,&nbsp;async&nbsp;dropdowns,&nbsp;domain&nbsp;whitelists,&nbsp;trusted&nbsp;zones&nbsp;with&nbsp;security&nbsp;levels)&nbsp;left&nbsp;to&nbsp;the&nbsp;individual&nbsp;implementation.&lt;/div&gt;<br>
&lt;div&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;Re:&nbsp;cookies&lt;br&gt;<br>
I&nbsp;suppose&nbsp;that&nbsp;network&nbsp;activity&nbsp;should&nbsp;also&nbsp;wait&nbsp;for&nbsp;the&nbsp;lock.&nbsp;I&#39;ve&nbsp;made&lt;br&gt;<br>
that&nbsp;happen.&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Seems&nbsp;like&nbsp;that&nbsp;would&nbsp;restrict&nbsp;parallelism&nbsp;between&nbsp;network&nbsp;loads&nbsp;and&nbsp;executing&nbsp;javascript,&nbsp;which&nbsp;seems&nbsp;like&nbsp;the&nbsp;wrong&nbsp;direction&nbsp;to&nbsp;go.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;It&nbsp;feels&nbsp;like&nbsp;we&nbsp;are&nbsp;jumping&nbsp;through&nbsp;hoops&nbsp;to&nbsp;protect&nbsp;running&nbsp;script&nbsp;from&nbsp;having&nbsp;document.cookies&nbsp;modified&nbsp;out&nbsp;from&nbsp;underneath&nbsp;it,&nbsp;and&nbsp;now&nbsp;some&nbsp;of&nbsp;the&nbsp;ramifications&nbsp;may&nbsp;have&nbsp;real&nbsp;performance&nbsp;impacts.&nbsp;From&nbsp;a&nbsp;pragmatic&nbsp;point&nbsp;of&nbsp;view,&nbsp;I&nbsp;just&nbsp;want&nbsp;to&nbsp;remind&nbsp;people&nbsp;that&nbsp;many&nbsp;current&nbsp;browsers&nbsp;do&nbsp;not&nbsp;make&nbsp;these&nbsp;types&nbsp;of&nbsp;guarantees&nbsp;about&nbsp;document.cookies,&nbsp;and&nbsp;yet&nbsp;the&nbsp;tubes&nbsp;have&nbsp;not&nbsp;imploded.&lt;/div&gt;<br>
&lt;div&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&gt;&nbsp;Cookies&nbsp;have&nbsp;a&nbsp;cross-domain&nbsp;aspect&nbsp;(multiple&nbsp;subdomains&nbsp;can&nbsp;share&nbsp;cookie&lt;br&gt;<br>
&gt;&nbsp;state&nbsp;at&nbsp;the&nbsp;top&nbsp;domain)&nbsp;-&nbsp;does&nbsp;this&nbsp;impact&nbsp;the&nbsp;specification&nbsp;of&nbsp;the&lt;br&gt;<br>
&gt;&nbsp;storage&nbsp;mutex&nbsp;since&nbsp;we&nbsp;need&nbsp;to&nbsp;lockout&nbsp;multiple&nbsp;domains?&lt;br&gt;<br>
&lt;br&gt;<br>
There&#39;s&nbsp;only&nbsp;one&nbsp;lock,&nbsp;so&nbsp;that&nbsp;should&nbsp;work&nbsp;fine.&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;OK,&nbsp;I&nbsp;was&nbsp;assuming&nbsp;a&nbsp;single&nbsp;per-domain&nbsp;lock&nbsp;(ala&nbsp;localStorage)&nbsp;but&nbsp;it&nbsp;sounds&nbsp;like&nbsp;there&#39;s&nbsp;a&nbsp;group&nbsp;lock,&nbsp;cross-domain.&nbsp;This&nbsp;makes&nbsp;it&nbsp;even&nbsp;more&nbsp;onerous&nbsp;if&nbsp;network&nbsp;activity&nbsp;across&nbsp;all&nbsp;related&nbsp;domains&nbsp;has&nbsp;to&nbsp;serialize&nbsp;on&nbsp;a&nbsp;single&nbsp;lock. &lt;/div&gt;<br>
&lt;div&gt; &lt;/div&gt;&lt;div&gt;-atw&lt;/div&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
