<tt>
&lt;div&gt;I&nbsp;did&nbsp;mention&nbsp;2&nbsp;forms&nbsp;of&nbsp;script&nbsp;load&nbsp;indeed,&nbsp;mostly&nbsp;trying&nbsp;to&nbsp;find&nbsp;a&nbsp;simplest&nbsp;form&nbsp;that&nbsp;will&nbsp;be&nbsp;also&nbsp;consistent&nbsp;with&nbsp;what&amp;#39;s&nbsp;already&nbsp;there&nbsp;in&nbsp;the&nbsp;spec.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;terms&nbsp;of&nbsp;loading&nbsp;scripts,&nbsp;it&nbsp;seems&nbsp;the&nbsp;GlobalScript&nbsp;is&nbsp;quite&nbsp;similar&nbsp;to&nbsp;what&nbsp;SharedWorker&nbsp;does&nbsp;to&nbsp;load&nbsp;its&nbsp;scripts.When&nbsp;creating&nbsp;SharedWorker,&nbsp;one&nbsp;specifies&nbsp;the&nbsp;url&nbsp;right&nbsp;away&nbsp;as&nbsp;a&nbsp;constructor&nbsp;parameter,&nbsp;and&nbsp;this&nbsp;url&nbsp;later&nbsp;is&nbsp;used&nbsp;to&nbsp;form&nbsp;an&nbsp;ID&nbsp;of&nbsp;the&nbsp;SharedWorker. The&nbsp;load&nbsp;is&nbsp;asynchronous&nbsp;and&nbsp;the&nbsp;page&nbsp;is&nbsp;registering&nbsp;an&nbsp;event&nbsp;handler&nbsp;to&nbsp;&amp;#39;hear&amp;#39;&nbsp;from&nbsp;the&nbsp;script&nbsp;when&nbsp;it&nbsp;is&nbsp;ready. The&nbsp;Worker&nbsp;can,&nbsp;in&nbsp;turn,&nbsp;create&nbsp;&amp;#39;nested&amp;#39;&nbsp;Workers&nbsp;(async).&nbsp;Also,&nbsp;it&nbsp;can&nbsp;load&nbsp;more&nbsp;scripts&nbsp;into&nbsp;themselves&nbsp;via&nbsp;importScript(urls)&nbsp;-&nbsp;this&nbsp;time&nbsp;synchronously&nbsp;(this&nbsp;is&nbsp;rough&nbsp;equivalent&nbsp;of&nbsp;&amp;lt;script&amp;gt;&nbsp;tag&nbsp;in&nbsp;a&nbsp;JS&nbsp;context).&nbsp;Note&nbsp;that&nbsp;initial&nbsp;load&nbsp;is&nbsp;different&nbsp;from&nbsp;&amp;#39;importing&amp;#39;&nbsp;more&nbsp;script&nbsp;-&nbsp;initial&nbsp;loading&nbsp;is&nbsp;governed&nbsp;by&nbsp;SOP&nbsp;and&nbsp;is&nbsp;async,&nbsp;while&nbsp;the&nbsp;importScript&nbsp;can&nbsp;go&nbsp;cross-domain,&nbsp;does&nbsp;not&nbsp;create&nbsp;a&nbsp;security&nbsp;context&nbsp;and&nbsp;is&nbsp;synchronous. &lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Whether&nbsp;or&nbsp;not&nbsp;this&nbsp;is&nbsp;the&nbsp;best&nbsp;possible&nbsp;scheme&nbsp;is&nbsp;a&nbsp;separate&nbsp;topic,&nbsp;but&nbsp;it&nbsp;seems&nbsp;close&nbsp;enough&nbsp;to&nbsp;what&nbsp;GlobalScript&nbsp;needs&nbsp;so&nbsp;if&nbsp;nothing&nbsp;else,&nbsp;consistency&nbsp;with&nbsp;this&nbsp;spec&nbsp;might&nbsp;be&nbsp;a&nbsp;good&nbsp;idea.&lt;/div&gt;&lt;div&gt;<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;Dmitry&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Mon,&nbsp;Aug&nbsp;24,&nbsp;2009&nbsp;at&nbsp;6:05&nbsp;AM,&nbsp;Patrick&nbsp;Mueller&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:pmuellr@muellerware.org&quot;&nbsp;target=&quot;_blank&quot;&gt;pmuellr@muellerware.org&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;Patrick&nbsp;Mueller&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
Michael&nbsp;Nordman&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
I&amp;#39;m&nbsp;confused&nbsp;about&nbsp;the&nbsp;manual&nbsp;loading&nbsp;of&nbsp;the&nbsp;script&nbsp;into&nbsp;the&nbsp;context?&nbsp;The&lt;br&gt;<br>
original&nbsp;proposal&nbsp;called&nbsp;for&nbsp;providing&nbsp;a&nbsp;script&nbsp;url&nbsp;when&nbsp;creating/connecting&lt;br&gt;<br>
to&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;global-script...&nbsp;in&nbsp;which&nbsp;case&nbsp;each&nbsp;client&nbsp;page&lt;br&gt;<br>
expresses&nbsp;something&nbsp;more&nbsp;like...&lt;br&gt;<br>
globalScript&nbsp;=&nbsp;new&nbsp;GlobalScript(scriptUrl);&lt;br&gt;<br>
globalScript.onload&nbsp;=&nbsp;myFunctionThatGetsCalledWhenTheScriptIsLoaded;&lt;br&gt;<br>
//&nbsp;some&nbsp;time&nbsp;later&nbsp;onload&nbsp;fires,&nbsp;if&nbsp;the&nbsp;script&nbsp;was&nbsp;already&nbsp;loaded,&nbsp;its&lt;br&gt;<br>
called&nbsp;on&nbsp;the&nbsp;next&nbsp;time&nbsp;thru&nbsp;the&nbsp;message&nbsp;loop&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
Here&amp;#39;s&nbsp;what&nbsp;Dmitry&nbsp;Titov&nbsp;proposed&nbsp;on&nbsp;2009/08/17:&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp;var&nbsp;context&nbsp;=&nbsp;new&nbsp;GlobalScript();&lt;br&gt;<br>
&nbsp; &nbsp;context.onload&nbsp;=&nbsp;function&nbsp;()&nbsp;{...}&lt;br&gt;<br>
&nbsp; &nbsp;context.onerror&nbsp;=&nbsp;function&nbsp;()&nbsp;{...}&lt;br&gt;<br>
&nbsp; &nbsp;context.load(&amp;#39;foo.js&amp;#39;);&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;/div&gt;<br>
Dmitry&nbsp;had&nbsp;a&nbsp;later&nbsp;note&nbsp;which&nbsp;combined&nbsp;creation&nbsp;of&nbsp;the&nbsp;context&nbsp;and&nbsp;loading&nbsp;of&nbsp;the&nbsp;script.&nbsp; But&nbsp;I&nbsp;suspect&nbsp;one&nbsp;thing&nbsp;people&nbsp;will&nbsp;want&nbsp;to&nbsp;do,&nbsp;in&nbsp;development&nbsp;anyway,&nbsp;is&nbsp;load&nbsp;multiple&nbsp;scripts&nbsp;into&nbsp;a&nbsp;context&nbsp;-&nbsp;like&nbsp;you&nbsp;can&nbsp;in&nbsp;workers.&nbsp; Which&nbsp;would&nbsp;mean&nbsp;we&amp;#39;d&nbsp;still&nbsp;need&nbsp;a&nbsp;function&nbsp;to&nbsp;load&nbsp;a&nbsp;script,&nbsp;or&nbsp;the&nbsp;only&nbsp;way&nbsp;to&nbsp;load&nbsp;a&nbsp;script&nbsp;would&nbsp;be&nbsp;by&nbsp;also&nbsp;creating&nbsp;a&nbsp;new&nbsp;context&nbsp;-&nbsp;which&nbsp;is&nbsp;much&nbsp;like&nbsp;the&nbsp;serverJS&nbsp;module&nbsp;concept.&lt;div&gt;<br>
<br>
&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
--&nbsp;&lt;br&gt;<br>
Patrick&nbsp;Mueller&nbsp;-&nbsp;&lt;a&nbsp;href=&quot;http://muellerware.org&quot;&nbsp;target=&quot;_blank&quot;&gt;http://muellerware.org&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>

</tt>
