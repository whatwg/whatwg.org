<tt>
&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;font-family:&nbsp;arial,&nbsp;sans-serif;&nbsp;font-size:&nbsp;13px;&nbsp;border-collapse:&nbsp;collapse;&nbsp;&quot;&gt;&lt;div&gt;Hello,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&amp;#39;m&nbsp;very&nbsp;excited&nbsp;about&nbsp;the&nbsp;concept&nbsp;of&nbsp;web&nbsp;sockets&nbsp;and&nbsp;look&nbsp;forward&nbsp;to&nbsp;building&nbsp;apps&nbsp;with&nbsp;it&nbsp;but&nbsp;the&nbsp;web&nbsp;sockets&nbsp;API&nbsp;at &lt;a&nbsp;href=&quot;http://dev.w3.org/html5/websockets/&quot;&nbsp;target=&quot;_blank&quot;&nbsp;style=&quot;color:&nbsp;rgb(0,&nbsp;137,&nbsp;170);&nbsp;&quot;&gt;http://dev.w3.org/html5/websockets/&lt;/a&gt; has&nbsp;some&nbsp;issues.&nbsp; Many&nbsp;issues&nbsp;seem&nbsp;to&nbsp;be&nbsp;inherited&nbsp;from&nbsp;the&nbsp;original&nbsp;XmlHttpRequest&nbsp;specification,&nbsp;which&nbsp;was&nbsp;extremely&nbsp;useful&nbsp;but&nbsp;not&nbsp;a&nbsp;very&nbsp;good&nbsp;spec.&nbsp; I&amp;#39;m&nbsp;sure&nbsp;I&amp;#39;m&nbsp;not&nbsp;the&nbsp;only&nbsp;one&nbsp;who&nbsp;has&nbsp;spent&nbsp;far&nbsp;too&nbsp;many&nbsp;hours&nbsp;dealing&nbsp;with&nbsp;underspecified&nbsp;or&nbsp;poorly&nbsp;implemented&nbsp;XHR&nbsp;flavors&nbsp;and&nbsp;would&nbsp;love&nbsp;to&nbsp;avoid&nbsp;doing&nbsp;that&nbsp;in&nbsp;the&nbsp;future.&nbsp; I&nbsp;know&nbsp;several&nbsp;vendors&nbsp;have&nbsp;started&nbsp;work&nbsp;on&nbsp;implementations&nbsp;already&nbsp;but&nbsp;I&nbsp;hope&nbsp;that&nbsp;this&nbsp;feedback&nbsp;is&nbsp;still&nbsp;useful.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;0)&nbsp;postMessage()&nbsp;looks&nbsp;as&nbsp;if&nbsp;it&nbsp;is&nbsp;intended&nbsp;to&nbsp;mimic&nbsp;MessagePort.postMessage()&nbsp;or&nbsp;,&nbsp;but&nbsp;the&nbsp;arguments&nbsp;and&nbsp;error&nbsp;conditions&nbsp;are&nbsp;different.&nbsp; While&nbsp;it&nbsp;would&nbsp;be&nbsp;conceptually&nbsp;nice&nbsp;to&nbsp;treat&nbsp;a&nbsp;web&nbsp;socket&nbsp;in&nbsp;the&nbsp;same&nbsp;way&nbsp;as&nbsp;a&nbsp;message&nbsp;port,&nbsp;it&amp;#39;s&nbsp;not&nbsp;possible&nbsp;to&nbsp;treat&nbsp;the&nbsp;two&nbsp;postMessage()&nbsp;functions&nbsp;in&nbsp;the&nbsp;same&nbsp;way.&nbsp; I&amp;#39;d&nbsp;recommend&nbsp;the&nbsp;WebSocket&nbsp;version&nbsp;be&nbsp;renamed&nbsp;to&nbsp;something&nbsp;like&nbsp;&amp;quot;send()&amp;quot;&nbsp;to&nbsp;avoid&nbsp;confusion&nbsp;and&nbsp;false&nbsp;expectations.&nbsp; There&amp;#39;s&nbsp;similar&nbsp;oddness&nbsp;with&nbsp;receiving&nbsp;events&nbsp;that&nbsp;satisfy&nbsp;the&nbsp;MessageEvent&nbsp;interface&nbsp;-&nbsp;since&nbsp;all&nbsp;fields&nbsp;except&nbsp;&amp;#39;data&amp;#39;&nbsp;will&nbsp;necessarily&nbsp;be&nbsp;invalid&nbsp;I&nbsp;don&amp;#39;t&nbsp;see&nbsp;the&nbsp;value&nbsp;in&nbsp;receiving&nbsp;something&nbsp;more&nbsp;complex.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1)&nbsp;The&nbsp;&amp;#39;readyState&amp;#39;&nbsp;attribute&nbsp;can&nbsp;never&nbsp;actually&nbsp;be&nbsp;used&nbsp;by&nbsp;an&nbsp;application&nbsp;and&nbsp;is&nbsp;redundant.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Initially,&nbsp;the&nbsp;&amp;#39;readyState&amp;#39;&nbsp;attribute&nbsp;is&nbsp;set&nbsp;to&nbsp;CONNECTING,&nbsp;but&nbsp;while&nbsp;the&nbsp;object&nbsp;is&nbsp;in&nbsp;this&nbsp;state&nbsp;the&nbsp;user&nbsp;is&nbsp;not&nbsp;permitted&nbsp;to&nbsp;interact&nbsp;with&nbsp;the&nbsp;WebSocket&nbsp;in&nbsp;any&nbsp;way.&nbsp; The&nbsp;only&nbsp;useful&nbsp;thing&nbsp;that&nbsp;a&nbsp;user&nbsp;could&nbsp;do&nbsp;is&nbsp;set&nbsp;event&nbsp;handlers&nbsp;and&nbsp;wait&nbsp;for&nbsp;the&nbsp;&amp;#39;open&amp;#39;&nbsp;event&nbsp;to&nbsp;fire.&nbsp; When&nbsp;the&nbsp;WebSocket&nbsp;becomes&nbsp;connected,&nbsp;the&nbsp;readyState&nbsp;becomes&nbsp;1&nbsp;and&nbsp;the&nbsp;&amp;#39;open&amp;#39;&nbsp;event&nbsp;is&nbsp;fired.&nbsp; Once&nbsp;the&nbsp;WebSocket&nbsp;is&nbsp;open,&nbsp;the&nbsp;spec&nbsp;states&nbsp;that&nbsp;whenever&nbsp;the&nbsp;connection&nbsp;is&nbsp;closed&nbsp;the&nbsp;readyState&nbsp;changes&nbsp;to&nbsp;CLOSED&nbsp;and&nbsp;a&nbsp;&amp;#39;close&amp;#39;&nbsp;event&nbsp;is&nbsp;enqueued.&nbsp;However,&nbsp;users&nbsp;can&amp;#39;t&nbsp;usefully&nbsp;check&nbsp;the&nbsp;readyState&nbsp;to&nbsp;see&nbsp;if&nbsp;the&nbsp;WebSocket&nbsp;is&nbsp;still&nbsp;open&nbsp;because&nbsp;there&nbsp;are&nbsp;not&nbsp;and&nbsp;cannot&nbsp;be&nbsp;any&nbsp;synchronization guarantees about&nbsp;when&nbsp;the&nbsp;WebSocket&nbsp;may&nbsp;close.&nbsp; A&nbsp;user&nbsp;will&nbsp;have&nbsp;to&nbsp;wrap&nbsp;all&nbsp;calls&nbsp;to&nbsp;postMessage()&nbsp;(or&nbsp;send()&nbsp;if&nbsp;the&nbsp;function&nbsp;is&nbsp;renamed)&nbsp;in&nbsp;a&nbsp;try/catch&nbsp;block&nbsp;in&nbsp;order&nbsp;to&nbsp;handle&nbsp;INVALID_STATE_ERRs.&nbsp; Once&nbsp;the&nbsp;&amp;#39;close&amp;#39;&nbsp;event&nbsp;has&nbsp;been&nbsp;received&nbsp;the&nbsp;readyState&nbsp;attribute&nbsp;is&nbsp;useless&nbsp;since&nbsp;the&nbsp;state&nbsp;of&nbsp;the&nbsp;WebSocket&nbsp;is&nbsp;known&nbsp;and&nbsp;can&nbsp;never&nbsp;change.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I think &amp;#39;readyState&amp;#39;&nbsp;should&nbsp;just&nbsp;go&nbsp;away&nbsp;since&nbsp;an&nbsp;application&nbsp;will&nbsp;have&nbsp;to&nbsp;keep&nbsp;track&nbsp;of&nbsp;state&nbsp;updates&nbsp;through&nbsp;the&nbsp;fired&nbsp;events&nbsp;and&nbsp;use&nbsp;try/catch&nbsp;blocks&nbsp;around&nbsp;all&nbsp;API&nbsp;calls&nbsp;anyway.&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;div&gt;-&nbsp;James&lt;/div&gt;&lt;/span&gt;<br>

</tt>
