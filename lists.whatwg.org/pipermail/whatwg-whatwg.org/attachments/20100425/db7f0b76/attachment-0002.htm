<tt>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Sun,&nbsp;Apr&nbsp;25,&nbsp;2010&nbsp;at&nbsp;2:33&nbsp;AM,&nbsp;David&nbsp;Bruant&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:bruant@enseirb-matmeca.fr&quot;&nbsp;target=&quot;_blank&quot;&gt;bruant@enseirb-matmeca.fr&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
<br>
<br>
<br>
<br>
<br>
&nbsp;&nbsp;<br>
<br>
&lt;div&nbsp;text=&quot;#000000&quot;&nbsp;bgcolor=&quot;#ffffff&quot;&gt;<br>
Le&nbsp;24/04/2010&nbsp;22:50,&nbsp;J&nbsp;Z&nbsp;a&nbsp;écrit :<br>
&lt;div&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;On&nbsp;Fri,&nbsp;Apr&nbsp;23,&nbsp;2010&nbsp;at&nbsp;10:30&nbsp;PM,&nbsp;David&nbsp;Bruant&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:bruant@enseirb-matmeca.fr&quot;&nbsp;target=&quot;_blank&quot;&gt;bruant@enseirb-matmeca.fr&lt;/a&gt;&gt;&lt;/span&gt;<br>
wrote:&lt;br&gt;<br>
&nbsp;&nbsp;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;<br>
&nbsp;&nbsp;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;Hi,&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
In&nbsp;the&nbsp;HTML5&nbsp;&quot;status&nbsp;of&nbsp;this&nbsp;document&quot;&nbsp;section,&nbsp;one&nbsp;can&nbsp;read&nbsp;:&nbsp;&quot;This<br>
specification&nbsp;is&nbsp;intended&nbsp;to&nbsp;replace&nbsp;(be&nbsp;the&nbsp;new&nbsp;version&nbsp;of)&nbsp;what&nbsp;was<br>
previously&nbsp;the&nbsp;[...]&nbsp;DOM2&nbsp;HTML&nbsp;specifications.&quot;&lt;br&gt;<br>
This&nbsp;spec&nbsp;can&nbsp;be&nbsp;found&nbsp;here&nbsp;:&nbsp;&lt;a&nbsp;href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.w3.org/TR/DOM-Level-2-HTML/&lt;/a&gt;&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
It&nbsp;defines&nbsp;ECMAScript&nbsp;language&nbsp;Binding&nbsp;(&lt;a&nbsp;href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/ecma-script-binding.html&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.w3.org/TR/DOM-Level-2-HTML/ecma-script-binding.html&lt;/a&gt;).<br>
This&nbsp;document&nbsp;explains&nbsp;how&nbsp;to&nbsp;implement&nbsp;the&nbsp;DOM&nbsp;HTML&nbsp;interfaces&nbsp;in&nbsp;an<br>
ECMAScript-compliant&nbsp;environment.&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
Because&nbsp;HTML5&nbsp;is&nbsp;intended&nbsp;to&nbsp;replace&nbsp;DOM2&nbsp;HTML,&nbsp;it&nbsp;can&nbsp;&quot;freely&quot;&nbsp;change<br>
ECMAScript&nbsp;bindings.&nbsp;My&nbsp;suggestion&nbsp;is&nbsp;the&nbsp;following&nbsp;:&lt;br&gt;<br>
Make&nbsp;that&nbsp;HTMLCollection&nbsp;(and&nbsp;all&nbsp;HTML*Collection,&nbsp;as&nbsp;a&nbsp;consequence&nbsp;of<br>
inheritence&nbsp;of&nbsp;HTMLCollection)&nbsp;inherit&nbsp;from&nbsp;the&nbsp;ECMAScript&nbsp;Array<br>
prototype.&nbsp;This&nbsp;way,&nbsp;it&nbsp;will&nbsp;make&nbsp;available&nbsp;all&nbsp;Array&nbsp;extra&nbsp;methods<br>
(forEach,&nbsp;map,&nbsp;filter...)&nbsp;added&nbsp;in&nbsp;ECMAScript5&nbsp;(and&nbsp;next&nbsp;versions&nbsp;which<br>
should&nbsp;go&nbsp;in&nbsp;the&nbsp;same&nbsp;direction).&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
As&nbsp;far&nbsp;as&nbsp;I&nbsp;know,&nbsp;adding&nbsp;this&nbsp;won&#39;t&nbsp;break&nbsp;any&nbsp;existing&nbsp;code.&nbsp;The<br>
semantics&nbsp;of&nbsp;a&nbsp;Collection&nbsp;and&nbsp;the&nbsp;way&nbsp;it&nbsp;is&nbsp;used&nbsp;is&nbsp;very&nbsp;close&nbsp;from<br>
ECMAScript&nbsp;Arrays.&lt;br&gt;<br>
I&nbsp;don&#39;t&nbsp;think&nbsp;that&nbsp;the&nbsp;notion&nbsp;of&nbsp;&quot;live&nbsp;object&quot;&nbsp;and&nbsp;ECMAScript&nbsp;Array&nbsp;are<br>
incompatible&nbsp;either.&lt;br&gt;<br>
Once&nbsp;again,&nbsp;I&nbsp;am&nbsp;talking&nbsp;about&nbsp;ECMAScript&nbsp;binding.&nbsp;I&nbsp;have&nbsp;no&nbsp;intention<br>
to&nbsp;touch&nbsp;the&nbsp;HTMLCollection&nbsp;interface&nbsp;or&nbsp;other&nbsp;languages&nbsp;bindings.&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
Would&nbsp;the&nbsp;WHATWG&nbsp;have&nbsp;the&nbsp;power&nbsp;to&nbsp;decide&nbsp;something&nbsp;similar&nbsp;regarding<br>
NodeList&nbsp;?&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
Any&nbsp;thoughts&nbsp;?&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;<br>
Thanks,&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
David&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/font&gt;&lt;/blockquote&gt;<br>
&nbsp;&nbsp;&lt;/div&gt;<br>
&nbsp;&nbsp;&lt;br&gt;<br>
As&nbsp;far&nbsp;as&nbsp;I&nbsp;can&nbsp;see,&nbsp;liveness&nbsp;of&nbsp;HTMLCollection&nbsp;actually&nbsp;does&nbsp;matter.<br>
When&nbsp;iterating&nbsp;over&nbsp;HTMLCollection,&nbsp;it&#39;s&nbsp;more&nbsp;or&nbsp;less&nbsp;a&nbsp;rule&nbsp;of&nbsp;thumb<br>
to&nbsp;&quot;save&quot;&nbsp;length,&nbsp;to&nbsp;avoid&nbsp;any&nbsp;kind&nbsp;of&nbsp;mismatch&nbsp;(in&nbsp;case&nbsp;code&nbsp;within<br>
loop&nbsp;modifies&nbsp;document&nbsp;and&nbsp;so&nbsp;affects&nbsp;length&nbsp;of&nbsp;collection&nbsp;in&nbsp;question):&lt;br&gt;<br>
&nbsp;&nbsp;&lt;br&gt;<br>
for&nbsp;(var&nbsp;i&nbsp;=&nbsp;0,&nbsp;length&nbsp;=&nbsp;collection.length;&nbsp;i&nbsp;&lt;&nbsp;length;&nbsp;i++)&lt;br&gt;<br>
//&nbsp;instead&nbsp;of:&lt;br&gt;<br>
for&nbsp;(var&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;collection.length;&nbsp;i++)&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;<br>
I&nbsp;think&nbsp;I&nbsp;can&nbsp;take&nbsp;your&nbsp;point&nbsp;as&nbsp;a&nbsp;&quot;pro&quot;&nbsp;more&nbsp;than&nbsp;a&nbsp;&quot;con&quot;,&nbsp;because&nbsp;in<br>
ES5,&nbsp;right&nbsp;before&nbsp;the&nbsp;definition&nbsp;of&nbsp;each&nbsp;array&nbsp;extra&nbsp;method,&nbsp;a<br>
paragraph&nbsp;like&nbsp;the&nbsp;following&nbsp;can&nbsp;be&nbsp;found&nbsp;:&nbsp;&lt;br&gt;<br>
&quot;The&nbsp;range&nbsp;of&nbsp;elements&nbsp;processed&nbsp;by&nbsp;forEach&nbsp;is&nbsp;set&nbsp;before&nbsp;the&nbsp;first<br>
call&nbsp;to&nbsp;callbackfn.&nbsp;Elements&nbsp;which&nbsp;are&nbsp;appended&nbsp;to&nbsp;the&nbsp;array&nbsp;after&nbsp;the<br>
call&nbsp;to&nbsp;forEach&nbsp;begins&nbsp;will&nbsp;not&nbsp;be&nbsp;visited&nbsp;by&nbsp;callbackfn.&nbsp;If&nbsp;existing<br>
elements&nbsp;of&lt;br&gt;<br>
the&nbsp;array&nbsp;are&nbsp;changed,&nbsp;their&nbsp;value&nbsp;as&nbsp;passed&nbsp;to&nbsp;callback&nbsp;will&nbsp;be&nbsp;the<br>
value&nbsp;at&nbsp;the&nbsp;time&nbsp;forEach&nbsp;visits&nbsp;them;&nbsp;elements&nbsp;that&nbsp;are&nbsp;deleted&nbsp;after<br>
the&nbsp;call&nbsp;to&nbsp;forEach&nbsp;begins&nbsp;and&nbsp;before&nbsp;being&nbsp;visited&nbsp;are&nbsp;not&nbsp;visited.&quot;&lt;br&gt;<br>
&lt;br&gt;<br>
This&nbsp;point&nbsp;is&nbsp;confirmed&nbsp;by&nbsp;every&nbsp;algorithm&nbsp;where&nbsp;the&nbsp;length&nbsp;is&nbsp;&quot;saved&quot;<br>
once&nbsp;for&nbsp;all&nbsp;before&nbsp;the&nbsp;loop&nbsp;and&nbsp;not&nbsp;got&nbsp;from&nbsp;the&nbsp;.length&nbsp;property&nbsp;each<br>
time.&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Oh,&nbsp;perfect&nbsp;:)&lt;br&gt;<br>
&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;br&gt;<br>
If&nbsp;HTMLCollection&nbsp;was&nbsp;inheriting&nbsp;from&nbsp;Array,&nbsp;and&nbsp;methods&nbsp;like<br>
`forEach`,&nbsp;`map`,&nbsp;etc.&nbsp;were&nbsp;to&nbsp;operate&nbsp;on&nbsp;a&nbsp;live&nbsp;object,&nbsp;there&nbsp;would<br>
definitely&nbsp;be&nbsp;undesired&nbsp;consequences.&nbsp;We&nbsp;can&nbsp;see&nbsp;this&nbsp;in,&nbsp;say,&nbsp;Firefox<br>
(which&nbsp;allows&nbsp;to&nbsp;set&nbsp;[[Prototype]]&nbsp;of&nbsp;`HTMLCollection`&nbsp;to<br>
`Array.prototype`):&lt;br&gt;<br>
&nbsp;&nbsp;&lt;br&gt;<br>
HTMLCollection.prototype.__proto__&nbsp;=&nbsp;Array.prototype;&lt;br&gt;<br>
&nbsp;&nbsp;&lt;br&gt;<br>
document.getElementsByTagName(&#39;div&#39;).forEach(function(el)&nbsp;{&lt;br&gt;<br>
 &nbsp;el.parentNode.removeChild(el);&nbsp;//&nbsp;doesn&#39;t&nbsp;work&nbsp;as&nbsp;expected&lt;br&gt;<br>
});&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;div&nbsp;text=&quot;#000000&quot;&nbsp;bgcolor=&quot;#ffffff&quot;&gt;<br>
This&nbsp;code&nbsp;doesn&#39;t&nbsp;work&nbsp;as&nbsp;expected&nbsp;as&nbsp;the&nbsp;following&nbsp;doesn&#39;t&nbsp;either&nbsp;:&nbsp;&lt;br&gt;<br>
var&nbsp;divs&nbsp;=&nbsp;document.getElementsByTagName(&#39;div&#39;);&lt;br&gt;<br>
for(var&nbsp;i=0,&nbsp;l&nbsp;=&nbsp;divs.length&nbsp;;&nbsp;i&nbsp;&lt;&nbsp;l&nbsp;;&nbsp;i++){&lt;br&gt;<br>
   &nbsp;var&nbsp;el&nbsp;=&nbsp;divs[i];&nbsp;//&nbsp;Due&nbsp;to&nbsp;the&nbsp;live-ness,&nbsp;this&nbsp;might&nbsp;not&nbsp;work&nbsp;as<br>
expected&lt;br&gt;<br>
   &nbsp;el.parentNode.removeChild(el);&lt;br&gt;<br>
}&lt;br&gt;<br>
&lt;br&gt;<br>
This&nbsp;code&nbsp;written&nbsp;as&nbsp;a&nbsp;for-loop&nbsp;behave&nbsp;exactly&nbsp;the&nbsp;same&nbsp;way&nbsp;(in&nbsp;this<br>
case)&nbsp;as&nbsp;the&nbsp;.forEach&nbsp;one,&nbsp;so&nbsp;it&#39;s&nbsp;as&nbsp;buggy&nbsp;as&nbsp;the&nbsp;forEach&nbsp;one.&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Sorry,&nbsp;that&nbsp;was&nbsp;a&nbsp;stupid&nbsp;example&nbsp;indeed.&nbsp;It&nbsp;should&nbsp;have&nbsp;been&nbsp;at&nbsp;least&nbsp;something&nbsp;along&nbsp;the&nbsp;lines&nbsp;of:&lt;br&gt;&lt;br&gt;var&nbsp;els&nbsp;=&nbsp;document.getElementsByTagName(&#39;span&#39;);&lt;br&gt;<br>
&lt;br&gt;for&nbsp;(var&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;els.length;&nbsp;/*&nbsp;can&#39;t&nbsp;access&nbsp;length&nbsp;dynamically&nbsp;*/&nbsp;i++)&nbsp;{&lt;br&gt; &nbsp;var&nbsp;spanEl&nbsp;=&nbsp;document.createElement(&#39;span&#39;);&lt;br&gt; &nbsp;spanEl.appendChild(document.createTextNode(&#39;foo&#39;));&lt;br&gt; &nbsp;document.body.appendChild(spanEl);&lt;br&gt;<br>
}&lt;br&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;div&nbsp;text=&quot;#000000&quot;&nbsp;bgcolor=&quot;#ffffff&quot;&gt;<br>
My&nbsp;point&nbsp;is&nbsp;that&nbsp;forEach&nbsp;doesn&#39;t&nbsp;create&nbsp;more&nbsp;bugs&nbsp;than&nbsp;before,&nbsp;which&nbsp;is<br>
what&nbsp;you&nbsp;seem&nbsp;to&nbsp;imply.&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;If&nbsp;it&nbsp;operates&nbsp;on&nbsp;&quot;static&quot;&nbsp;collection,&nbsp;then&nbsp;I&nbsp;don&#39;t&nbsp;see&nbsp;problems&nbsp;either.&lt;br&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;div&nbsp;text=&quot;#000000&quot;&nbsp;bgcolor=&quot;#ffffff&quot;&gt;<br>
Adding&nbsp;.forEach&nbsp;and&nbsp;other&nbsp;Array&nbsp;extras&nbsp;wouldn&#39;t&nbsp;prevent&nbsp;programmers&nbsp;to<br>
remember&nbsp;that&nbsp;they&nbsp;are&nbsp;dealing&nbsp;with&nbsp;a&nbsp;live&nbsp;object&nbsp;even&nbsp;within&nbsp;a<br>
.forEach,&nbsp;the&nbsp;same&nbsp;way&nbsp;they&nbsp;are&nbsp;not&nbsp;supposed&nbsp;to&nbsp;forget&nbsp;it&nbsp;with&nbsp;a<br>
for-loop.&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Sure.&lt;br&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;div&nbsp;text=&quot;#000000&quot;&nbsp;bgcolor=&quot;#ffffff&quot;&gt;<br>
<br>
&lt;br&gt;<br>
I&nbsp;have&nbsp;thought&nbsp;a&nbsp;lot&nbsp;about&nbsp;weirdnesses&nbsp;that&nbsp;people&nbsp;could&nbsp;think&nbsp;about<br>
like&nbsp;trying&nbsp;to&nbsp;assign&nbsp;a&nbsp;value&nbsp;to&nbsp;the&nbsp;HTMLCollection&nbsp;(divs[14]&nbsp;=<br>
myOtherDiv),&nbsp;but&nbsp;once&nbsp;again,&nbsp;it&nbsp;wouldn&#39;t&nbsp;be&nbsp;more&nbsp;allowed&nbsp;than&nbsp;it<br>
currently&nbsp;is&nbsp;(I&nbsp;have&nbsp;no&nbsp;idea&nbsp;of&nbsp;what&nbsp;happens&nbsp;today,&nbsp;but&nbsp;if&nbsp;an&nbsp;error&nbsp;is<br>
thrown&nbsp;in&nbsp;a&nbsp;for-loop,&nbsp;it&nbsp;should&nbsp;throw&nbsp;an&nbsp;error&nbsp;as&nbsp;well&nbsp;in&nbsp;a&nbsp;call&nbsp;within<br>
a&nbsp;forEach).&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;How&nbsp;would&nbsp;destructive&nbsp;methods&nbsp;like&nbsp;`push`&nbsp;or&nbsp;`sort`&nbsp;behave?&nbsp;Would&nbsp;`document.body.childNodes.push(document.createTextNode(&#39;foo&#39;))`&nbsp;append&nbsp;text&nbsp;node&nbsp;to&nbsp;a&nbsp;body&nbsp;element?&nbsp;Or&nbsp;would&nbsp;it&nbsp;be&nbsp;a&nbsp;noop?&lt;br&gt;<br>
 &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;div&nbsp;text=&quot;#000000&quot;&nbsp;bgcolor=&quot;#ffffff&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;<br>
//&nbsp;turning&nbsp;live&nbsp;collection&nbsp;into&nbsp;static&nbsp;array&nbsp;fixes&nbsp;this&lt;br&gt;<br>
&nbsp;&nbsp;&lt;br&gt;<br>
Array.slice(document.getElementsByTagName(&#39;div&#39;)).forEach(function(el)&nbsp;{&lt;br&gt;<br>
 &nbsp;el.parentNode.removeChild(el);&lt;br&gt;<br>
});&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>
<br>
I&nbsp;have&nbsp;not&nbsp;found&nbsp;anything&nbsp;about&nbsp;a&nbsp;Array.slice&nbsp;method&nbsp;and&nbsp;the&nbsp;ES5<br>
.splice&nbsp;method&nbsp;doesn&#39;t&nbsp;seem&nbsp;to&nbsp;by&nbsp;usable&nbsp;in&nbsp;the&nbsp;way&nbsp;you&nbsp;describe.&nbsp;What<br>
did&nbsp;you&nbsp;mean&nbsp;?&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;That&#39;s&nbsp;array&nbsp;generics&nbsp;in&nbsp;Mozilla&nbsp;(&lt;a&nbsp;href=&quot;https://developer.mozilla.org/en/New_in_JavaScript_1.6#Array_and_String_generics&quot;&gt;https://developer.mozilla.org/en/New_in_JavaScript_1.6#Array_and_String_generics&lt;/a&gt;).&nbsp;I&nbsp;used&nbsp;it&nbsp;for&nbsp;brevity,&nbsp;but&nbsp;it&nbsp;could&nbsp;have&nbsp;been&nbsp;standard&nbsp;`Array.prototype.slice.call(collection,&nbsp;0)`&nbsp;instead&nbsp;(in&nbsp;environments&nbsp;which&nbsp;allow&nbsp;such&nbsp;conversion&nbsp;of&nbsp;course).&nbsp;&lt;br&gt;<br>
&lt;br&gt;[...]&lt;br&gt;&lt;br&gt;--&nbsp;&lt;br&gt;kangax&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;<br>

</tt>
