<tt>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;div&nbsp;bgcolor=&quot;#ffffff&quot;&nbsp;text=&quot;#000000&quot;&gt;I&nbsp;fail&nbsp;to&nbsp;see&nbsp;how&nbsp;virtual&nbsp;hosting&nbsp;will&nbsp;work&nbsp;for&nbsp;this&nbsp;anyway.&nbsp;I&nbsp;mean<br>
we&amp;#39;re&nbsp;not&nbsp;talking&nbsp;about&nbsp;Apache/IIS&nbsp;here,&nbsp;we&amp;#39;re&nbsp;talking&nbsp;about&nbsp;custom<br>
applications,&nbsp;scripts&nbsp;or&nbsp;devices&nbsp;-&nbsp;possibly&nbsp;implemented&nbsp;in&nbsp;firmware&nbsp;or<br>
&amp;quot;a&nbsp;few&nbsp;lines&nbsp;of&nbsp;perl&amp;quot;.&nbsp;Adding&nbsp;vhost&nbsp;control&nbsp;to&nbsp;the&nbsp;protocol&nbsp;is&nbsp;just<br>
silly&nbsp;since&nbsp;the&nbsp;webserver&nbsp;won&amp;#39;t&nbsp;ever&nbsp;see&nbsp;the&nbsp;request&nbsp;and&nbsp;the&nbsp;customer<br>
application&nbsp;should&nbsp;be&nbsp;able&nbsp;to&nbsp;use&nbsp;any&nbsp;method&nbsp;it&nbsp;likes&nbsp;to&nbsp;differentiate<br>
its&nbsp;services.&nbsp;Even&nbsp;URI&nbsp;addressing&nbsp;is&nbsp;silly&nbsp;since&nbsp;again&nbsp;the&nbsp;application<br>
may&nbsp;have&nbsp;no&nbsp;concept&nbsp;of&nbsp;&amp;quot;paths&amp;quot;&nbsp;or&nbsp;&amp;quot;queries&amp;quot;.&nbsp;It&nbsp;is&nbsp;simply&nbsp;a&nbsp;service<br>
running&nbsp;on&nbsp;a&nbsp;port.&nbsp;The&nbsp;only&nbsp;valid&nbsp;use&nbsp;case&nbsp;for&nbsp;all&nbsp;this&nbsp;added<br>
complexity&nbsp;is&nbsp;proxying&nbsp;but&nbsp;nobody&nbsp;has&nbsp;tested&nbsp;yet&nbsp;whether&nbsp;proxies&nbsp;will<br>
handle&nbsp;this&nbsp;(short&nbsp;of&nbsp;enabling&nbsp;encryption,&nbsp;and&nbsp;even&nbsp;that&nbsp;is&nbsp;untested).&lt;br&gt;<br>
&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Actually,&nbsp;I&amp;#39;ve&nbsp;already&nbsp;tested&nbsp;this&nbsp;protocol&nbsp;against&nbsp;some&nbsp;typical&nbsp;forward&nbsp;proxy&nbsp;setups&nbsp;and&nbsp;it&nbsp;hasn&amp;#39;t&nbsp;caused&nbsp;any&nbsp;problems&nbsp;so&nbsp;far.&nbsp;&lt;br&gt;&amp;nbsp;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;div&nbsp;bgcolor=&quot;#ffffff&quot;&nbsp;text=&quot;#000000&quot;&gt;&lt;br&gt;<br>
I&amp;#39;m&nbsp;thinking&nbsp;here&nbsp;that&nbsp;this&nbsp;proposal&nbsp;is&nbsp;basically&nbsp;rewriting&nbsp;the&nbsp;CGI<br>
protocol&nbsp;(web&nbsp;server&nbsp;handing&nbsp;off&nbsp;managed&nbsp;request&nbsp;to&nbsp;custom&nbsp;scripts)<br>
with&nbsp;the&nbsp;ONLY&nbsp;difference&nbsp;being&nbsp;the&nbsp;asynchronous&nbsp;nature&nbsp;of&nbsp;the&nbsp;request.<br>
Perhaps&nbsp;more&nbsp;consideration&nbsp;might&nbsp;be&nbsp;given&nbsp;to&nbsp;how&nbsp;the&nbsp;CGI/HTTP&nbsp;protocols<br>
might&nbsp;be&nbsp;updated&nbsp;to&nbsp;allow&nbsp;async&nbsp;communication.&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Rewriting&nbsp;the&nbsp;HTTP&nbsp;spec&nbsp;is&nbsp;not&nbsp;feasible&nbsp;and&nbsp;I&amp;#39;m&nbsp;not&nbsp;even&nbsp;convinced&nbsp;its&nbsp;a&nbsp;good&nbsp;idea.&nbsp;HTTP&nbsp;has&nbsp;always&nbsp;been&nbsp;request/response&nbsp;so&nbsp;it&nbsp;would&nbsp;make&nbsp;a&nbsp;lot&nbsp;more&nbsp;sense&nbsp;to&nbsp;simply&nbsp;use&nbsp;a&nbsp;new&nbsp;protocol&nbsp;then&nbsp;confuse&nbsp;millions&nbsp;of&nbsp;developers/administrators&nbsp;who&nbsp;thought&nbsp;they&nbsp;understood&nbsp;HTTP.&nbsp;&lt;br&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;div&nbsp;bgcolor=&quot;#ffffff&quot;&nbsp;text=&quot;#000000&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
Having&nbsp;said&nbsp;that&nbsp;I&nbsp;still&nbsp;see&nbsp;a&nbsp;very&nbsp;strong&nbsp;use&nbsp;case&nbsp;for&nbsp;low-level<br>
client-side&nbsp;TCP&nbsp;and&nbsp;UDP.&nbsp;There&nbsp;are&nbsp;ways&nbsp;to&nbsp;manage&nbsp;the&nbsp;security&nbsp;risks<br>
that&nbsp;require&nbsp;further&nbsp;investigation.&nbsp;Even&nbsp;if&nbsp;it&nbsp;must&nbsp;be&nbsp;kept&nbsp;same-domain<br>
that&nbsp;is&nbsp;better&nbsp;than&nbsp;creating&nbsp;a&nbsp;new&nbsp;protocol&nbsp;that&nbsp;won&amp;#39;t&nbsp;work&nbsp;with<br>
existing&nbsp;services.&nbsp;Even&nbsp;if&nbsp;that&nbsp;sounds&nbsp;like&nbsp;a&nbsp;feature&nbsp;-&nbsp;it&nbsp;isn&amp;#39;t.&nbsp;There<br>
are&nbsp;better&nbsp;ways&nbsp;to&nbsp;handle&nbsp;access-control&nbsp;for&nbsp;non-WebConnection&nbsp;devices<br>
than&nbsp;sending&nbsp;garbage&nbsp;to&nbsp;the&nbsp;port.&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;If&nbsp;we&nbsp;put&nbsp;the&nbsp;access&nbsp;control&nbsp;in&nbsp;anything&nbsp;but&nbsp;the&nbsp;protocol&nbsp;it&nbsp;means&nbsp;that&nbsp;we&nbsp;are&nbsp;relying&nbsp;on&nbsp;an&nbsp;external&nbsp;service&nbsp;for&nbsp;security,&nbsp;so&nbsp;it&nbsp;would&nbsp;have&nbsp;to&nbsp;be&nbsp;something&nbsp;that&nbsp;is&nbsp;completely&nbsp;locked&nbsp;down.&nbsp;I&nbsp;don&amp;#39;t&nbsp;really&nbsp;see&nbsp;what&nbsp;the&nbsp;mechanism&nbsp;would&nbsp;be.&nbsp;Can&nbsp;you&nbsp;propose&nbsp;a&nbsp;method&nbsp;for&nbsp;doing&nbsp;this&nbsp;so&nbsp;as&nbsp;to&nbsp;allow&nbsp;raw&nbsp;tcp&nbsp;connections&nbsp;without&nbsp;security&nbsp;complications?&lt;br&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;div&nbsp;bgcolor=&quot;#ffffff&quot;&nbsp;text=&quot;#000000&quot;&gt;&lt;div&nbsp;class=&quot;Ih2E3d&quot;&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;<br>
&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;pre&gt;&lt;span&gt;&amp;gt;&nbsp;&lt;/span&gt;[If&nbsp;a]&nbsp;protocol&nbsp;is&nbsp;decided&nbsp;on,&nbsp;and&nbsp;it&nbsp;is&nbsp;allowed&nbsp;to&nbsp;connect&nbsp;to&nbsp;any&nbsp;IP-address<br>
&lt;span&gt;&amp;gt;&nbsp;&lt;/span&gt;-&nbsp;then&nbsp;DDOS&nbsp;attacks&nbsp;can&nbsp;still&nbsp;be&nbsp;performed:&nbsp;If&nbsp;one&nbsp;million&nbsp;web<br>
&lt;span&gt;&amp;gt;&nbsp;&lt;/span&gt;browsers&nbsp;connect&nbsp;to&nbsp;any&nbsp;port&nbsp;on&nbsp;a&nbsp;single&nbsp;server,&nbsp;it&nbsp;does&nbsp;not&nbsp;matter<br>
&lt;span&gt;&amp;gt;&nbsp;&lt;/span&gt;which&nbsp;protocol&nbsp;the&nbsp;client&nbsp;tries&nbsp;to&nbsp;communicate&nbsp;with.&nbsp;The&nbsp;server&nbsp;will<br>
&lt;span&gt;&amp;gt;&nbsp;&lt;/span&gt;still&nbsp;have&nbsp;problems.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/pre&gt;<br>
&nbsp;&nbsp;&lt;/blockquote&gt;<br>
&nbsp;&nbsp;&lt;pre&gt;Couldn&amp;#39;t&nbsp;this&nbsp;already&nbsp;be&nbsp;done&nbsp;today,&nbsp;though?&nbsp;You&nbsp;can&nbsp;already&nbsp;today<br>
connect&nbsp;to&nbsp;an&nbsp;arbitrary&nbsp;server&nbsp;on&nbsp;an&nbsp;arbitrary&nbsp;port&nbsp;using&nbsp;forms,<br>
&amp;lt;img&amp;gt;,&nbsp;&amp;lt;script&nbsp;src=&amp;quot;&amp;quot;&amp;gt;&nbsp;and&nbsp;all&nbsp;other&nbsp;references&nbsp;that&nbsp;cannot&nbsp;be<br>
cross-domain&nbsp;protected&nbsp;for&nbsp;backwards&nbsp;compatibillity&nbsp;reasons.&nbsp;The&nbsp;whole<br>
hotlinking&nbsp;issue&nbsp;is&nbsp;basically&nbsp;the&nbsp;result&nbsp;of&nbsp;that.<br>
How&nbsp;would&nbsp;WebSocket&nbsp;connections&nbsp;be&nbsp;more&nbsp;harmful&nbsp;than&nbsp;something&nbsp;like<br>
<br>
setInterval(function(){<br>
&nbsp;&nbsp;var&nbsp;img&nbsp;=&nbsp;new&nbsp;Image();<br>
&nbsp;&nbsp;img.src&nbsp;=&nbsp;&lt;a&nbsp;href=&quot;http://victim.example.com/&quot;&nbsp;target=&quot;_blank&quot;&gt;&amp;quot;http://victim.example.com/&amp;quot;&lt;/a&gt;&nbsp;+&nbsp;generateLongRandomString();<br>
},&nbsp;1000);<br>
<br>
for&nbsp;example&nbsp;would?&lt;/pre&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;<br>
It&amp;#39;s&nbsp;more&nbsp;harmful&nbsp;because&nbsp;an&nbsp;img&nbsp;tag&nbsp;(to&nbsp;my&nbsp;knowledge)&nbsp;cannot&nbsp;be&nbsp;used<br>
to&nbsp;brute-force&nbsp;access,&nbsp;whereas&nbsp;a&nbsp;socket&nbsp;connection&nbsp;could.&nbsp;With&nbsp;the<br>
focus&nbsp;on&nbsp;DDOS&nbsp;it&nbsp;is&nbsp;important&nbsp;to&nbsp;remember&nbsp;that&nbsp;these&nbsp;sockets&nbsp;will<br>
enable&nbsp;full&nbsp;read/write&nbsp;access&nbsp;to&nbsp;arbitrary&nbsp;services&nbsp;whereas&nbsp;existing<br>
methods&nbsp;can&nbsp;only&nbsp;write&nbsp;once&nbsp;per&nbsp;connection&nbsp;and&nbsp;generally&nbsp;not&nbsp;do<br>
anything&nbsp;useful&nbsp;with&nbsp;the&nbsp;response.&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;What&nbsp;do&nbsp;you&nbsp;mean&nbsp;by&nbsp;brute-force&nbsp;access,&nbsp;and&nbsp;how&nbsp;could&nbsp;the&nbsp;proposed&nbsp;protocol&nbsp;be&nbsp;used&nbsp;to&nbsp;do&nbsp;it.&nbsp;Can&nbsp;you&nbsp;provide&nbsp;an&nbsp;example?&lt;br&gt;&lt;br&gt;Also,&nbsp;the&nbsp;proposed&nbsp;protocol&nbsp;will&nbsp;do&nbsp;a&nbsp;single&nbsp;HTTP&nbsp;request,&nbsp;just&nbsp;like&nbsp;the&nbsp;img&nbsp;tag,&nbsp;and&nbsp;the&nbsp;response&nbsp;be&nbsp;hidden&nbsp;from&nbsp;the&nbsp;attacker&nbsp;if&nbsp;it&nbsp;wasn&amp;#39;t&nbsp;the&nbsp;right&nbsp;response.&nbsp;From&nbsp;a&nbsp;potential&nbsp;attacker&amp;#39;s&nbsp;point&nbsp;of&nbsp;view,&nbsp;this&nbsp;is&nbsp;a&nbsp;write&nbsp;once&nbsp;per&nbsp;connection&nbsp;where&nbsp;the&nbsp;only&nbsp;control&nbsp;they&nbsp;have&nbsp;over&nbsp;the&nbsp;request&nbsp;is&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;url.&nbsp;Attacking&nbsp;with&nbsp;this&nbsp;protocol&nbsp;is&nbsp;identical&nbsp;to&nbsp;attacking&nbsp;with&nbsp;an&nbsp;image&nbsp;tag&nbsp;in&nbsp;every&nbsp;way&nbsp;that&nbsp;I&nbsp;can&nbsp;think&nbsp;of.&lt;br&gt;<br>
&lt;br&gt;-Michael&nbsp;Carter&lt;br&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
