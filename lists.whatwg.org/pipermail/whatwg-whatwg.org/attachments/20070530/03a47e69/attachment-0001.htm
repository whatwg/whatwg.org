<tt>
&lt;HTML&gt;&lt;BODY&nbsp;style=&quot;word-wrap:&nbsp;break-word;&nbsp;-khtml-nbsp-mode:&nbsp;space;&nbsp;-khtml-line-break:&nbsp;after-white-space;&nbsp;&quot;&gt;&lt;BR&gt;&lt;DIV&gt;&lt;DIV&gt;On&nbsp;May&nbsp;30,&nbsp;2007,&nbsp;at&nbsp;8:32&nbsp;PM,&nbsp;Robert&nbsp;O'Callahan&nbsp;wrote:&lt;/DIV&gt;&lt;DIV&gt;&lt;BR&nbsp;class=&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE&nbsp;type=&quot;cite&quot;&gt;&lt;BLOCKQUOTE&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;PRE&gt;I&nbsp;know&nbsp;Mozilla&nbsp;has&nbsp;considered&nbsp;other&nbsp;approaches&nbsp;to&nbsp;offline&nbsp;web&nbsp;apps,&nbsp;&nbsp;&lt;BR&gt;but&nbsp;I&nbsp;think&nbsp;the&nbsp;LocalServer&nbsp;type&nbsp;approach&nbsp;seems&nbsp;cleaner&nbsp;than&nbsp;&nbsp;&lt;BR&gt;Mozilla's&nbsp;JAR&nbsp;file&nbsp;plan,&nbsp;since&nbsp;it&nbsp;is&nbsp;much&nbsp;more&nbsp;transparent&nbsp;and&nbsp;allows&nbsp;&nbsp;&lt;BR&gt;<br>
local&nbsp;resource&nbsp;caching&nbsp;to&nbsp;be&nbsp;decoupled&nbsp;from&nbsp;the&nbsp;rest&nbsp;of&nbsp;the&nbsp;web&nbsp;app.&lt;BR&gt;&lt;/PRE&gt;&lt;/BLOCKQUOTE&gt;JAR&nbsp;files&nbsp;can&nbsp;be&nbsp;fairly&nbsp;transparent&nbsp;...&nbsp;you&nbsp;can&nbsp;redirect&nbsp;from&nbsp;&lt;A&nbsp;href=&quot;http://foo.com/foo/index.html&quot;&gt;http://foo.com/foo/index.html&nbsp;&lt;/A&gt;&nbsp;to&nbsp;&lt;A&nbsp;href=&quot;http://foo.com/foo.jar!/index.html&quot;&gt;http://foo.com/foo.jar!/index.html&lt;/A&gt;,&nbsp;if&nbsp;appropriate,&nbsp;and&nbsp;use&nbsp;relative&nbsp;URIs&nbsp;in&nbsp;your&nbsp;app&nbsp;so&nbsp;the&nbsp;same&nbsp;versions&nbsp;work&nbsp;in&nbsp;both&nbsp;cases.&nbsp;On&nbsp;the&nbsp;server&nbsp;side,&nbsp;maintaining&nbsp;a&nbsp;manifest&nbsp;isn't&nbsp;much&nbsp;different&nbsp;from&nbsp;maintaining&nbsp;a&nbsp;JAR.&nbsp;True,&nbsp;having&nbsp;different&nbsp;URLs&nbsp;for&nbsp;different&nbsp;browsers&nbsp;---&nbsp;or&nbsp;for&nbsp;the&nbsp;same&nbsp;browser,&nbsp;in&nbsp;different&nbsp;modes&nbsp;---&nbsp;could&nbsp;be&nbsp;a&nbsp;hassle.&lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR&nbsp;class=&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;Yes,&nbsp;I&nbsp;think&nbsp;the&nbsp;multiple&nbsp;URIs&nbsp;are&nbsp;a&nbsp;significant&nbsp;hassle.&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE&nbsp;type=&quot;cite&quot;&gt;&nbsp;On&nbsp;the&nbsp;plus&nbsp;side,&nbsp;JAR&nbsp;files&nbsp;make&nbsp;versioning&nbsp;and&nbsp;and&nbsp;consistency&nbsp;incredibly&nbsp;simple.&nbsp;It's&nbsp;not&nbsp;clear&nbsp;what&nbsp;the&nbsp;Gears&nbsp;ManagedStore&nbsp;does&nbsp;if&nbsp;it&nbsp;gets&nbsp;a&nbsp;404&nbsp;or&nbsp;some&nbsp;other&nbsp;error&nbsp;during&nbsp;an&nbsp;update.&lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR&nbsp;class=&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;I&nbsp;believe&nbsp;the&nbsp;update&nbsp;is&nbsp;made&nbsp;atomic&nbsp;to&nbsp;the&nbsp;web&nbsp;app:&lt;/DIV&gt;&lt;DIV&gt;&lt;BR&nbsp;class=&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;&lt;A&nbsp;href=&quot;http://code.google.com/apis/gears/api_localserver.html#ManagedResourceStore&quot;&gt;http://code.google.com/apis/gears/api_localserver.html#ManagedResourceStore&lt;/A&gt;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR&nbsp;class=&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&quot;While&nbsp;an&nbsp;update&nbsp;is&nbsp;in&nbsp;progress,&nbsp;resources&nbsp;from&nbsp;the&nbsp;previous&nbsp;version&nbsp;(if&nbsp;any)&nbsp;will&nbsp;continue&nbsp;to&nbsp;be&nbsp;served&nbsp;locally.&nbsp;After&nbsp;all&nbsp;resources&nbsp;have&nbsp;been&nbsp;downloaded,&nbsp;the&nbsp;currentVersion&nbsp;property&nbsp;will&nbsp;be&nbsp;updated&nbsp;to&nbsp;indicate&nbsp;that&nbsp;the&nbsp;new&nbsp;set&nbsp;of&nbsp;a&nbsp;resources&nbsp;are&nbsp;now&nbsp;being&nbsp;served&nbsp;locally&nbsp;and&nbsp;the&nbsp;previous&nbsp;version&nbsp;has&nbsp;been&nbsp;removed.&quot;&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE&nbsp;type=&quot;cite&quot;&gt;&nbsp;&lt;BR&gt;Other&nbsp;issues&nbsp;with&nbsp;the&nbsp;Gears&nbsp;API:&lt;BR&gt;--&nbsp;The&nbsp;ManagedStore&nbsp;approach&nbsp;seems&nbsp;to&nbsp;have&nbsp;a&nbsp;problem&nbsp;in&nbsp;the&nbsp;following&nbsp;situation:&nbsp;Suppose&nbsp;an&nbsp;app&nbsp;is&nbsp;updated&nbsp;on&nbsp;the&nbsp;server&nbsp;overnight&nbsp;and&nbsp;I&nbsp;visit&nbsp;the&nbsp;main&nbsp;page&nbsp;in&nbsp;the&nbsp;morning.&nbsp;It&nbsp;starts&nbsp;loading&nbsp;other&nbsp;resources. &nbsp;ManagedStore&nbsp;is&nbsp;going&nbsp;to&nbsp;check&nbsp;the&nbsp;manifest,&nbsp;find&nbsp;that&nbsp;the&nbsp;app&nbsp;needs&nbsp;to&nbsp;be&nbsp;updated,&nbsp;pull&nbsp;down&nbsp;the&nbsp;new&nbsp;resources,&nbsp;and&nbsp;flip&nbsp;to&nbsp;the&nbsp;new&nbsp;version&nbsp;---&nbsp;more&nbsp;than&nbsp;likely&nbsp;while&nbsp;the&nbsp;app&nbsp;is&nbsp;in&nbsp;the&nbsp;middle&nbsp;of&nbsp;loading.&nbsp;Sure,&nbsp;this&nbsp;could&nbsp;happen&nbsp;normally&nbsp;if&nbsp;I&nbsp;hit&nbsp;the&nbsp;site&nbsp;in&nbsp;the&nbsp;middle&nbsp;of&nbsp;the&nbsp;night&nbsp;at&nbsp;the&nbsp;switchover,&nbsp;but&nbsp;ManagedStore&nbsp;makes&nbsp;this&nbsp;uncommon&nbsp;case&nbsp;common.&nbsp;(This&nbsp;is&nbsp;Dave&nbsp;Camp's&nbsp;example.)&nbsp;&lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR&nbsp;class=&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;We've&nbsp;brought&nbsp;up&nbsp;the&nbsp;same&nbsp;problem.&nbsp;I&nbsp;thought&nbsp;more&nbsp;about&nbsp;this&nbsp;though&nbsp;-&nbsp;the&nbsp;update&nbsp;can&nbsp;only&nbsp;happen&nbsp;while&nbsp;you're&nbsp;online,&nbsp;in&nbsp;which&nbsp;case&nbsp;you&nbsp;could&nbsp;do&nbsp;all&nbsp;loads&nbsp;directly&nbsp;from&nbsp;the&nbsp;net&nbsp;(or&nbsp;at&nbsp;least&nbsp;revalidating&nbsp;per&nbsp;normal&nbsp;cache&nbsp;policy)&nbsp;while&nbsp;at&nbsp;the&nbsp;same&nbsp;time&nbsp;checking&nbsp;for&nbsp;an&nbsp;update.&nbsp;Or&nbsp;else&nbsp;the&nbsp;manifest&nbsp;could&nbsp;be&nbsp;checked&nbsp;before&nbsp;serving&nbsp;from&nbsp;the&nbsp;local&nbsp;store&nbsp;and&nbsp;if&nbsp;the&nbsp;version&nbsp;changed&nbsp;in&nbsp;that&nbsp;case&nbsp;let&nbsp;the&nbsp;page&nbsp;load&nbsp;live&nbsp;and&nbsp;cache&nbsp;those&nbsp;copies.&nbsp;The&nbsp;transparency&nbsp;of&nbsp;the&nbsp;cache&nbsp;from&nbsp;the&nbsp;URI&nbsp;point&nbsp;of&nbsp;view&nbsp;actually&nbsp;helps&nbsp;with&nbsp;solving&nbsp;this,&nbsp;I&nbsp;think. I&nbsp;don't&nbsp;think&nbsp;this&nbsp;problem&nbsp;is&nbsp;fundamental.&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE&nbsp;type=&quot;cite&quot;&gt;--&nbsp;I&nbsp;think&nbsp;making&nbsp;ResourceStore&nbsp;writable&nbsp;by&nbsp;clients&nbsp;is&nbsp;unnecessary&nbsp;complexity.&nbsp;It's&nbsp;much&nbsp;simpler&nbsp;to&nbsp;maintain&nbsp;the&nbsp;model&nbsp;that&nbsp;the&nbsp;LocalServer/offline&nbsp;cache&nbsp;is&nbsp;really&nbsp;just&nbsp;a&nbsp;cache&nbsp;of&nbsp;the&nbsp;Web.&nbsp;Then&nbsp;there&nbsp;are&nbsp;no&nbsp;issues&nbsp;with&nbsp;enabling/disablings&nbsp;stores,&nbsp;there&nbsp;is&nbsp;no&nbsp;need&nbsp;to&nbsp;add&nbsp;domain&nbsp;restrictions&nbsp;or&nbsp;requiredCookie&nbsp;(&nbsp;i.e.&nbsp;potential&nbsp;security&nbsp;holes)&nbsp;so&nbsp;that&nbsp;different&nbsp;apps&nbsp;can't&nbsp;tread&nbsp;on&nbsp;each&nbsp;other's&nbsp;resources.&nbsp;(So&nbsp;apps&nbsp;that&nbsp;want&nbsp;to&nbsp;refer&nbsp;to&nbsp;a&nbsp;canonical&nbsp;source&nbsp;for&nbsp;JS&nbsp;library&nbsp;files&nbsp;or&nbsp;whatever&nbsp;can&nbsp;still&nbsp;work.)&nbsp;For&nbsp;file&nbsp;uploads,&nbsp;I&nbsp;think&nbsp;we&nbsp;should&nbsp;just&nbsp;have&nbsp;a&nbsp;DOM&nbsp;API&nbsp;on&nbsp;form&nbsp;control&nbsp;elements&nbsp;that&nbsp;reads&nbsp;the&nbsp;file&nbsp;data&nbsp;into&nbsp;a&nbsp;binary&nbsp;blob&nbsp;of&nbsp;some&nbsp;sort&nbsp;which&nbsp;can&nbsp;then&nbsp;be&nbsp;stored&nbsp;in&nbsp;Storage&nbsp;or&nbsp;SQL.&nbsp;&lt;BR&nbsp;clear=&quot;all&quot;&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR&nbsp;class=&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;I&nbsp;don't&nbsp;think&nbsp;requiredCookie&nbsp;feature&nbsp;is&nbsp;there&nbsp;solely&nbsp;for&nbsp;writeability&nbsp;reasons,&nbsp;but&nbsp;rather&nbsp;to&nbsp;make&nbsp;the&nbsp;LocalServer&nbsp;cache&nbsp;work&nbsp;even&nbsp;when&nbsp;in&nbsp;normal&nbsp;use&nbsp;they&nbsp;might&nbsp;get&nbsp;different&nbsp;versions&nbsp;of&nbsp;a&nbsp;resource&nbsp;from&nbsp;the&nbsp;server&nbsp;at&nbsp;different&nbsp;times.&nbsp;For&nbsp;example,&nbsp;suppose&nbsp;you&nbsp;have&nbsp;two&nbsp;different&nbsp;gmail&nbsp;accounts&nbsp;with&nbsp;preferences&nbsp;set&nbsp;to&nbsp;different&nbsp;languages.&lt;/DIV&gt;&lt;DIV&gt;&lt;BR&nbsp;class=&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;I&nbsp;am&nbsp;not&nbsp;sure&nbsp;what&nbsp;you&nbsp;mean&nbsp;by&nbsp;the&nbsp;resource&nbsp;store&nbsp;being&nbsp;writeable.&nbsp;It&nbsp;lets&nbsp;you&nbsp;tweak&nbsp;the&nbsp;set&nbsp;of&nbsp;items&nbsp;stored,&nbsp;but&nbsp;you&nbsp;can't&nbsp;construct&nbsp;an&nbsp;item&nbsp;with&nbsp;headers&nbsp;and&nbsp;data&nbsp;and&nbsp;all&nbsp;by&nbsp;hand.&nbsp;It&nbsp;does&nbsp;overload&nbsp;file&nbsp;insertion&nbsp;into&nbsp;the&nbsp;local&nbsp;store,&nbsp;which&nbsp;is&nbsp;perhaps&nbsp;needlessly&nbsp;complex,&nbsp;but&nbsp;you&nbsp;do&nbsp;want&nbsp;a&nbsp;way&nbsp;to&nbsp;access&nbsp;a&nbsp;file&nbsp;picked&nbsp;by&nbsp;an&nbsp;HTMLInputElement&nbsp;without&nbsp;having&nbsp;to&nbsp;round-trip&nbsp;it&nbsp;to&nbsp;the&nbsp;server.&nbsp;Perhaps&nbsp;that&nbsp;feature&nbsp;would&nbsp;be&nbsp;better&nbsp;served&nbsp;by&nbsp;API&nbsp;on&nbsp;HTMLInputElement&nbsp;instead.&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE&nbsp;type=&quot;cite&quot;&gt;I&nbsp;think&nbsp;we're&nbsp;still&nbsp;willing&nbsp;to&nbsp;alter&nbsp;our&nbsp;API,&nbsp;but&nbsp;we&nbsp;want&nbsp;to&nbsp;stick&nbsp;with&nbsp;the&nbsp;simple&nbsp;conceptual&nbsp;model&nbsp;we&nbsp;currently&nbsp;have:&nbsp;a&nbsp;single&nbsp;read-only&nbsp;offline&nbsp;cache&nbsp;that&nbsp;requires&nbsp;minimal&nbsp;management.&nbsp;Perhaps&nbsp;we&nbsp;could&nbsp;figure&nbsp;out&nbsp;how&nbsp;to&nbsp;get&nbsp;versioning&nbsp;and&nbsp;consistency&nbsp;without&nbsp;using&nbsp;JARs.&nbsp;E.g.,&nbsp;we&nbsp;might&nbsp;be&nbsp;able&nbsp;to&nbsp;add&nbsp;an&nbsp;API&nbsp;that&nbsp;reads&nbsp;a&nbsp;Gears-style&nbsp;manifest&nbsp;and&nbsp;does&nbsp;an&nbsp;atomic&nbsp;update&nbsp;of&nbsp;the&nbsp;offline&nbsp;cache&nbsp;from&nbsp;it.&lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR&nbsp;class=&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;Do&nbsp;you&nbsp;have&nbsp;docs&nbsp;or&nbsp;a&nbsp;spec&nbsp;for&nbsp;your&nbsp;proposed&nbsp;API?&nbsp;We're&nbsp;considering&nbsp;working&nbsp;on&nbsp;offline&nbsp;web&nbsp;app&nbsp;support&nbsp;soon&nbsp;in&nbsp;WebKit&nbsp;and&nbsp;we'd&nbsp;like&nbsp;to&nbsp;get&nbsp;in&nbsp;sync&nbsp;with&nbsp;other&nbsp;efforts&nbsp;before&nbsp;we&nbsp;start&nbsp;implementing.&lt;/DIV&gt;&lt;BR&gt;&lt;/DIV&gt;Regards,&lt;BR&gt;&lt;DIV&gt;Maciej&lt;/DIV&gt;&lt;DIV&gt;&lt;BR&nbsp;class=&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;/BODY&gt;&lt;/HTML&gt;
</tt>
