<tt>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&gt;Sorry&nbsp;for&nbsp;breaking&nbsp;the&nbsp;continuity&nbsp;of&nbsp;this&nbsp;thread,&nbsp;but&nbsp;since&nbsp;the&nbsp;original&nbsp;topic&nbsp;was&nbsp;never&nbsp;really&nbsp;resolved,&nbsp;I&nbsp;wanted&nbsp;to&nbsp;jump&nbsp;back&nbsp;a&nbsp;bit.&lt;br&gt;&lt;br&gt;&lt;br&gt;Since&nbsp;my&nbsp;original&nbsp;post,&nbsp;I&#39;ve&nbsp;continued&nbsp;thinking&nbsp;about&nbsp;LocalStorage,&nbsp;structured&nbsp;clones,&nbsp;etc...and&nbsp;the&nbsp;more&nbsp;I&#39;ve&nbsp;thought&nbsp;about&nbsp;it,&nbsp;the&nbsp;more&nbsp;convinced&nbsp;I&nbsp;am&nbsp;that&nbsp;adding&nbsp;such&nbsp;support&nbsp;is&nbsp;a&nbsp;big&nbsp;mistake. &nbsp;One&nbsp;way&nbsp;to&nbsp;think&nbsp;about&nbsp;it&nbsp;is&nbsp;as&nbsp;follows:&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;1) &nbsp;We&#39;ve&nbsp;all&nbsp;pretty&nbsp;much&nbsp;agreed&nbsp;that&nbsp;localStorage&#39;s&nbsp;synchronous&nbsp;design&nbsp;was&nbsp;a&nbsp;mistake&nbsp;that&nbsp;we&nbsp;should&nbsp;be&nbsp;careful&nbsp;to&nbsp;not&nbsp;repeat.&lt;br&gt;2) &nbsp;I&nbsp;think&nbsp;we&nbsp;can&nbsp;all&nbsp;agree&nbsp;that&nbsp;storing&nbsp;structured&nbsp;clone&nbsp;data&nbsp;makes&nbsp;LocalStorage&nbsp;more&nbsp;powerful&nbsp;and&nbsp;useful&nbsp;to&nbsp;developers.&lt;br&gt;<br>
<br>
<br>
3) &nbsp;And&nbsp;I&nbsp;think&nbsp;we&nbsp;can&nbsp;all&nbsp;agree&nbsp;that&nbsp;developers&nbsp;like&nbsp;to&nbsp;use&nbsp;more&nbsp;powerful&nbsp;APIs. &nbsp;Especially&nbsp;when&nbsp;the&nbsp;API&nbsp;is&nbsp;easy&nbsp;to&nbsp;use&nbsp;and&nbsp;understand&nbsp;(as&nbsp;LocalStorage&nbsp;is).&lt;br&gt;4) &nbsp;Lock&nbsp;contention&nbsp;becomes&nbsp;worse&nbsp;as&nbsp;the&nbsp;frequency&nbsp;of&nbsp;acquires&nbsp;and/or&nbsp;the&nbsp;duration&nbsp;the&nbsp;lock&nbsp;is&nbsp;held&nbsp;increases.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;Although&nbsp;there&nbsp;might&nbsp;be&nbsp;some&nbsp;subtleties&nbsp;about&nbsp;the&nbsp;statements&nbsp;I&nbsp;made&nbsp;that&nbsp;people&nbsp;could&nbsp;argue&nbsp;with,&nbsp;I&nbsp;think&nbsp;all&nbsp;these&nbsp;statements&nbsp;are&nbsp;pretty&nbsp;fundamentally&nbsp;true. &nbsp;Assuming&nbsp;so,&nbsp;it&#39;s&nbsp;not&nbsp;a&nbsp;stretch&nbsp;to&nbsp;see&nbsp;that&nbsp;2&nbsp;and&nbsp;3&nbsp;imply&nbsp;that&nbsp;adding&nbsp;structured&nbsp;clones&nbsp;to&nbsp;local&nbsp;storage&nbsp;will&nbsp;lead&nbsp;to&nbsp;more&nbsp;use&nbsp;of&nbsp;local&nbsp;storage. &nbsp;If&nbsp;use&nbsp;increases,&nbsp;then&nbsp;4&nbsp;implies&nbsp;that&nbsp;the&nbsp;storage&nbsp;lock&nbsp;is&nbsp;going&nbsp;to&nbsp;become&nbsp;a&nbsp;bigger&nbsp;problem&nbsp;over&nbsp;time. &nbsp;Since&nbsp;we&nbsp;can&nbsp;all&nbsp;agree&nbsp;that&nbsp;the&nbsp;synchronous&nbsp;design&nbsp;of&nbsp;local&nbsp;storage&nbsp;is&nbsp;already&nbsp;a&nbsp;problem&nbsp;that&nbsp;we&nbsp;wish&nbsp;we&nbsp;had&nbsp;avoided,&nbsp;I&nbsp;just&nbsp;can&#39;t&nbsp;understand&nbsp;why&nbsp;we&#39;re&nbsp;happy&nbsp;to&nbsp;make&nbsp;it&nbsp;a&nbsp;bigger&nbsp;problem.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;Does&nbsp;anyone&nbsp;have&nbsp;an&nbsp;argument&nbsp;against&nbsp;this?&lt;br&gt;&lt;br&gt;&lt;br&gt;Personally&nbsp;I&nbsp;find&nbsp;this&nbsp;argument&nbsp;especially&nbsp;compelling&nbsp;for&nbsp;the&nbsp;following&nbsp;reason: &nbsp;Anyone&nbsp;who&#39;s&nbsp;going&nbsp;to&nbsp;use&nbsp;LocalStorage&nbsp;in&nbsp;the&nbsp;near&nbsp;to&nbsp;medium&nbsp;future&nbsp;will&nbsp;need&nbsp;to&nbsp;handle&nbsp;the&nbsp;case&nbsp;of&nbsp;LocalStorage&nbsp;only&nbsp;handling&nbsp;strings. &nbsp;This&nbsp;is&nbsp;because&nbsp;structured&nbsp;clones&nbsp;supports&nbsp;a&nbsp;super-set&nbsp;of&nbsp;what&nbsp;can&nbsp;be&nbsp;serialized&nbsp;within&nbsp;a&nbsp;script,&nbsp;there&#39;s&nbsp;no&nbsp;way&nbsp;for&nbsp;libraries&nbsp;to&nbsp;build&nbsp;a&nbsp;transparent&nbsp;compatibility&nbsp;abstraction. &nbsp;Thus,&nbsp;for&nbsp;some&nbsp;time,&nbsp;developers&nbsp;will&nbsp;either&nbsp;need&nbsp;to&nbsp;only&nbsp;use&nbsp;data&nbsp;that&nbsp;can&nbsp;be&nbsp;serialized&nbsp;(thus&nbsp;making&nbsp;structured&nbsp;clones&nbsp;only&nbsp;a&nbsp;performance&nbsp;optimization)&nbsp;or&nbsp;developers&nbsp;will&nbsp;need&nbsp;to&nbsp;cut&nbsp;off&nbsp;browsers&nbsp;that&nbsp;don&#39;t&nbsp;support&nbsp;structured&nbsp;clones.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;Assuming&nbsp;that,&nbsp;&nbsp;we&#39;re&nbsp;basically&nbsp;saying&nbsp;that&nbsp;structured&nbsp;clones&nbsp;is&nbsp;a&nbsp;feature&nbsp;for&nbsp;the&nbsp;long&nbsp;term&nbsp;use&nbsp;and&nbsp;health&nbsp;of&nbsp;LocalStorage. &nbsp;Now&nbsp;I&nbsp;know&nbsp;that&nbsp;we&nbsp;can&#39;t&nbsp;just&nbsp;get&nbsp;rid&nbsp;of&nbsp;LocalStorage&nbsp;and&nbsp;coming&nbsp;up&nbsp;with&nbsp;viable&nbsp;alternatives&nbsp;will&nbsp;take&nbsp;some&nbsp;time,&nbsp;but&nbsp;do&nbsp;we&nbsp;really&nbsp;believe&nbsp;that&nbsp;we&nbsp;can&#39;t&nbsp;agree&nbsp;on&nbsp;and&nbsp;develop&nbsp;a&nbsp;better&nbsp;alternative&nbsp;in&nbsp;the&nbsp;mean&nbsp;time?&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;&lt;br&gt;I&#39;m&nbsp;fine&nbsp;with&nbsp;SessionStorage&nbsp;supporting&nbsp;structured&nbsp;clones. &nbsp;I&nbsp;just&nbsp;don&#39;t&nbsp;think&nbsp;we&nbsp;should&nbsp;make&nbsp;LocalStorage&nbsp;any&nbsp;more&nbsp;powerful. &nbsp;In&nbsp;fact,&nbsp;at&nbsp;this&nbsp;point,&nbsp;I&nbsp;think&nbsp;we&nbsp;should&nbsp;redirect&nbsp;all&nbsp;the&nbsp;time&nbsp;and&nbsp;effort&nbsp;we&#39;re&nbsp;putting&nbsp;into&nbsp;making&nbsp;LocalStorage&nbsp;better&nbsp;(including&nbsp;solving&nbsp;lock&nbsp;contention&nbsp;issues)&nbsp;and&nbsp;instead&nbsp;put&nbsp;it&nbsp;into&nbsp;creating&nbsp;a&nbsp;new&nbsp;API&nbsp;that&nbsp;solves&nbsp;these&nbsp;problems&nbsp;and&nbsp;that&nbsp;all&nbsp;the&nbsp;browser&nbsp;vendors&nbsp;can&nbsp;get&nbsp;behind. &nbsp;(If&nbsp;you&nbsp;have&nbsp;ideas&nbsp;on&nbsp;how&nbsp;I&nbsp;can&nbsp;get&nbsp;this&nbsp;ball&nbsp;rolling,&nbsp;I&#39;d&nbsp;love&nbsp;to&nbsp;hear&nbsp;them!)&lt;br&gt;<br>
<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;<br>
&lt;br&gt;J&lt;font&nbsp;class=&quot;Apple-style-span&quot;&nbsp;color=&quot;#000000&quot;&gt;&lt;font&nbsp;class=&quot;Apple-style-span&quot;&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
