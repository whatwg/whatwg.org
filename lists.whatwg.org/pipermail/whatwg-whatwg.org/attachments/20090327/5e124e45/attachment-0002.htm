<tt>
&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;border-collapse:&nbsp;collapse;&nbsp;&quot;&gt;&lt;div&gt;&gt;&nbsp;sessionLifetime&nbsp;+&nbsp;tabSpecificScope&nbsp;doesn&#39;t&nbsp;make&nbsp;much&nbsp;sense&nbsp;since&lt;/div&gt;&lt;div&gt;&gt;&nbsp;you&nbsp;get&nbsp;a&nbsp;new&nbsp;set&nbsp;of&nbsp;tabs&nbsp;when&nbsp;starting&nbsp;a&nbsp;new&nbsp;session&lt;/div&gt;&lt;div&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;Sorry...&nbsp; make&nbsp;that&nbsp;persistentLifetime&nbsp; +&nbsp;tabScope&nbsp;doesn&#39;t&nbsp;make&nbsp;sense.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/span&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Fri,&nbsp;Mar&nbsp;27,&nbsp;2009&nbsp;at&nbsp;3:29&nbsp;PM,&nbsp;Michael&nbsp;Nordman&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:michaeln@google.com&quot;&gt;michaeln@google.com&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;On&nbsp;Tue,&nbsp;Mar&nbsp;24,&nbsp;2009&nbsp;at&nbsp;2:11&nbsp;AM,&nbsp;Ian&nbsp;Hickson&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;ian@hixie.ch&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
&lt;br&gt;<br>
I&#39;ve&nbsp;updated&nbsp;the&nbsp;specs&nbsp;as&nbsp;follows:&lt;br&gt;<br>
&lt;br&gt;<br>
 -&nbsp;removed&nbsp;localStorage&nbsp;from&nbsp;Web&nbsp;Workers&nbsp;for&nbsp;now.&lt;br&gt;<br>
&lt;br&gt;<br>
 -&nbsp;extended&nbsp;the&nbsp;implicit&nbsp;lock&nbsp;mechanism&nbsp;that&nbsp;we&nbsp;had&nbsp;for&nbsp;storage&nbsp;to&nbsp;also&lt;br&gt;<br>
&nbsp; &nbsp;cover&nbsp;document.cookie,&nbsp;and&nbsp;made&nbsp;the&nbsp;language&nbsp;more&nbsp;explicit&nbsp;about&nbsp;how&lt;br&gt;<br>
&nbsp; &nbsp;it&nbsp;works.&lt;br&gt;<br>
&lt;br&gt;<br>
 -&nbsp;added&nbsp;navigator.releaseLock().&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;20&nbsp;Mar&nbsp;2009,&nbsp;Jeremy&nbsp;Orlow&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;Anyhow,&nbsp;the&nbsp;very&nbsp;first&nbsp;example&nbsp;in&nbsp;the&nbsp;spec&nbsp;(&lt;br&gt;<br>
&gt;&nbsp;&lt;a&nbsp;href=&quot;http://dev.w3.org/html5/workers/#a-background-number-crunching-worker&quot;&nbsp;target=&quot;_blank&quot;&gt;http://dev.w3.org/html5/workers/#a-background-number-crunching-worker&lt;/a&gt;)&lt;br&gt;<br>
&gt;&nbsp;shows&nbsp;work&nbsp;that&#39;s&nbsp;being&nbsp;done&nbsp;in&nbsp;a&nbsp;infinite&nbsp;loop&nbsp;with&nbsp;postMessage&nbsp;being&lt;br&gt;<br>
&gt;&nbsp;called&nbsp;when&nbsp;each&nbsp;prime&nbsp;is&nbsp;found.&nbsp; If&nbsp;you&nbsp;called&nbsp;localStorage&nbsp;anywhere&lt;br&gt;<br>
&gt;&nbsp;within&nbsp;that&nbsp;loop&nbsp;(say,&nbsp;to&nbsp;periodically&nbsp;save&nbsp;all&nbsp;primes&nbsp;found),&nbsp;you&nbsp;would&lt;br&gt;<br>
&gt;&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;safely&nbsp;call&nbsp;window.localStorage&nbsp;in&nbsp;any&nbsp;other&nbsp;worker&nbsp;or&lt;br&gt;<br>
&gt;&nbsp;the&nbsp;web&nbsp;page.&nbsp; This&nbsp;is&nbsp;because&nbsp;the&nbsp;&quot;task&nbsp;that&nbsp;started&nbsp;the&nbsp;script&quot;&nbsp;never&lt;br&gt;<br>
&gt;&nbsp;ends.&nbsp;And&nbsp;this&nbsp;its&nbsp;&#39;lock&#39;&nbsp;(on&nbsp;other&nbsp;scripts&nbsp;using&nbsp;local&nbsp;storage)&nbsp;will&lt;br&gt;<br>
&gt;&nbsp;never&nbsp;be&nbsp;released.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&#39;ve&nbsp;removed&nbsp;localStorage&nbsp;from&nbsp;the&nbsp;Web&nbsp;Workers&nbsp;spec&nbsp;for&nbsp;now.&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;20&nbsp;Mar&nbsp;2009,&nbsp;Jonas&nbsp;Sicking&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;I&nbsp;do&nbsp;think&nbsp;it&nbsp;would&nbsp;be&nbsp;great&nbsp;if&nbsp;workers&nbsp;had&nbsp;access&nbsp;to&nbsp;some&nbsp;type&nbsp;of&lt;br&gt;<br>
&gt;&nbsp;structured&nbsp;storage.&nbsp;However&nbsp;I&nbsp;agree&nbsp;that&nbsp;the&nbsp;fact&nbsp;that&nbsp;both&nbsp;the&nbsp;main&lt;br&gt;<br>
&gt;&nbsp;thread&nbsp;and&nbsp;workers&nbsp;have&nbsp;synchronous&nbsp;access&nbsp;to&nbsp;the&nbsp;same&nbsp;storage&nbsp;is&nbsp;not&lt;br&gt;<br>
&gt;&nbsp;acceptable&nbsp;since&nbsp;that&nbsp;means&nbsp;that&nbsp;we&#39;re&nbsp;violating&nbsp;the&lt;br&gt;<br>
&gt;&nbsp;shared-nothing-message-passing&nbsp;design&nbsp;that&nbsp;makes&nbsp;workers&nbsp;not&nbsp;have&nbsp;to&lt;br&gt;<br>
&gt;&nbsp;deal&nbsp;with&nbsp;locks&nbsp;and&nbsp;other&nbsp;traditional&nbsp;multithread&nbsp;hazards.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Agreed.&nbsp;The&nbsp;Database&nbsp;API&nbsp;seems&nbsp;well-suited&nbsp;for&nbsp;this,&nbsp;though.&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Again...&nbsp;its&nbsp;not&nbsp;just&nbsp;workers&nbsp;that&nbsp;are&nbsp;affected&nbsp;by&nbsp;this...&nbsp;speaking&nbsp;as&nbsp;someone&lt;/div&gt;&lt;div&gt;that&nbsp;works&nbsp;on&nbsp;a&nbsp;multi-threaded&nbsp;browser,&nbsp;this&nbsp;is&nbsp;troubling.&nbsp;If&nbsp;its&nbsp;possible&nbsp;to&lt;/div&gt;<br>
<br>
&lt;div&gt;spec&nbsp;features&nbsp;that&nbsp;allow&nbsp;script&nbsp;to&nbsp;poke&nbsp;at&nbsp;the&nbsp;world&nbsp;beyond&nbsp;the&nbsp;page&lt;/div&gt;&lt;div&gt;boundaries&nbsp;in&nbsp;a&nbsp;fashion&nbsp;that&nbsp;doesn&#39;t&nbsp;not&nbsp;require&nbsp;locking&nbsp;semantics&nbsp;beyond&lt;/div&gt;&lt;div&gt;the&nbsp;scope&nbsp;of&nbsp;a&nbsp;single&nbsp;scriptable&nbsp;API&nbsp;call...&nbsp;that&nbsp;would&nbsp;be&nbsp;less&nbsp;troubling.&lt;/div&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;20&nbsp;Mar&nbsp;2009,&nbsp;Drew&nbsp;Wilson&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;One&nbsp;alternative&nbsp;I&#39;d&nbsp;like&nbsp;to&nbsp;propose&nbsp;is&nbsp;to&nbsp;remove&nbsp;access&nbsp;to&nbsp;localStorage&lt;br&gt;<br>
&gt;&nbsp;for&nbsp;dedicated&nbsp;workers,&nbsp;and&nbsp;give&nbsp;SharedWorkers&nbsp;access&nbsp;to&nbsp;localStorage,&lt;br&gt;<br>
&gt;&nbsp;but&nbsp;have&nbsp;that&nbsp;storage&nbsp;be&nbsp;partitioned&nbsp;by&nbsp;the&nbsp;worker&nbsp;name&nbsp;(i.e.&nbsp;the&nbsp;worker&lt;br&gt;<br>
&gt;&nbsp;can&nbsp;access&nbsp;it,&nbsp;but&nbsp;it&#39;s&nbsp;not&nbsp;shared&nbsp;with&nbsp;web&nbsp;pages&nbsp;or&nbsp;any&nbsp;other&nbsp;workers&lt;br&gt;<br>
&gt;&nbsp;and&nbsp;so&nbsp;you&nbsp;don&#39;t&nbsp;have&nbsp;any&nbsp;synchronicity&nbsp;issues).&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;That&#39;s&nbsp;an&nbsp;interesting&nbsp;idea,&nbsp;and&nbsp;would&nbsp;be&nbsp;relatively&nbsp;easy&nbsp;to&nbsp;do.&nbsp;Do&nbsp;people&lt;br&gt;<br>
think&nbsp;it&nbsp;is&nbsp;worth&nbsp;it?&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;think&nbsp;there&#39;s&nbsp;some&nbsp;additional&nbsp;low-hanging&nbsp;fruit&nbsp;too.&nbsp;We&#39;re&nbsp;toying&nbsp;with&nbsp;two,&lt;/div&gt;&lt;div&gt;independent&nbsp;axis:&nbsp;lifetime&nbsp;vs&nbsp;accessScope.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;<br>
  &#39;sessionStorage&#39;&nbsp;has&nbsp;sessionOnlyLifetime&nbsp;and&nbsp;tabSpecificScope&lt;/div&gt;<br>
&lt;div&gt;  &#39;localStorage&#39;&nbsp;has&nbsp;persistentLifetime&nbsp;and&nbsp;browserWideScope&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;this&nbsp;nomenclature,&nbsp;the&nbsp;new&nbsp;idea&nbsp;could&nbsp;be&nbsp;phrased&nbsp;as...&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &#39;page/workerStorage&#39;&nbsp;has&nbsp;persistentLifetime&nbsp;and&nbsp;page/workerSpecificScope&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Other&nbsp;slots&nbsp;in&nbsp;the&nbsp;matrix&nbsp;formed&nbsp;by&nbsp;these&nbsp;two&nbsp;axis&nbsp;could&nbsp;make&nbsp;sense...&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  sessionLifetime&nbsp;+&nbsp;page/workerSpecificScope&lt;/div&gt;&lt;div&gt;  sessionLifetime&nbsp;+&nbsp;browserWideScope&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
<br>
&lt;/div&gt;&lt;div&gt;sessionLifetime&nbsp;+&nbsp;tabSpecificScope&nbsp;doesn&#39;t&nbsp;make&nbsp;much&nbsp;sense&nbsp;since&lt;/div&gt;&lt;div&gt;you&nbsp;get&nbsp;a&nbsp;new&nbsp;set&nbsp;of&nbsp;tabs&nbsp;when&nbsp;starting&nbsp;a&nbsp;new&nbsp;session&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;&lt;div&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
<br>
&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;20&nbsp;Mar&nbsp;2009,&nbsp;Aaron&nbsp;Boodman&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;I&nbsp;think&nbsp;the&nbsp;best&nbsp;option&nbsp;is&nbsp;to&nbsp;make&nbsp;access&nbsp;to&nbsp;localstorage&nbsp;asynchronous&lt;br&gt;<br>
&lt;/div&gt;&gt;&nbsp;for&nbsp;workers.&nbsp;This&nbsp;reduces&nbsp;the&nbsp;amount&nbsp;of&nbsp;time&nbsp;a&nbsp;worker&nbsp;can&nbsp;hold&nbsp;the&lt;br&gt;<br>
&lt;div&gt;&gt;&nbsp;localstore&nbsp;lock&nbsp;so&nbsp;that&nbsp;it&nbsp;shouldn&#39;t&nbsp;be&nbsp;a&nbsp;problem&nbsp;for&nbsp;normal&nbsp;pages.&nbsp;It&lt;br&gt;<br>
&gt;&nbsp;sucks&nbsp;to&nbsp;make&nbsp;such&nbsp;a&nbsp;simple&nbsp;and&nbsp;useful&nbsp;API&nbsp;aync&nbsp;though.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&nbsp;don&#39;t&nbsp;think&nbsp;making&nbsp;it&nbsp;async&nbsp;helps&nbsp;here,&nbsp;since&nbsp;the&nbsp;problem&nbsp;isn&#39;t&nbsp;that&nbsp;it&lt;br&gt;<br>
is&nbsp;synchronous,&nbsp;but&nbsp;that&nbsp;workers&nbsp;don&#39;t&nbsp;return&nbsp;quickly&nbsp;(by&nbsp;design).&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Sat,&nbsp;21&nbsp;Mar&nbsp;2009,&nbsp;Aaron&nbsp;Boodman&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;Actually,&nbsp;I&nbsp;don&#39;t&nbsp;believe&nbsp;that&nbsp;it&nbsp;is&nbsp;required&nbsp;that&nbsp;the&nbsp;callback&nbsp;run&lt;br&gt;<br>
&gt;&nbsp;asynchronously.&nbsp;All&nbsp;the&nbsp;callback&nbsp;is&nbsp;used&nbsp;for&nbsp;is&nbsp;establishing&nbsp;the&nbsp;lock&lt;br&gt;<br>
&gt;&nbsp;lifetime&nbsp;explicitly,&nbsp;and&nbsp;we&nbsp;assume&nbsp;that&nbsp;this&nbsp;will&nbsp;usually&nbsp;make&nbsp;the&nbsp;lock&lt;br&gt;<br>
&gt;&nbsp;lifetime&nbsp;short.&nbsp;So&nbsp;we&nbsp;can&nbsp;block&nbsp;while&nbsp;we&nbsp;wait&nbsp;for&nbsp;it&nbsp;to&nbsp;become&lt;br&gt;<br>
&gt;&nbsp;available.&nbsp;This&nbsp;is&nbsp;just&nbsp;like&nbsp;the&nbsp;behavior&nbsp;today&nbsp;without&nbsp;workers.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Nothing&nbsp;is&nbsp;to&nbsp;stop&nbsp;someone&nbsp;from&nbsp;just&nbsp;having&nbsp;a&nbsp;long&nbsp;callback,&nbsp;though.&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Sat,&nbsp;21&nbsp;Mar&nbsp;2009,&nbsp;Jonas&nbsp;Sicking&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;As&nbsp;I&nbsp;understand&nbsp;the&nbsp;current&nbsp;API&nbsp;(on&nbsp;main&nbsp;window)&nbsp;to&nbsp;be&nbsp;defined,&nbsp;as&nbsp;soon&lt;br&gt;<br>
&gt;&nbsp;as&nbsp;someone&nbsp;accesses&nbsp;the&nbsp;.localStorage&nbsp;property,&nbsp;the&nbsp;implementation&nbsp;is&lt;br&gt;<br>
&gt;&nbsp;supposed&nbsp;to&nbsp;acquire&nbsp;a&nbsp;lock.&nbsp;This&nbsp;lock&nbsp;would&nbsp;be&nbsp;held&nbsp;on&nbsp;to&nbsp;until&nbsp;that&lt;br&gt;<br>
&gt;&nbsp;script&nbsp;returns&nbsp;to&nbsp;the&nbsp;event&nbsp;loop&nbsp;for&nbsp;that&nbsp;thread.&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;So&nbsp;if&nbsp;javascript&nbsp;in&nbsp;another&nbsp;window,&nbsp;running&nbsp;in&nbsp;another&nbsp;thread&nbsp;or&lt;br&gt;<br>
&gt;&nbsp;process,&nbsp;tries&nbsp;to&nbsp;access&nbsp;.localStorage&nbsp;for&nbsp;the&nbsp;same&nbsp;origin,&nbsp;the&lt;br&gt;<br>
&gt;&nbsp;.localStorage&nbsp;getter&nbsp;would&nbsp;try&nbsp;to&nbsp;acquire&nbsp;the&nbsp;same&nbsp;lock&nbsp;and&nbsp;block&nbsp;until&lt;br&gt;<br>
&gt;&nbsp;the&nbsp;first&nbsp;thread&nbsp;releases&nbsp;the&nbsp;lock.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Right.&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Sat,&nbsp;21&nbsp;Mar&nbsp;2009,&nbsp;Jonas&nbsp;Sicking&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;The&nbsp;problem&nbsp;with&nbsp;synchronously&nbsp;grabbing&nbsp;the&nbsp;lock&nbsp;is&nbsp;that&nbsp;we&nbsp;can&nbsp;only&lt;br&gt;<br>
&gt;&nbsp;ever&nbsp;have&nbsp;one&nbsp;feature&nbsp;that&nbsp;uses&nbsp;synchronous&nbsp;locks,&nbsp;otherwise&nbsp;we&#39;ll&nbsp;risk&lt;br&gt;<br>
&gt;&nbsp;dead-locks.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Indeed.&nbsp;This&nbsp;is&nbsp;a&nbsp;problem&nbsp;with&nbsp;the&nbsp;current&nbsp;API&nbsp;for&nbsp;localStorage&nbsp;in&nbsp;windows&lt;br&gt;<br>
as&nbsp;well.&lt;br&gt;<br>
&lt;br&gt;<br>
I&#39;ve&nbsp;made&nbsp;the&nbsp;spec&nbsp;explicitly&nbsp;have&nbsp;a&nbsp;single&nbsp;shared&nbsp;lock&nbsp;for&nbsp;all&nbsp;features&lt;br&gt;<br>
that&nbsp;need&nbsp;locking&nbsp;(currently&nbsp;just&nbsp;.cookie&nbsp;and&nbsp;.localStorage).&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Sun,&nbsp;22&nbsp;Mar&nbsp;2009,&nbsp;Michael&nbsp;Nordman&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;Given&nbsp;an&nbsp;async&nbsp;api,&nbsp;would&nbsp;it&nbsp;be&nbsp;possible&nbsp;to&nbsp;store&nbsp;values&nbsp;into&lt;br&gt;<br>
&gt;&nbsp;localStorage&nbsp;at&nbsp;onunload&nbsp;time?&nbsp;I&nbsp;expect&nbsp;that&nbsp;could&nbsp;be&nbsp;a&nbsp;useful&nbsp;time&nbsp;to&lt;br&gt;<br>
&gt;&nbsp;use&nbsp;this&nbsp;API.&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;function&nbsp;onunload()&nbsp;{&lt;br&gt;<br>
&gt;&nbsp; &nbsp;getLocalStorage(function(storage)&nbsp;{&lt;br&gt;<br>
&gt;&nbsp; &nbsp; &nbsp;//&nbsp;Will&nbsp;this&nbsp;ever&nbsp;execute?&lt;br&gt;<br>
&gt;&nbsp; &nbsp;});&lt;br&gt;<br>
&gt;&nbsp;}&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;Locking&nbsp;the&nbsp;storage&nbsp;until&nbsp;script&nbsp;completion&nbsp;isn&#39;t&nbsp;really&nbsp;necessary&nbsp;in&lt;br&gt;<br>
&gt;&nbsp;many&nbsp;cases.&nbsp;Maybe&nbsp;we&#39;re&nbsp;over&nbsp;engineering&nbsp;this?&nbsp;Suppose&nbsp;immutability&lt;br&gt;<br>
&gt;&nbsp;across&nbsp;calls&nbsp;was&nbsp;generally&nbsp;not&nbsp;guaranteed&nbsp;by&nbsp;the&nbsp;existing&nbsp;API.&nbsp;And&nbsp;we&lt;br&gt;<br>
&gt;&nbsp;add&nbsp;an&nbsp;async&nbsp;getLocalStorage(callback)&nbsp;which&nbsp;does&nbsp;provide&nbsp;immutability&lt;br&gt;<br>
&gt;&nbsp;for&nbsp;the&nbsp;duration&nbsp;of&nbsp;the&nbsp;callback&nbsp;if&nbsp;that&nbsp;is&nbsp;desired.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;The&nbsp;problem&nbsp;is&nbsp;that&nbsp;people&nbsp;will&nbsp;walk&nbsp;into&nbsp;race&nbsp;conditions&nbsp;without&lt;br&gt;<br>
realising&nbsp;it,&nbsp;and&nbsp;they&nbsp;are&nbsp;amongst&nbsp;the&nbsp;hardest&nbsp;problems&nbsp;to&nbsp;debug.&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Sun,&nbsp;22&nbsp;Mar&nbsp;2009,&nbsp;Drew&nbsp;Wilson&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;The&nbsp;problem&nbsp;is&nbsp;that&nbsp;.length&nbsp;is&nbsp;basically&nbsp;useless&nbsp;without&nbsp;some&nbsp;kind&nbsp;of&lt;br&gt;<br>
&gt;&nbsp;immutability&nbsp;guarantees.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Indeed.&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Sun,&nbsp;22&nbsp;Mar&nbsp;2009,&nbsp;Drew&nbsp;Wilson&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;That&#39;s&nbsp;why&nbsp;I&#39;m&nbsp;proposing&nbsp;that&nbsp;the&nbsp;most&nbsp;reasonable&nbsp;implementation&nbsp;is&nbsp;just&lt;br&gt;<br>
&gt;&nbsp;to&nbsp;have&nbsp;a&nbsp;simple&nbsp;lock&nbsp;like&nbsp;I&nbsp;describe&nbsp;above&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;This&nbsp;is&nbsp;what&nbsp;I&#39;ve&nbsp;done.&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&gt;&nbsp;and&nbsp;then&nbsp;either&nbsp;deny&nbsp;access&nbsp;to&nbsp;localStorage&nbsp;to&nbsp;dedicated&nbsp;workers&nbsp;(shared&lt;br&gt;<br>
&gt;&nbsp;workers&nbsp;can&nbsp;silo&nbsp;the&nbsp;storage&nbsp;as&nbsp;I&nbsp;described&nbsp;previously),&nbsp;or&nbsp;else&nbsp;just&lt;br&gt;<br>
&gt;&nbsp;enforce&nbsp;a&nbsp;limit&nbsp;to&nbsp;how&nbsp;long&nbsp;workers&nbsp;can&nbsp;hold&nbsp;the&nbsp;localStorage&nbsp;lock&nbsp;(if&lt;br&gt;<br>
&gt;&nbsp;they&nbsp;hold&nbsp;it&nbsp;beyond&nbsp;some&nbsp;period,&nbsp;they&nbsp;get&nbsp;terminated&nbsp;just&nbsp;like&nbsp;page&lt;br&gt;<br>
&gt;&nbsp;script&nbsp;that&nbsp;doesn&#39;t&nbsp;re-enter&nbsp;the&nbsp;event&nbsp;loop).&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&#39;ve&nbsp;removed&nbsp;the&nbsp;localStorage&nbsp;API&nbsp;from&nbsp;workers.&lt;br&gt;<br>
&lt;br&gt;<br>
Terminating&nbsp;the&nbsp;script&nbsp;like&nbsp;that&nbsp;would&nbsp;be&nbsp;really&nbsp;hard&nbsp;to&nbsp;debug&nbsp;also&nbsp;--&lt;br&gt;<br>
especially&nbsp;since&nbsp;it&nbsp;would&nbsp;end&nbsp;up&nbsp;terminating&nbsp;differently&nbsp;on&nbsp;different&lt;br&gt;<br>
computers&nbsp;(e.g.&nbsp;a&nbsp;desktop&nbsp;might&nbsp;execute&nbsp;the&nbsp;whole&nbsp;initialisation&nbsp;code&nbsp;in&lt;br&gt;<br>
the&nbsp;time&nbsp;alloted,&nbsp;while&nbsp;slower&nbsp;mobile&nbsp;devices&nbsp;might&nbsp;execute&nbsp;only&nbsp;the&nbsp;first&lt;br&gt;<br>
part&nbsp;and&nbsp;the&nbsp;worker&nbsp;would&nbsp;be&nbsp;in&nbsp;an&nbsp;unstable&nbsp;state).&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Mon,&nbsp;23&nbsp;Mar&nbsp;2009,&nbsp;Jeremy&nbsp;Orlow&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;One&nbsp;thing&nbsp;that&nbsp;hasn&#39;t&nbsp;been&nbsp;considered&nbsp;yet&nbsp;is&nbsp;some&nbsp;sort&nbsp;of&nbsp;optional&nbsp;hint&lt;br&gt;<br>
&gt;&nbsp;to&nbsp;say&nbsp;&quot;I&#39;m&nbsp;done&quot;&nbsp;in&nbsp;terms&nbsp;of&nbsp;accessing&nbsp;localStorage.&nbsp; Maybe&nbsp;call&nbsp;it&lt;br&gt;<br>
&gt;&nbsp;localStorage.checkpoint()&nbsp;or&nbsp;localStroage.commit()?&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Since&nbsp;this&nbsp;applies&nbsp;to&nbsp;more&nbsp;than&nbsp;just&nbsp;storage,&nbsp;I&#39;ve&nbsp;put&nbsp;it&nbsp;on&nbsp;the&nbsp;Navigator&lt;br&gt;<br>
object.&nbsp;I&#39;ve&nbsp;called&nbsp;it&nbsp;releaseLock().&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Sat,&nbsp;21&nbsp;Mar&nbsp;2009,&nbsp;Jonas&nbsp;Sicking&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;As&nbsp;a&nbsp;side&nbsp;note,&nbsp;if&nbsp;we&nbsp;do&nbsp;go&nbsp;with&nbsp;this&nbsp;async&nbsp;lock&nbsp;acquiring,&nbsp;we&nbsp;could&nbsp;add&lt;br&gt;<br>
&gt;&nbsp;an&nbsp;API&nbsp;like:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;getLockedFeatures(callback,&nbsp;&#39;localStore&#39;,&nbsp;&#39;cookie&#39;);&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;This&nbsp;would&nbsp;be&nbsp;an&nbsp;asynchronously&nbsp;grab&nbsp;locks&nbsp;to&nbsp;multiple&nbsp;features&nbsp;and&nbsp;only&lt;br&gt;<br>
&gt;&nbsp;call&nbsp;the&nbsp;callback&nbsp;once&nbsp;all&nbsp;of&nbsp;them&nbsp;have&nbsp;been&nbsp;acquired.&nbsp;This&nbsp;would&nbsp;allow&lt;br&gt;<br>
&gt;&nbsp;computations&nbsp;across&nbsp;data&nbsp;from&nbsp;multiple&nbsp;locations&nbsp;guaranteed&nbsp;to&nbsp;be&nbsp;in&lt;br&gt;<br>
&gt;&nbsp;sync.&nbsp;The&nbsp;implementation&nbsp;would&nbsp;be&nbsp;responsible&nbsp;for&nbsp;grabbing&nbsp;the&nbsp;locks&nbsp;in&lt;br&gt;<br>
&gt;&nbsp;a&nbsp;consistent&nbsp;order&nbsp;to&nbsp;prevent&nbsp;deadlocks.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Why&nbsp;would&nbsp;we&nbsp;want&nbsp;more&nbsp;than&nbsp;one&nbsp;lock?&nbsp;Is&nbsp;the&nbsp;potential&nbsp;performance&nbsp;gain&lt;br&gt;<br>
worth&nbsp;the&nbsp;complexity?&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;problem&nbsp;with&nbsp;going&nbsp;with&nbsp;an&nbsp;async&nbsp;approach&nbsp;is&nbsp;that&nbsp;it&nbsp;means&nbsp;changing&lt;br&gt;<br>
the&nbsp;API,&nbsp;which&nbsp;is&nbsp;something&nbsp;we&nbsp;can&#39;t&nbsp;really&nbsp;do&nbsp;for&nbsp;cookie&nbsp;(and&nbsp;don&#39;t&lt;br&gt;<br>
really&nbsp;want&nbsp;to&nbsp;do&nbsp;for&nbsp;localStorage,&nbsp;since&nbsp;IE8&nbsp;has&nbsp;shipped&nbsp;it.)&nbsp;We&nbsp;we&nbsp;are&lt;br&gt;<br>
going&nbsp;to&nbsp;need&nbsp;a&nbsp;synchronous&nbsp;locking&nbsp;mechanism&nbsp;anyway.&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Mon,&nbsp;23&nbsp;Mar&nbsp;2009,&nbsp;Robert&nbsp;O&#39;Callahan&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;It&nbsp;has&nbsp;to&nbsp;be&nbsp;resolved&nbsp;in&nbsp;a&nbsp;way&nbsp;that&nbsp;doesn&#39;t&nbsp;expose&nbsp;asynchronous&nbsp;cookie&lt;br&gt;<br>
&gt;&nbsp;or&nbsp;localStorage&nbsp;changes&nbsp;to&nbsp;Web&nbsp;developers.&nbsp;There&nbsp;is&nbsp;abundant&nbsp;evidence&lt;br&gt;<br>
&gt;&nbsp;that&nbsp;race&nbsp;conditions&nbsp;and&nbsp;synchronization&nbsp;are&nbsp;too&nbsp;hard&nbsp;for&nbsp;developers&nbsp;to&lt;br&gt;<br>
&gt;&nbsp;deal&nbsp;with.&nbsp;The&nbsp;spec&nbsp;should&nbsp;forbid&nbsp;asynchronously&nbsp;visible&nbsp;changes&nbsp;to&lt;br&gt;<br>
&gt;&nbsp;cookies&nbsp;or&nbsp;localStorage.&nbsp;In&nbsp;fact,&nbsp;it&nbsp;should&nbsp;probably&nbsp;simply&nbsp;say&nbsp;that&nbsp;all&lt;br&gt;<br>
&gt;&nbsp;script&nbsp;execution&nbsp;is&nbsp;serializable:&nbsp;always&nbsp;equivalent&nbsp;to&nbsp;some&nbsp;execution&lt;br&gt;<br>
&gt;&nbsp;you&nbsp;could&nbsp;get&nbsp;with&nbsp;a&nbsp;single-threaded&nbsp;browser&nbsp;that&nbsp;runs&nbsp;all&nbsp;scripts&nbsp;to&lt;br&gt;<br>
&gt;&nbsp;completion.&nbsp;Allowance&nbsp;could&nbsp;be&nbsp;made&nbsp;for&nbsp;explicit&nbsp;yield&nbsp;points&nbsp;if&nbsp;we&nbsp;need&lt;br&gt;<br>
&gt;&nbsp;to,&nbsp;e.g.&nbsp;alert().&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Generally&nbsp;speaking&nbsp;I&nbsp;have&nbsp;tried&nbsp;to&nbsp;maintain&nbsp;this&nbsp;invariant,&nbsp;but&nbsp;I&nbsp;have&lt;br&gt;<br>
failed&nbsp;with&nbsp;cookies,&nbsp;and&nbsp;with&nbsp;localStorage&nbsp;in&nbsp;workers.&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&gt;&nbsp;Some&nbsp;sort&nbsp;of&nbsp;implicit&nbsp;locking&nbsp;with&nbsp;guaranteed&nbsp;deadlock&nbsp;freedom&nbsp;should&nbsp;be&lt;br&gt;<br>
&gt;&nbsp;workable&nbsp;for&nbsp;parallel&nbsp;browser&nbsp;implementations.&nbsp;For&nbsp;example,&nbsp;partition&lt;br&gt;<br>
&gt;&nbsp;browser&nbsp;contexts&nbsp;into&nbsp;&quot;related&quot;&nbsp;subsets,&nbsp;where&nbsp;context&nbsp;A&nbsp;is&nbsp;related&nbsp;to&lt;br&gt;<br>
&gt;&nbsp;context&nbsp;B&nbsp;if&nbsp;a&nbsp;script&nbsp;running&nbsp;in&nbsp;context&nbsp;A&nbsp;can&nbsp;affect&nbsp;the&nbsp;execution&nbsp;of&lt;br&gt;<br>
&gt;&nbsp;an&nbsp;already-running&nbsp;script&nbsp;in&nbsp;context&nbsp;B.&nbsp;Use&nbsp;one&nbsp;lock&nbsp;per&nbsp;subset,&nbsp;and&lt;br&gt;<br>
&gt;&nbsp;have&nbsp;a&nbsp;script&nbsp;execution&nbsp;acquire&nbsp;the&nbsp;lock&nbsp;when&nbsp;it&nbsp;first&nbsp;touches&lt;br&gt;<br>
&gt;&nbsp;localStorage&nbsp;or&nbsp;cookies,&nbsp;and&nbsp;drop&nbsp;the&nbsp;lock&nbsp;when&nbsp;it&nbsp;completes&nbsp;(or&lt;br&gt;<br>
&gt;&nbsp;yields).&nbsp;Additional&nbsp;optimizations&nbsp;are&nbsp;possible.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&#39;ve&nbsp;updated&nbsp;the&nbsp;spec&nbsp;to&nbsp;require&nbsp;the&nbsp;locking&nbsp;mechanism&nbsp;that&nbsp;was&nbsp;in&nbsp;place&lt;br&gt;<br>
for&nbsp;storage&nbsp;for&nbsp;cookies&nbsp;as&nbsp;well.&nbsp;This&nbsp;still&nbsp;means&nbsp;that&nbsp;one&nbsp;window&nbsp;can&lt;br&gt;<br>
block&nbsp;all&nbsp;other&nbsp;windows&nbsp;that&nbsp;try&nbsp;to&nbsp;use&nbsp;cookies,&nbsp;though,&nbsp;so&nbsp;I&#39;ve&nbsp;also&lt;br&gt;<br>
added&nbsp;navigator.releaseLock()&nbsp;which&nbsp;can&nbsp;be&nbsp;called&nbsp;to&nbsp;explicitly&nbsp;release&lt;br&gt;<br>
the&nbsp;lock&nbsp;that&nbsp;is&nbsp;put&nbsp;in&nbsp;place.&lt;br&gt;<br>
&lt;br&gt;<br>
User&nbsp;agents&nbsp;that&nbsp;share&nbsp;event&nbsp;loops&nbsp;between&nbsp;origins&nbsp;can&#39;t&nbsp;actually&nbsp;have&nbsp;any&lt;br&gt;<br>
more&nbsp;than&nbsp;one&nbsp;lock&nbsp;total.&nbsp;Consider&nbsp;a&nbsp;case&nbsp;where&nbsp;there&nbsp;are&nbsp;three&nbsp;windows&lt;br&gt;<br>
from&nbsp;three&nbsp;different&nbsp;origins,&nbsp;A,&nbsp;B,&nbsp;and&nbsp;C,&nbsp;where&nbsp;C&nbsp;contains&nbsp;a&nbsp;couple&nbsp;of&lt;br&gt;<br>
&lt;iframe&gt;s,&nbsp;and&nbsp;where&nbsp;A,&nbsp;B,&nbsp;and&nbsp;C&nbsp;are&nbsp;independent,&nbsp;but&nbsp;C&nbsp;share&nbsp;an&nbsp;event&lt;br&gt;<br>
loop&nbsp;with&nbsp;whatever&nbsp;content&nbsp;is&nbsp;in&nbsp;its&nbsp;iframes.&nbsp;(This&nbsp;is&nbsp;the&nbsp;situation&lt;br&gt;<br>
Chrome&nbsp;and&nbsp;IE&nbsp;are&nbsp;in,&nbsp;as&nbsp;I&nbsp;understand&nbsp;it,&nbsp;with&nbsp;event&nbsp;loops&nbsp;being&lt;br&gt;<br>
per-window&nbsp;not&nbsp;per-origin,&nbsp;and&nbsp;it&nbsp;may&nbsp;be&nbsp;required&nbsp;because&nbsp;access&nbsp;to&nbsp;the&lt;br&gt;<br>
frames[]&nbsp;hierarchy&nbsp;is&nbsp;synchronous.)&nbsp;Now,&nbsp;assume&nbsp;A&nbsp;and&nbsp;B&nbsp;have&nbsp;both&nbsp;obtained&lt;br&gt;<br>
their&nbsp;respective&nbsp;locks,&nbsp;and&nbsp;are&nbsp;busy&nbsp;doing&nbsp;some&nbsp;long&nbsp;script.&nbsp;C&nbsp;is&nbsp;free&nbsp;to&lt;br&gt;<br>
run&nbsp;more&nbsp;tasks&nbsp;from&nbsp;its&nbsp;event&nbsp;loop,&nbsp;which&nbsp;could&nbsp;include&nbsp;navigating&nbsp;one&lt;br&gt;<br>
iframe&nbsp;to&nbsp;a&nbsp;page&nbsp;on&nbsp;either&nbsp;A&nbsp;and&nbsp;the&nbsp;other&nbsp;iframe&nbsp;to&nbsp;a&nbsp;page&nbsp;on&nbsp;B,&nbsp;meaning&lt;br&gt;<br>
that&nbsp;the&nbsp;event&nbsp;loop&nbsp;of&nbsp;C&nbsp;is&nbsp;now&nbsp;beholden&nbsp;to&nbsp;two&nbsp;locks.&nbsp;If&nbsp;there&nbsp;is&nbsp;any&lt;br&gt;<br>
manner&nbsp;in&nbsp;which&nbsp;to&nbsp;synchronously&nbsp;cause&nbsp;another&nbsp;origin&nbsp;to&nbsp;run&nbsp;script,&nbsp;this&lt;br&gt;<br>
now&nbsp;means&nbsp;that&nbsp;C&nbsp;can&nbsp;attempt&nbsp;to&nbsp;obtain&nbsp;both&nbsp;locks;&nbsp;if&nbsp;we&nbsp;now&nbsp;imagine&lt;br&gt;<br>
another&nbsp;window&nbsp;just&nbsp;like&nbsp;C&nbsp;that&nbsp;instead&nbsp;obtains&nbsp;the&nbsp;locks&nbsp;in&nbsp;the&nbsp;reverse&lt;br&gt;<br>
order,&nbsp;we&nbsp;get&nbsp;deadlock.&lt;br&gt;<br>
&lt;br&gt;<br>
If&nbsp;it&nbsp;can&nbsp;be&nbsp;shown&nbsp;that&nbsp;it&nbsp;is&nbsp;not&nbsp;ever&nbsp;possible&nbsp;for&nbsp;script&nbsp;in&nbsp;one&nbsp;origin&lt;br&gt;<br>
to&nbsp;synchronously&nbsp;invoke&nbsp;script&nbsp;in&nbsp;another&nbsp;origin,&nbsp;then&nbsp;I&nbsp;guess&nbsp;we&nbsp;could&lt;br&gt;<br>
have&nbsp;per-origin&nbsp;locks&nbsp;instead&nbsp;of&nbsp;a&nbsp;single&nbsp;lock.&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Sat,&nbsp;21&nbsp;Mar&nbsp;2009,&nbsp;Jonas&nbsp;Sicking&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;I&nbsp;don&#39;t&nbsp;think&nbsp;it&nbsp;will&nbsp;be&nbsp;a&nbsp;big&nbsp;problem.&nbsp;As&nbsp;long&nbsp;as&nbsp;we&nbsp;ensure&nbsp;that&nbsp;all&lt;br&gt;<br>
&gt;&nbsp;locks&nbsp;are&nbsp;per-origin,&nbsp;that&nbsp;means&nbsp;that&nbsp;an&nbsp;application&nbsp;can&nbsp;only&nbsp;starve&lt;br&gt;<br>
&lt;/div&gt;&gt;&nbsp;itself&nbsp;[using&nbsp;workers].&nbsp;Something&nbsp;that&nbsp;it&nbsp;has&nbsp;clear&nbsp;incentives&nbsp;not&nbsp;to.&lt;br&gt;<br>
&lt;br&gt;<br>
It&nbsp;can&nbsp;starve&nbsp;itself&nbsp;and&nbsp;anyone&nbsp;that&nbsp;it&nbsp;is&nbsp;related&nbsp;to,&nbsp;which&nbsp;is&nbsp;a&nbsp;problem;&lt;br&gt;<br>
but&nbsp;it&nbsp;would&nbsp;also,&nbsp;I&#39;m&nbsp;sure,&nbsp;lead&nbsp;to&nbsp;pretty&nbsp;awful&nbsp;bugs&nbsp;that&nbsp;authors&lt;br&gt;<br>
wouldn&#39;t&nbsp;understand&nbsp;how&nbsp;to&nbsp;fix.&nbsp;Are&nbsp;we&nbsp;sure&nbsp;we&nbsp;want&nbsp;to&nbsp;go&nbsp;there?&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
--&lt;br&gt;<br>
Ian&nbsp;Hickson&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;U+1047E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )\._.,--....,&#39;``.&nbsp; &nbsp; fL&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://ln.hixie.ch/&quot;&nbsp;target=&quot;_blank&quot;&gt;http://ln.hixie.ch/&lt;/a&gt;&nbsp; &nbsp; &nbsp; &nbsp;U+263A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /,&nbsp; &nbsp;_..&nbsp;\&nbsp; &nbsp;_\&nbsp; ;`._&nbsp;,.&lt;br&gt;<br>
Things&nbsp;that&nbsp;are&nbsp;impossible&nbsp;just&nbsp;take&nbsp;longer.&nbsp; &nbsp;`._.-(,_..&#39;--(,_..&#39;`-.;.&#39;&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
