<tt>
On&nbsp;Thu,&nbsp;Sep&nbsp;10,&nbsp;2009&nbsp;at&nbsp;6:37&nbsp;AM,&nbsp;Darin&nbsp;Fisher&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:darin@chromium.org&quot;&gt;darin@chromium.org&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;Yes,&nbsp;exactly.&nbsp;Sorry&nbsp;for&nbsp;not&nbsp;making&nbsp;this&nbsp;clear.&nbsp; I&nbsp;believe&nbsp;implicit&nbsp;locking&nbsp;for&nbsp;LocalStorage&nbsp;(and&nbsp;the&nbsp;implicit&nbsp;unlocking)&nbsp;is&nbsp;going&nbsp;to&nbsp;yield&nbsp;something&nbsp;very&nbsp;confusing&nbsp;and&nbsp;hard&nbsp;to&nbsp;implement&nbsp;well.&nbsp; The&nbsp;potential&nbsp;for&nbsp;dead&nbsp;locks&nbsp;when&nbsp;you&nbsp;fail&nbsp;to&nbsp;implicitly&nbsp;unlock&nbsp;properly&nbsp;scares&nbsp;me&lt;/div&gt;<br>
&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;You&nbsp;mean&nbsp;when&nbsp;the&nbsp;browser&nbsp;implementation&nbsp;has&nbsp;a&nbsp;bug&nbsp;and&nbsp;fails&nbsp;to&nbsp;implicitly&nbsp;unlock?&lt;br&gt;&lt;br&gt;Giving&nbsp;Web&nbsp;authors&nbsp;the&nbsp;crappy&nbsp;race-prone&nbsp;and&nbsp;deadlock-prone&nbsp;locking&nbsp;programming&nbsp;model&nbsp;scares&nbsp;*me*.&nbsp;Yes,&nbsp;your&nbsp;acquireLock&nbsp;can&#39;t&nbsp;get&nbsp;you&nbsp;into&nbsp;a&nbsp;hard&nbsp;deadlock,&nbsp;strictly&nbsp;speaking,&nbsp;but&nbsp;you&nbsp;can&nbsp;still&nbsp;effectively&nbsp;deadlock&nbsp;your&nbsp;application&nbsp;by&nbsp;waiting&nbsp;for&nbsp;a&nbsp;lock&nbsp;to&nbsp;become&nbsp;available&nbsp;that&nbsp;never&nbsp;can.&nbsp;Also,&nbsp;how&nbsp;many&nbsp;authors&nbsp;will&nbsp;forget&nbsp;to&nbsp;test&nbsp;the&nbsp;result&nbsp;of&nbsp;acquireLock&nbsp;(because&nbsp;they&#39;re&nbsp;used&nbsp;to&nbsp;other&nbsp;locking&nbsp;APIs&nbsp;that&nbsp;block)&nbsp;and&nbsp;find&nbsp;that&nbsp;things&nbsp;are&nbsp;OK&nbsp;in&nbsp;their&nbsp;testing?&lt;br&gt;<br>
&lt;br&gt;I&nbsp;think&nbsp;we&nbsp;should&nbsp;be&nbsp;willing&nbsp;to&nbsp;accept&nbsp;a&nbsp;very&nbsp;high&nbsp;implementation&nbsp;burden&nbsp;on&nbsp;browser&nbsp;vendors&nbsp;in&nbsp;exchange&nbsp;for&nbsp;minimizing&nbsp;the&nbsp;burden&nbsp;on&nbsp;Web&nbsp;authors.&nbsp;Now,&nbsp;if&nbsp;we&nbsp;find&nbsp;that&nbsp;authors&nbsp;are&nbsp;needing&nbsp;to&nbsp;build&nbsp;explicit&nbsp;locks&nbsp;using&nbsp;localStorage,&nbsp;we&nbsp;should&nbsp;figure&nbsp;out&nbsp;their&nbsp;use-cases&nbsp;and&nbsp;see&nbsp;what&nbsp;a&nbsp;better&nbsp;solution&nbsp;for&nbsp;those&nbsp;use-cases&nbsp;might&nbsp;be,&nbsp;instead&nbsp;of&nbsp;giving&nbsp;them&nbsp;a&nbsp;more&nbsp;convenient&nbsp;way&nbsp;to&nbsp;endanger&nbsp;themselves.&lt;br&gt;<br>
&lt;br&nbsp;clear=&quot;all&quot;&gt;&lt;/div&gt;&lt;/div&gt;Rob&lt;br&gt;--&nbsp;&lt;br&gt;&quot;He&nbsp;was&nbsp;pierced&nbsp;for&nbsp;our&nbsp;transgressions,&nbsp;he&nbsp;was&nbsp;crushed&nbsp;for&nbsp;our&nbsp;iniquities;&nbsp;the&nbsp;punishment&nbsp;that&nbsp;brought&nbsp;us&nbsp;peace&nbsp;was&nbsp;upon&nbsp;him,&nbsp;and&nbsp;by&nbsp;his&nbsp;wounds&nbsp;we&nbsp;are&nbsp;healed.&nbsp;We&nbsp;all,&nbsp;like&nbsp;sheep,&nbsp;have&nbsp;gone&nbsp;astray,&nbsp;each&nbsp;of&nbsp;us&nbsp;has&nbsp;turned&nbsp;to&nbsp;his&nbsp;own&nbsp;way;&nbsp;and&nbsp;the&nbsp;LORD&nbsp;has&nbsp;laid&nbsp;on&nbsp;him&nbsp;the&nbsp;iniquity&nbsp;of&nbsp;us&nbsp;all.&quot;&nbsp;[Isaiah&nbsp;53:5-6]&lt;br&gt;<br>
<br>

</tt>
