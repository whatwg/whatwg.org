<tt>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;Sep&nbsp;10,&nbsp;2009&nbsp;at&nbsp;5:28&nbsp;PM,&nbsp;Darin&nbsp;Fisher&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:darin@chromium.org&quot;&gt;darin@chromium.org&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;On&nbsp;Thu,&nbsp;Sep&nbsp;10,&nbsp;2009&nbsp;at&nbsp;4:59&nbsp;PM,&nbsp;Robert&nbsp;O&#39;Callahan&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:robert@ocallahan.org&quot;&nbsp;target=&quot;_blank&quot;&gt;robert@ocallahan.org&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
<br>
&lt;div&gt;On&nbsp;Fri,&nbsp;Sep&nbsp;11,&nbsp;2009&nbsp;at&nbsp;9:52&nbsp;AM,&nbsp;Darin&nbsp;Fisher&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:darin@chromium.org&quot;&nbsp;target=&quot;_blank&quot;&gt;darin@chromium.org&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;border-left:1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);padding-left:1ex&quot;&gt;<br>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;I&nbsp;think&nbsp;there&nbsp;are&nbsp;good&nbsp;applications&nbsp;for&nbsp;setting&nbsp;a&nbsp;long-lived&nbsp;lock.&nbsp; We&nbsp;can&nbsp;try&nbsp;to&nbsp;make&nbsp;it&nbsp;hard&nbsp;for&nbsp;people&nbsp;to&nbsp;create&nbsp;those&nbsp;locks,&nbsp;but&nbsp;then&nbsp;the&nbsp;end&nbsp;result&nbsp;will&nbsp;be&nbsp;suboptimal.&nbsp; They&#39;ll&nbsp;still&nbsp;find&nbsp;a&nbsp;way&nbsp;to&nbsp;build&nbsp;them.&lt;/div&gt;<br>
<br>
<br>
&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;One&nbsp;use&nbsp;case&nbsp;is&nbsp;selecting&nbsp;a&nbsp;master&nbsp;instance&nbsp;of&nbsp;an&nbsp;app.&nbsp;I&nbsp;haven&#39;t&nbsp;really&nbsp;been&nbsp;following&nbsp;the&nbsp;&quot;global&nbsp;script&quot;&nbsp;thread,&nbsp;but&nbsp;doesn&#39;t&nbsp;that&nbsp;address&nbsp;this&nbsp;use&nbsp;case&nbsp;in&nbsp;a&nbsp;more&nbsp;direct&nbsp;way?&lt;br&gt;<br>
<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;No&nbsp;it&nbsp;doesn&#39;t.&nbsp; The&nbsp;global&nbsp;script&nbsp;would&nbsp;only&nbsp;be&nbsp;reachable&nbsp;by&nbsp;related&nbsp;browsing&nbsp;contexts&nbsp;(similar&nbsp;to&nbsp;how&nbsp;window.open&nbsp;w/&nbsp;a&nbsp;name&nbsp;works).&nbsp; In&nbsp;a&nbsp;multi-process&nbsp;browser,&nbsp;you&nbsp;don&#39;t&nbsp;want&nbsp;to&nbsp;_require_&nbsp;script&nbsp;bindings&nbsp;to&nbsp;span&nbsp;processes.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;That&#39;s&nbsp;why&nbsp;I&nbsp;mentioned&nbsp;shared&nbsp;workers.&nbsp; Because&nbsp;they&nbsp;are&nbsp;isolated&nbsp;and&nbsp;communication&nbsp;is&nbsp;via&nbsp;string&nbsp;passing,&nbsp;it&nbsp;is&nbsp;possible&nbsp;for&nbsp;processes&nbsp;in&nbsp;unrelated&nbsp;browsing&nbsp;contexts&nbsp;to&nbsp;communicate&nbsp;with&nbsp;the&nbsp;same&nbsp;shared&nbsp;workers.&lt;/div&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&gt;<br>
&lt;br&gt;What&nbsp;other&nbsp;use-cases&nbsp;for&nbsp;long-lived&nbsp;locks&nbsp;are&nbsp;there?&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;is&nbsp;a&nbsp;good&nbsp;question.&nbsp; Most&nbsp;of&nbsp;the&nbsp;use&nbsp;cases&nbsp;I&nbsp;can&nbsp;imagine&nbsp;boil&nbsp;down&nbsp;to&nbsp;a&nbsp;master/slave&nbsp;division&nbsp;of&nbsp;labor.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;For&nbsp;example,&nbsp;if&nbsp;I&nbsp;write&nbsp;an&nbsp;app&nbsp;that&nbsp;does&nbsp;some&nbsp;batch&nbsp;asynchronous&nbsp;processing&nbsp;(many&nbsp;setTimeout&nbsp;calls&nbsp;worth),&nbsp;then&nbsp;I&nbsp;can&nbsp;imagine&nbsp;setting&nbsp;a&nbsp;flag&nbsp;across&nbsp;the&nbsp;entire&nbsp;job,&nbsp;so&nbsp;that&nbsp;other&nbsp;instances&nbsp;of&nbsp;my&nbsp;app&nbsp;know&nbsp;not&nbsp;to&nbsp;start&nbsp;another&nbsp;such&nbsp;overlapping&nbsp;job&nbsp;until&nbsp;I&#39;m&nbsp;finished.&nbsp; In&nbsp;this&nbsp;example,&nbsp;I&#39;m&nbsp;supposing&nbsp;that&nbsp;storage&nbsp;is&nbsp;modified&nbsp;at&nbsp;each&nbsp;step&nbsp;such&nbsp;that&nbsp;guaranteeing&nbsp;storage&nbsp;consistency&nbsp;within&nbsp;the&nbsp;scope&nbsp;of&nbsp;script&nbsp;evaluation&nbsp;is&nbsp;not&nbsp;enough.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;div&gt;-Darin&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Also,&nbsp;the&nbsp;other&nbsp;motivating&nbsp;factor&nbsp;for&nbsp;me&nbsp;is&nbsp;access&nbsp;to&nbsp;LocalStorage&nbsp;from&nbsp;workers.&nbsp; (I&nbsp;know&nbsp;it&nbsp;has&nbsp;been&nbsp;removed&nbsp;from&nbsp;the&nbsp;spec,&nbsp;but&nbsp;that&nbsp;is&nbsp;unfortunate,&nbsp;no?)&nbsp; &lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;By&nbsp;definition,&nbsp;workers&nbsp;are&nbsp;designed&nbsp;to&nbsp;be&nbsp;long&nbsp;lived,&nbsp;possibly&nbsp;doing&nbsp;long&nbsp;stretches&nbsp;of&nbsp;computation,&nbsp;and&nbsp;being&nbsp;able&nbsp;to&nbsp;intermix&nbsp;reads&nbsp;and&nbsp;writes&nbsp;to&nbsp;storage&nbsp;during&nbsp;that&nbsp;stretch&nbsp;of&nbsp;computation&nbsp;would&nbsp;be&nbsp;nice.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Moreover,&nbsp;it&nbsp;would&nbsp;be&nbsp;nice&nbsp;if&nbsp;a&nbsp;worker&nbsp;in&nbsp;domain&nbsp;A&nbsp;could&nbsp;effectively&nbsp;&quot;lock&quot;&nbsp;part&nbsp;of&nbsp;the&nbsp;storage&nbsp;so&nbsp;that&nbsp;the&nbsp;portion&nbsp;of&nbsp;the&nbsp;app&nbsp;running&nbsp;on&nbsp;the&nbsp;main&nbsp;thread&nbsp;could&nbsp;continue&nbsp;accessing&nbsp;the&nbsp;other&nbsp;parts&nbsp;of&nbsp;storage&nbsp;associated&nbsp;with&nbsp;domain&nbsp;A.&nbsp; The&nbsp;implicit&nbsp;storage&nbsp;mutex&nbsp;doesn&#39;t&nbsp;support&nbsp;this&nbsp;use&nbsp;case&nbsp;very&nbsp;well.&nbsp; You&nbsp;end&nbsp;up&nbsp;having&nbsp;to&nbsp;call&nbsp;the&nbsp;getStorageUpdates&nbsp;function&nbsp;periodically&nbsp;(releasing&nbsp;the&nbsp;lock&nbsp;in&nbsp;the&nbsp;middle&nbsp;of&nbsp;computation!!).&nbsp; That&nbsp;kind&nbsp;of&nbsp;thing&nbsp;is&nbsp;really&nbsp;scary&nbsp;and&nbsp;hard&nbsp;to&nbsp;get&nbsp;right.&nbsp; I&nbsp;cringe&nbsp;whenever&nbsp;I&nbsp;see&nbsp;someone&nbsp;unlocking,&nbsp;calling&nbsp;out&nbsp;to&nbsp;foreign&nbsp;code,&nbsp;and&nbsp;then&nbsp;re-acquiring&nbsp;the&nbsp;lock.&nbsp; Why?&nbsp; because&nbsp;it&nbsp;means&nbsp;that&nbsp;existing&nbsp;variables,&nbsp;stack&nbsp;based&nbsp;or&nbsp;otherwise,&nbsp;that&nbsp;were&nbsp;previously&nbsp;consistent&nbsp;may&nbsp;have&nbsp;become&nbsp;inconsistent&nbsp;with&nbsp;global&nbsp;data&nbsp;in&nbsp;storage&nbsp;due&nbsp;to&nbsp;having&nbsp;released&nbsp;the&nbsp;lock.&nbsp; getStorageUpdates&nbsp;is&nbsp;dangerous.&nbsp; it&nbsp;is&nbsp;a&nbsp;big&nbsp;hammer&nbsp;that&nbsp;doesn&#39;t&nbsp;really&nbsp;fit&nbsp;the&nbsp;bill.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;alternative&nbsp;to&nbsp;getStorageUpdates&nbsp;in&nbsp;this&nbsp;case&nbsp;is&nbsp;to&nbsp;create&nbsp;another&nbsp;domain&nbsp;on&nbsp;which&nbsp;to&nbsp;run&nbsp;the&nbsp;background&nbsp;worker&nbsp;just&nbsp;so&nbsp;that&nbsp;you&nbsp;can&nbsp;have&nbsp;an&nbsp;independent&nbsp;slice&nbsp;of&nbsp;storage.&nbsp; That&nbsp;seems&nbsp;really&nbsp;lame&nbsp;to&nbsp;me.&nbsp; Why&nbsp;should&nbsp;domain&nbsp;A&nbsp;have&nbsp;to&nbsp;jump&nbsp;through&nbsp;such&nbsp;hoops?&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-Darin&lt;/div&gt;&lt;/div&gt;<br>

</tt>
