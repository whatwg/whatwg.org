<tt>
As&nbsp;mentioned&nbsp;in:&lt;br&gt;&lt;a&nbsp;href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=618644&quot;&gt;https://bugzilla.mozilla.org/show_bug.cgi?id=618644&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;http://www.w3.org/Bugs/Public/show_bug.cgi?id=11468&quot;&gt;http://www.w3.org/Bugs/Public/show_bug.cgi?id=11468&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;I&nbsp;think&nbsp;the&nbsp;current&nbsp;behavior&nbsp;of&nbsp;onpopstate&nbsp;is&nbsp;very&nbsp;hard&nbsp;to&nbsp;understand.&nbsp;(And&nbsp;I&#39;m&nbsp;having&nbsp;trouble&nbsp;explaining&nbsp;it&nbsp;as&nbsp;well)&lt;br&gt;&lt;br&gt;First&nbsp;off&nbsp;I&#39;m&nbsp;going&nbsp;to&nbsp;use&nbsp;the&nbsp;term&nbsp;&quot;media&nbsp;heavy&nbsp;site&quot;&nbsp;as&nbsp;a&nbsp;synonym&nbsp;to&nbsp;&quot;pages&nbsp;with&nbsp;images&nbsp;on&nbsp;servers&nbsp;that&nbsp;take&nbsp;ages&nbsp;to&nbsp;respond&quot;&nbsp;as&nbsp;it&nbsp;causes&nbsp;the&nbsp;same&nbsp;effect&nbsp;but&nbsp;is&nbsp;much&nbsp;shorter.&lt;br&gt;<br>
&lt;br&gt;Consider&nbsp;a&nbsp;new&nbsp;web&nbsp;application&nbsp;that&nbsp;loads&nbsp;pages. &nbsp;All&nbsp;links&nbsp;are&nbsp;transformed&nbsp;into&nbsp;ajax&nbsp;and&nbsp;storing&nbsp;the&nbsp;history&nbsp;data&nbsp;with&nbsp;pushState&nbsp;if&nbsp;the&nbsp;useragent&nbsp;supports&nbsp;them. &nbsp;The&nbsp;inital&nbsp;page&nbsp;load&nbsp;serves&nbsp;the&nbsp;full&nbsp;page&nbsp;so&nbsp;that&nbsp;useragents&nbsp;that&nbsp;don&#39;t&nbsp;support&nbsp;pushState&nbsp;will&nbsp;get&nbsp;the&nbsp;old&nbsp;page&nbsp;navigation.&lt;br&gt;<br>
&lt;br&gt;The&nbsp;user&nbsp;clicks&nbsp;on&nbsp;page1.html. &nbsp;Then&nbsp;he&nbsp;clicks&nbsp;on&nbsp;page2.html. &nbsp;For&nbsp;every&nbsp;clicking,&nbsp;we&nbsp;pushState&nbsp;an&nbsp;object&nbsp;into&nbsp;the&nbsp;history&nbsp;containing&nbsp;the&nbsp;new&nbsp;url. &nbsp;The&nbsp;user&nbsp;clicks&nbsp;back. &nbsp;A&nbsp;popstate&nbsp;event&nbsp;with&nbsp;state&nbsp;{url:&nbsp;&#39;page1.html&#39;}&nbsp;is&nbsp;fired. &nbsp;The&nbsp;ajax&nbsp;application&nbsp;loads&nbsp;page1.html. &nbsp;The&nbsp;user&nbsp;clicks&nbsp;back&nbsp;again. &nbsp;A&nbsp;popstate&nbsp;event&nbsp;with&nbsp;state&nbsp;[null]&nbsp;is&nbsp;fired. &nbsp;The&nbsp;ajax&nbsp;application&nbsp;doesn&#39;t&nbsp;do&nbsp;anything. &nbsp;The&nbsp;user&nbsp;refreshes&nbsp;the&nbsp;page&nbsp;and&nbsp;thinks&nbsp;&quot;what&nbsp;the&nbsp;heck?&quot;&lt;br&gt;<br>
&lt;br&gt;So&nbsp;I&nbsp;change&nbsp;the&nbsp;application&nbsp;a&nbsp;bit. &nbsp;When&nbsp;the&nbsp;event&nbsp;state&nbsp;is&nbsp;null,&nbsp;I&nbsp;repull&nbsp;the&nbsp;original&nbsp;page. &nbsp;What&nbsp;happens&nbsp;is,&nbsp;the&nbsp;application&nbsp;fetches&nbsp;the&nbsp;page&nbsp;again&nbsp;after&nbsp;onload&nbsp;because&nbsp;onpopstate&nbsp;is&nbsp;called&nbsp;after&nbsp;onload. &nbsp;This&nbsp;makes&nbsp;the&nbsp;application&nbsp;refetch&nbsp;the&nbsp;same&nbsp;page&nbsp;after&nbsp;onload. &nbsp;If&nbsp;the&nbsp;site&nbsp;is&nbsp;media&nbsp;heavy&nbsp;then&nbsp;that&nbsp;eats&nbsp;both&nbsp;bandwidth&nbsp;and&nbsp;makes&nbsp;the&nbsp;user&nbsp;wait. &nbsp;(I&nbsp;originally&nbsp;proposed&nbsp;to&nbsp;remove&nbsp;the&nbsp;onpopstate&nbsp;after&nbsp;onload&nbsp;but&nbsp;realized&nbsp;that&nbsp;for&nbsp;some&nbsp;applications,&nbsp;the&nbsp;event&nbsp;state&nbsp;might&nbsp;not&nbsp;be&nbsp;reflected&nbsp;in&nbsp;the&nbsp;url,&nbsp;and&nbsp;when&nbsp;reloading&nbsp;the&nbsp;page,&nbsp;the&nbsp;page&nbsp;would&nbsp;need&nbsp;the&nbsp;event&nbsp;state&nbsp;to&nbsp;load&nbsp;the&nbsp;correct&nbsp;page.)&lt;br&gt;<br>
&lt;br&gt;I&nbsp;need&nbsp;to&nbsp;distinguish&nbsp;the&nbsp;inital&nbsp;popstate&nbsp;and&nbsp;other&nbsp;popstates. &nbsp;Assuming&nbsp;that&nbsp;popstate&nbsp;always&nbsp;fired&nbsp;after&nbsp;onload,&nbsp;I&nbsp;just&nbsp;had&nbsp;a&nbsp;variable&nbsp;that&nbsp;removed&nbsp;the&nbsp;first&nbsp;popstate. &nbsp;Turns&nbsp;out&nbsp;if&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;stop&nbsp;button&nbsp;before&nbsp;onload&nbsp;fires,&nbsp;onpopstate&nbsp;doesn&#39;t&nbsp;fire.&lt;br&gt;<br>
&lt;br&gt;So&nbsp;I&nbsp;fire&nbsp;a&nbsp;history.replaceState({url:&#39;index.html&#39;})&nbsp;on&nbsp;domready&nbsp;of&nbsp;index.html. &nbsp;The&nbsp;first&nbsp;onpopstate&nbsp;fires&nbsp;with&nbsp;event&nbsp;state&nbsp;[null]. &nbsp;Refreshing&nbsp;the&nbsp;page&nbsp;or&nbsp;navigating&nbsp;forward&nbsp;then&nbsp;backward&nbsp;gives&nbsp;a&nbsp;event&nbsp;state&nbsp;of&nbsp;{url:&nbsp;&#39;index.html&#39;}.&nbsp;Yay!&lt;br&gt;<br>
&lt;br&gt;Until&nbsp;recently&nbsp;the&nbsp;spec&nbsp;changed. &nbsp;And&nbsp;Firefox&nbsp;4&nbsp;got&nbsp;updated&nbsp;to&nbsp;match&nbsp;the&nbsp;spec. &nbsp;The&nbsp;inital&nbsp;popstate&nbsp;now&nbsp;fires&nbsp;with&nbsp;the&nbsp;&#39;pending&nbsp;state&nbsp;object&#39;. &nbsp;Now&nbsp;I&nbsp;can&#39;t&nbsp;distinguish&nbsp;the&nbsp;inital&nbsp;popstate&nbsp;anymore.&lt;br&gt;&lt;br&gt;And&nbsp;the&nbsp;problem&nbsp;just&nbsp;doesn&#39;t&nbsp;stop&nbsp;there.&lt;br&gt;<br>
&lt;br&gt;Suppose&nbsp;this:&nbsp;the&nbsp;user&nbsp;clicks&nbsp;on&nbsp;page1.html. &nbsp;When&nbsp;the&nbsp;initial&nbsp;onpopstate&nbsp;fires,&nbsp;there&nbsp;is&nbsp;an&nbsp;event&nbsp;state&nbsp;of&nbsp;{url:&#39;index.html&#39;}. &nbsp;Index.html&nbsp;is&nbsp;refetched. &nbsp;The&nbsp;user&nbsp;is&nbsp;probably&nbsp;very&nbsp;bemused. &nbsp;And&nbsp;the&nbsp;location&nbsp;bar&nbsp;claims&nbsp;to&nbsp;be&nbsp;still&nbsp;on&nbsp;page1.html&nbsp;(Fx&nbsp;implementation&nbsp;bug?)&lt;br&gt;<br>
&lt;br&gt;Another&nbsp;problem,&nbsp;clicking&nbsp;back&nbsp;and&nbsp;forward&nbsp;before&nbsp;page&nbsp;loads&nbsp;doesn&#39;t&nbsp;trigger&nbsp;onpopstate. &nbsp;Which&nbsp;means&nbsp;on&nbsp;a&nbsp;media&nbsp;heavy&nbsp;site,&nbsp;when&nbsp;the&nbsp;user&nbsp;clicks&nbsp;on&nbsp;page1.html&nbsp;then&nbsp;page2.html&nbsp;and&nbsp;clicks&nbsp;back,&nbsp;he&nbsp;won&#39;t&nbsp;get&nbsp;page1.html. &nbsp;He&#39;d&nbsp;be&nbsp;stuck&nbsp;on&nbsp;page2.html&nbsp;(as&nbsp;per&nbsp;spec)&nbsp;while&nbsp;the&nbsp;url&nbsp;in&nbsp;the&nbsp;location&nbsp;bar&nbsp;is&nbsp;page1.html. &nbsp;(Fx&nbsp;Implementation&nbsp;bug?). &nbsp;If&nbsp;the&nbsp;user&nbsp;has&nbsp;clicked&nbsp;back&nbsp;and&nbsp;forward&nbsp;before&nbsp;the&nbsp;page&nbsp;load,&nbsp;the&nbsp;initial&nbsp;onpopstate&nbsp;after&nbsp;onload&nbsp;doesn&#39;t&nbsp;even&nbsp;fire.&nbsp;(Fx&nbsp;implementation&nbsp;bug?)&lt;br&gt;<br>
&lt;br&gt;So&nbsp;to&nbsp;round&nbsp;up,&nbsp;the&nbsp;problems&nbsp;I&nbsp;have&nbsp;are&lt;br&gt;1.&nbsp;unable&nbsp;to&nbsp;distinguish&nbsp;inital&nbsp;onpopstate&lt;br&gt;2.&nbsp;onpopstate&nbsp;doesn&#39;t&nbsp;work&nbsp;till&nbsp;onload&lt;br&gt;3.&nbsp;the&nbsp;inital&nbsp;onpopstate&nbsp;will&nbsp;overwrite&nbsp;any&nbsp;user&nbsp;actions&nbsp;the&nbsp;user&nbsp;has&nbsp;done&nbsp;before&nbsp;it.&lt;br&gt;<br>
&lt;br&gt;Hixie&nbsp;suggested&nbsp;me&nbsp;to&nbsp;use&nbsp;an&nbsp;extra&nbsp;variable&nbsp;to&nbsp;record&nbsp;the&nbsp;current&nbsp;page. &nbsp;That&nbsp;removes&nbsp;the&nbsp;need&nbsp;of&nbsp;replaceState&nbsp;before&nbsp;onload&nbsp;but&nbsp;doesn&#39;t&nbsp;fix&nbsp;problem&nbsp;2&nbsp;and&nbsp;3.&lt;br&gt;&lt;br&gt;The&nbsp;solution&nbsp;I&#39;ve&nbsp;come&nbsp;up&nbsp;is:&lt;br&gt;A1.&nbsp;onpopstate&nbsp;event&nbsp;should&nbsp;have&nbsp;an&nbsp;event&nbsp;state&nbsp;at&nbsp;the&nbsp;very&nbsp;start&nbsp;of&nbsp;the&nbsp;navigation. &nbsp;Remove&nbsp;the&nbsp;whole&nbsp;pending&nbsp;state&nbsp;object&nbsp;thing. &nbsp;i.e.&nbsp;replaceState&nbsp;before&nbsp;onload&nbsp;doesn&#39;t&nbsp;affect&nbsp;the&nbsp;event&nbsp;state&nbsp;at&nbsp;the&nbsp;inital&nbsp;onpopstate. &nbsp;Fixes&nbsp;1.&lt;br&gt;<br>
A2.&nbsp;fire&nbsp;inital&nbsp;onpopsate&nbsp;earlier,&nbsp;at&nbsp;domready,&nbsp;since&nbsp;most&nbsp;would&nbsp;attach&nbsp;ajax&nbsp;on&nbsp;domready&nbsp;than&nbsp;onload. &nbsp;Fixes&nbsp;2&nbsp;and&nbsp;3&nbsp;and&nbsp;removes&nbsp;the&nbsp;need&nbsp;for&nbsp;a&nbsp;pending&nbsp;state&nbsp;object&nbsp;as&nbsp;onpopstate&nbsp;is&nbsp;now&nbsp;synchronous&nbsp;with&nbsp;user&nbsp;actions.&lt;br&gt;-&nbsp;or&nbsp;-&lt;br&gt;<br>
B1.&nbsp;onpopstate&nbsp;event&nbsp;should&nbsp;have&nbsp;an&nbsp;event&nbsp;state&nbsp;at&nbsp;the&nbsp;very&nbsp;start&nbsp;of&nbsp;the&nbsp;<br>
navigation. &nbsp;Remove&nbsp;the&nbsp;whole&nbsp;pending&nbsp;state&nbsp;object&nbsp;thing. &nbsp;i.e.&nbsp;<br>
replaceState&nbsp;before&nbsp;onload&nbsp;doesn&#39;t&nbsp;affect&nbsp;the&nbsp;event&nbsp;state&nbsp;at&nbsp;the&nbsp;inital&nbsp;<br>
onpopstate. &nbsp;Fixes&nbsp;1. &nbsp;Allow&nbsp;the&nbsp;script&nbsp;to&nbsp;choose&nbsp;whether&nbsp;to&nbsp;let&nbsp;the&nbsp;inital&nbsp;onpopstate&nbsp;to&nbsp;overwrite&nbsp;any&nbsp;user&nbsp;actions&nbsp;the&nbsp;user&nbsp;has&nbsp;done&nbsp;before&nbsp;it&nbsp;since&nbsp;initial&nbsp;is&nbsp;now&nbsp;detectable. &nbsp;Problem&nbsp;3&nbsp;is&nbsp;fixed&nbsp;but&nbsp;more&nbsp;code.&lt;br&gt;B2.&nbsp;just&nbsp;make&nbsp;onpopstate&nbsp;work&nbsp;before&nbsp;onload. &nbsp;Fixes&nbsp;2.&lt;br&gt;<br>
&lt;br&gt;I&#39;d&nbsp;prefer&nbsp;solution&nbsp;A.&lt;br&gt;&lt;br&gt;Check&nbsp;out&nbsp;my&nbsp;testcase&nbsp;at&nbsp;&lt;a&nbsp;href=&quot;http://www.wyavtv.org/test-popstate.html&quot;&gt;www.wyavtv.org/test-popstate.html&lt;/a&gt;.&lt;br&gt;Try&nbsp;clicking&nbsp;on&nbsp;the&nbsp;links&nbsp;before&nbsp;onload.&lt;br&gt;Reload&nbsp;the&nbsp;test&nbsp;and&nbsp;try&nbsp;clicking&nbsp;on&nbsp;the&nbsp;links&nbsp;and&nbsp;navigating&nbsp;back&nbsp;and&nbsp;forward&nbsp;before&nbsp;onload.&lt;br&gt;<br>
Reload&nbsp;the&nbsp;test&nbsp;and&nbsp;try&nbsp;just&nbsp;waiting&nbsp;for&nbsp;it&nbsp;to&nbsp;load.&lt;br&gt;&lt;br&gt;The&nbsp;test&nbsp;page&nbsp;is&nbsp;initially&nbsp;called&nbsp;test-popstate.html. &nbsp;Onload&nbsp;it&nbsp;now&nbsp;changes&nbsp;to&nbsp;index.html. &nbsp;I&nbsp;made&nbsp;it&nbsp;this&nbsp;way&nbsp;so&nbsp;that&nbsp;we&nbsp;can&nbsp;tell&nbsp;if&nbsp;the&nbsp;useragent&nbsp;loads&nbsp;the&nbsp;same&nbsp;&quot;identical&quot;&nbsp;page&nbsp;twice,&nbsp;i.e.&nbsp;if&nbsp;replaceState&nbsp;affects&nbsp;the&nbsp;inital&nbsp;onpopstate. &nbsp;Currently&nbsp;chrome&nbsp;doesn&#39;t&nbsp;have&nbsp;a&nbsp;pending&nbsp;state&nbsp;object&nbsp;and&nbsp;it&nbsp;stays&nbsp;on&nbsp;test-popstate.html,&nbsp;but&nbsp;chrome&nbsp;has&nbsp;problem&nbsp;2&nbsp;and&nbsp;3&nbsp;as&nbsp;well.&lt;br&gt;<br>
&lt;br&gt;Index.html,&nbsp;page1.html&nbsp;and&nbsp;page2.html&nbsp;and&nbsp;page3.html&nbsp;are&nbsp;non-existent&nbsp;pages. &nbsp;Please&nbsp;press&nbsp;the&nbsp;reload&nbsp;test&nbsp;button&nbsp;in&nbsp;my&nbsp;testcase&nbsp;to&nbsp;reload&nbsp;the&nbsp;page,&nbsp;don&#39;t&nbsp;press&nbsp;F5;&nbsp;it&nbsp;won&#39;t&nbsp;load,&nbsp;and&nbsp;you&#39;ll&nbsp;poison&nbsp;my&nbsp;server&nbsp;logs.&lt;br&gt;<br>
<br>

</tt>
