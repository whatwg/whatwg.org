<tt>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Mon,&nbsp;Jul&nbsp;6,&nbsp;2009&nbsp;at&nbsp;9:30&nbsp;PM,&nbsp;Ian&nbsp;Hickson&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:ian@hixie.ch&quot;&gt;ian@hixie.ch&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;On&nbsp;Fri,&nbsp;26&nbsp;Jun&nbsp;2009,&nbsp;James&nbsp;Robinson&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;0)&nbsp;postMessage()&nbsp;looks&nbsp;as&nbsp;if&nbsp;it&nbsp;is&nbsp;intended&nbsp;to&nbsp;mimic&lt;br&gt;<br>
&lt;/div&gt;&amp;gt;&nbsp;MessagePort.postMessage(),&nbsp;but&nbsp;the&nbsp;arguments&nbsp;and&nbsp;error&nbsp;conditions&nbsp;are&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&amp;gt;&nbsp;different.&nbsp; While&nbsp;it&nbsp;would&nbsp;be&nbsp;conceptually&nbsp;nice&nbsp;to&nbsp;treat&nbsp;a&nbsp;web&nbsp;socket&nbsp;in&lt;br&gt;<br>
&amp;gt;&nbsp;the&nbsp;same&nbsp;way&nbsp;as&nbsp;a&nbsp;message&nbsp;port,&nbsp;it&amp;#39;s&nbsp;not&nbsp;possible&nbsp;to&nbsp;treat&nbsp;the&nbsp;two&lt;br&gt;<br>
&amp;gt;&nbsp;postMessage()&nbsp;functions&nbsp;in&nbsp;the&nbsp;same&nbsp;way.&nbsp; I&amp;#39;d&nbsp;recommend&nbsp;the&nbsp;WebSocket&lt;br&gt;<br>
&amp;gt;&nbsp;version&nbsp;be&nbsp;renamed&nbsp;to&nbsp;something&nbsp;like&nbsp;&amp;quot;send()&amp;quot;&nbsp;to&nbsp;avoid&nbsp;confusion&nbsp;and&lt;br&gt;<br>
&amp;gt;&nbsp;false&nbsp;expectations.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Fair&nbsp;enough.&nbsp;Done.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;gt;&nbsp;There&amp;#39;s&nbsp;similar&nbsp;oddness&nbsp;with&nbsp;receiving&nbsp;events&nbsp;that&nbsp;satisfy&nbsp;the&nbsp;MessageEvent&lt;br&gt;<br>
&amp;gt;&nbsp;interface&nbsp;-&nbsp;since&nbsp;all&nbsp;fields&nbsp;except&nbsp;&amp;#39;data&amp;#39;&nbsp;will&nbsp;necessarily&nbsp;be&nbsp;invalid&nbsp;I&lt;br&gt;<br>
&amp;gt;&nbsp;don&amp;#39;t&nbsp;see&nbsp;the&nbsp;value&nbsp;in&nbsp;receiving&nbsp;something&nbsp;more&nbsp;complex.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&nbsp;would&nbsp;like&nbsp;to&nbsp;avoid&nbsp;introducing&nbsp;four&nbsp;different&nbsp;event&nbsp;types&nbsp;for&nbsp;the&nbsp;four&lt;br&gt;<br>
different&nbsp;types&nbsp;of&nbsp;&amp;#39;message&amp;#39;&nbsp;events&nbsp;being&nbsp;introduced,&nbsp;which&nbsp;is&nbsp;why&nbsp;I&lt;br&gt;<br>
overloaded&nbsp;the&nbsp;same&nbsp;interface&nbsp;for&nbsp;all&nbsp;four.&nbsp;I&nbsp;don&amp;#39;t&nbsp;think&nbsp;it&amp;#39;s&nbsp;a&nbsp;problem.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;gt;&nbsp;1)&nbsp;The&nbsp;&amp;#39;readyState&amp;#39;&nbsp;attribute&nbsp;can&nbsp;never&nbsp;actually&nbsp;be&nbsp;used&nbsp;by&nbsp;an&nbsp;application&lt;br&gt;<br>
&amp;gt;&nbsp;and&nbsp;is&nbsp;redundant.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Initially,&nbsp;the&nbsp;&amp;#39;readyState&amp;#39;&nbsp;attribute&nbsp;is&nbsp;set&nbsp;to&nbsp;CONNECTING,&nbsp;but&nbsp;while&lt;br&gt;<br>
&amp;gt;&nbsp;the&nbsp;object&nbsp;is&nbsp;in&nbsp;this&nbsp;state&nbsp;the&nbsp;user&nbsp;is&nbsp;not&nbsp;permitted&nbsp;to&nbsp;interact&nbsp;with&lt;br&gt;<br>
&amp;gt;&nbsp;the&nbsp;WebSocket&nbsp;in&nbsp;any&nbsp;way.&nbsp; The&nbsp;only&nbsp;useful&nbsp;thing&nbsp;that&nbsp;a&nbsp;user&nbsp;could&nbsp;do&nbsp;is&lt;br&gt;<br>
&amp;gt;&nbsp;set&nbsp;event&nbsp;handlers&nbsp;and&nbsp;wait&nbsp;for&nbsp;the&nbsp;&amp;#39;open&amp;#39;&nbsp;event&nbsp;to&nbsp;fire.&nbsp; When&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;WebSocket&nbsp;becomes&nbsp;connected,&nbsp;the&nbsp;readyState&nbsp;becomes&nbsp;1&nbsp;and&nbsp;the&nbsp;&amp;#39;open&amp;#39;&lt;br&gt;<br>
&amp;gt;&nbsp;event&nbsp;is&nbsp;fired.&nbsp;Once&nbsp;the&nbsp;WebSocket&nbsp;is&nbsp;open,&nbsp;the&nbsp;spec&nbsp;states&nbsp;that&lt;br&gt;<br>
&amp;gt;&nbsp;whenever&nbsp;the&nbsp;connection&nbsp;is&nbsp;closed&nbsp;the&nbsp;readyState&nbsp;changes&nbsp;to&nbsp;CLOSED&nbsp;and&nbsp;a&lt;br&gt;<br>
&lt;/div&gt;&amp;gt;&nbsp;&amp;#39;close&amp;#39;&nbsp;event&nbsp;is&nbsp;enqueued.&nbsp;However,&nbsp;users&nbsp;can&amp;#39;t&nbsp;usefully&nbsp;check&nbsp;the&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&amp;gt;&nbsp;readyState&nbsp;to&nbsp;see&nbsp;if&nbsp;the&nbsp;WebSocket&nbsp;is&nbsp;still&nbsp;open&nbsp;because&nbsp;there&nbsp;are&nbsp;not&lt;br&gt;<br>
&amp;gt;&nbsp;and&nbsp;cannot&nbsp;be&nbsp;any&nbsp;synchronization&nbsp;guarantees&nbsp;about&nbsp;when&nbsp;the&nbsp;WebSocket&lt;br&gt;<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;it&quot;&gt;&amp;gt;&nbsp;may&nbsp;close.&nbsp; A&nbsp;user&nbsp;will&nbsp;have&nbsp;to&nbsp;wrap&nbsp;all&nbsp;calls&nbsp;to&nbsp;postMessage()&nbsp;(or&lt;br&gt;<br>
&amp;gt;&nbsp;send()&nbsp;if&nbsp;the&nbsp;function&nbsp;is&nbsp;renamed)&nbsp;in&nbsp;a&nbsp;try/catch&nbsp;block&nbsp;in&nbsp;order&nbsp;to&lt;br&gt;<br>
&amp;gt;&nbsp;handle&nbsp;INVALID_STATE_ERRs.&nbsp; Once&nbsp;the&nbsp;&amp;#39;close&amp;#39;&nbsp;event&nbsp;has&nbsp;been&nbsp;received&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;readyState&nbsp;attribute&nbsp;is&nbsp;useless&nbsp;since&nbsp;the&nbsp;state&nbsp;of&nbsp;the&nbsp;WebSocket&nbsp;is&lt;br&gt;<br>
&amp;gt;&nbsp;known&nbsp;and&nbsp;can&nbsp;never&nbsp;change.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;I&nbsp;think&nbsp;&amp;#39;readyState&amp;#39;&nbsp;should&nbsp;just&nbsp;go&nbsp;away&nbsp;since&nbsp;an&nbsp;application&nbsp;will&nbsp;have&lt;br&gt;<br>
&amp;gt;&nbsp;to&nbsp;keep&nbsp;track&nbsp;of&nbsp;state&nbsp;updates&nbsp;through&nbsp;the&nbsp;fired&nbsp;events&nbsp;and&nbsp;use&lt;br&gt;<br>
&amp;gt;&nbsp;try/catch&nbsp;blocks&nbsp;around&nbsp;all&nbsp;API&nbsp;calls&nbsp;anyway.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;The&nbsp;attribute&nbsp;is&nbsp;mostly&nbsp;present&nbsp;for&nbsp;debugging&nbsp;purposes.&nbsp;I&nbsp;wouldn&amp;#39;t&nbsp;expect&lt;br&gt;<br>
anyone&nbsp;to&nbsp;actually&nbsp;use&nbsp;it&nbsp;for&nbsp;production&nbsp;work.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;26&nbsp;Jun&nbsp;2009,&nbsp;Drew&nbsp;Wilson&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Yes,&nbsp;but&nbsp;the&nbsp;&amp;quot;closed&amp;quot;&nbsp;state&nbsp;of&nbsp;a&nbsp;given&nbsp;WebSocket&nbsp;doesn&amp;#39;t&nbsp;have&nbsp;to&nbsp;exactly&lt;br&gt;<br>
&amp;gt;&nbsp;match&nbsp;the&nbsp;state&nbsp;of&nbsp;the&nbsp;underlying&nbsp;TCP&nbsp;connection,&nbsp;in&nbsp;the&nbsp;same&nbsp;way&nbsp;that&lt;br&gt;<br>
&amp;gt;&nbsp;document.cookies&nbsp;doesn&amp;#39;t&nbsp;exactly&nbsp;match&nbsp;the&nbsp;current&nbsp;set&nbsp;of&nbsp;cookies&nbsp;that&lt;br&gt;<br>
&amp;gt;&nbsp;the&nbsp;network&nbsp;stack&nbsp;may&nbsp;be&nbsp;tracking&nbsp;(they&nbsp;can&nbsp;differ&nbsp;when&nbsp;HTTP&nbsp;responses&lt;br&gt;<br>
&amp;gt;&nbsp;are&nbsp;received&nbsp;in&nbsp;the&nbsp;background&nbsp;while&nbsp;JS&nbsp;is&nbsp;executing).&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;So&nbsp;if&nbsp;the&nbsp;remote&nbsp;server&nbsp;closes&nbsp;the&nbsp;TCP&nbsp;connection,&nbsp;it&nbsp;generates&nbsp;a&lt;br&gt;<br>
&amp;gt;&nbsp;&amp;quot;close&amp;quot;&nbsp;event&nbsp;which&nbsp;marks&nbsp;the&nbsp;WebSocket&nbsp;as&nbsp;closed.&nbsp;It&nbsp;means&nbsp;that&nbsp;you&lt;br&gt;<br>
&amp;gt;&nbsp;could&nbsp;have&nbsp;a&nbsp;situation&nbsp;where&nbsp;you&nbsp;post&nbsp;messages&nbsp;to&nbsp;a&nbsp;WebSocket&nbsp;which&lt;br&gt;<br>
&amp;gt;&nbsp;aren&amp;#39;t&nbsp;received&nbsp;by&nbsp;the&nbsp;server&nbsp;because&nbsp;the&nbsp;connection&nbsp;is&nbsp;closed,&nbsp;but&lt;br&gt;<br>
&amp;gt;&nbsp;that&amp;#39;s&nbsp;true&nbsp;regardless&nbsp;due&nbsp;to&nbsp;the&nbsp;asynchronous&nbsp;nature&nbsp;of&nbsp;the&nbsp;networking&lt;br&gt;<br>
&amp;gt;&nbsp;protocol.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&amp;#39;ve&nbsp;changed&nbsp;the&nbsp;spec&nbsp;to&nbsp;not&nbsp;throw&nbsp;an&nbsp;exception&nbsp;on&nbsp;send()&nbsp;if&nbsp;the&lt;br&gt;<br>
connection&nbsp;is&nbsp;closed.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;26&nbsp;Jun&nbsp;2009,&nbsp;Kelly&nbsp;Norton&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;One&nbsp;thing&nbsp;about&nbsp;postMessage&nbsp;that&nbsp;I&amp;#39;m&nbsp;curious&nbsp;about.&nbsp;Since&nbsp;it&nbsp;has&nbsp;to&lt;br&gt;<br>
&amp;gt;&nbsp;report&nbsp;failure&nbsp;synchronously&nbsp;by&nbsp;throwing&nbsp;an&nbsp;INVALID_STATE_ERR,&nbsp;that&lt;br&gt;<br>
&amp;gt;&nbsp;seems&nbsp;to&nbsp;imply&nbsp;that&nbsp;all&nbsp;data&nbsp;must&nbsp;be&nbsp;written&nbsp;to&nbsp;a&nbsp;socket&nbsp;before&lt;br&gt;<br>
&amp;gt;&nbsp;returning&nbsp;and&nbsp;cannot&nbsp;be&nbsp;asynchronously&nbsp;delivered&nbsp;to&nbsp;an&nbsp;I/O&nbsp;thread&lt;br&gt;<br>
&amp;gt;&nbsp;without&nbsp;adding&nbsp;some&nbsp;risk&nbsp;of&nbsp;silently&nbsp;dropping&nbsp;messages.&nbsp;Seems&nbsp;like&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;right&nbsp;choice&nbsp;would&nbsp;be&nbsp;to&nbsp;allow&nbsp;outbound&nbsp;messages&nbsp;to&nbsp;drop,&nbsp;which&nbsp;would&lt;br&gt;<br>
&amp;gt;&nbsp;mean&nbsp;that&nbsp;developers&nbsp;would&nbsp;be&nbsp;forced&nbsp;to&nbsp;do&nbsp;their&nbsp;own&nbsp;handshaking.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;send()&nbsp;doesn&amp;#39;t&nbsp;report&nbsp;I/O&nbsp;errors,&nbsp;it&nbsp;only&nbsp;throws&nbsp;an&nbsp;exception&nbsp;if&nbsp;the&lt;br&gt;<br>
connection&nbsp;isn&amp;#39;t&nbsp;open&nbsp;yet&nbsp;(and&nbsp;previously,&nbsp;if&nbsp;the&nbsp;connection&nbsp;had&nbsp;died&lt;br&gt;<br>
prior&nbsp;to&nbsp;it&nbsp;being&nbsp;called,&nbsp;though&nbsp;that&nbsp;is&nbsp;no&nbsp;longer&nbsp;the&nbsp;case),&nbsp;or&nbsp;if&nbsp;the&lt;br&gt;<br>
input&nbsp;is&nbsp;invalid.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;gt;&nbsp;I&amp;#39;m&nbsp;also&nbsp;not&nbsp;sure&nbsp;there&nbsp;is&nbsp;good&nbsp;coverage&nbsp;of&nbsp;error&nbsp;conditions&nbsp;in&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;spec.&nbsp;The&nbsp;only&nbsp;methods&nbsp;of&nbsp;error&nbsp;notification&nbsp;are&nbsp;exceptions&nbsp;in&lt;br&gt;<br>
&amp;gt;&nbsp;postMessage&nbsp;and&nbsp;onclose.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;In&nbsp;fact,&nbsp;only&nbsp;onclose&nbsp;actually&nbsp;reports&nbsp;an&nbsp;error;&nbsp;the&nbsp;exception&nbsp;from&nbsp;send()&lt;br&gt;<br>
now&nbsp;only&nbsp;reports&nbsp;a&nbsp;misuse&nbsp;of&nbsp;the&nbsp;API,&nbsp;not&nbsp;a&nbsp;network&nbsp;error.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;gt;&nbsp;I&nbsp;had&nbsp;assumed&nbsp;that&nbsp;a&nbsp;WebSocket&nbsp;that&nbsp;fails&nbsp;to&nbsp;connect&nbsp;would&nbsp;invoke&lt;br&gt;<br>
&amp;gt;&nbsp;onclose&nbsp;asynchronously,&nbsp;but&nbsp;I&nbsp;didn&amp;#39;t&nbsp;see&nbsp;that&nbsp;in&nbsp;the&nbsp;spec.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;It&amp;#39;s&nbsp;there,&nbsp;though&nbsp;subtle.&nbsp;:-)&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;constructor&nbsp;in&nbsp;the&nbsp;API&nbsp;spec&nbsp;invokes&nbsp;the&nbsp;&amp;quot;Establish&nbsp;a&nbsp;Web&nbsp;Socket&lt;br&gt;<br>
connection&amp;quot;&nbsp;algorithm&nbsp;from&nbsp;the&nbsp;protocol&nbsp;spec.&nbsp;That&nbsp;algorithm&nbsp;then&nbsp;invokes&lt;br&gt;<br>
the&nbsp;&amp;quot;fail&nbsp;the&nbsp;Web&nbsp;Socket&nbsp;connection&amp;quot;&nbsp;algorithm&nbsp;upon&nbsp;failure,&nbsp;and&nbsp;that&lt;br&gt;<br>
algorithm&nbsp;says&nbsp;to&nbsp;invoke&nbsp;the&nbsp;&amp;quot;close&nbsp;the&nbsp;Web&nbsp;Socket&nbsp;connection&amp;quot;&nbsp;algorithm,&lt;br&gt;<br>
and&nbsp;that&nbsp;algorithm&nbsp;says&nbsp;that&nbsp;this&nbsp;means&nbsp;that&nbsp;&amp;quot;Web&nbsp;Socket&nbsp;connection&nbsp;is&lt;br&gt;<br>
closed&amp;quot;,&nbsp;and&nbsp;the&nbsp;API&nbsp;spec&nbsp;says&nbsp;&amp;quot;When&nbsp;the&nbsp;Web&nbsp;Socket&nbsp;connection&nbsp;is&nbsp;closed,&lt;br&gt;<br>
the&nbsp;readyState&nbsp;attribute&amp;#39;s&nbsp;value&nbsp;must&nbsp;be&nbsp;changed&nbsp;to&nbsp;CLOSED&nbsp;(2),&nbsp;and&nbsp;the&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;user&nbsp;agent&nbsp;must&nbsp;queue&nbsp;a&nbsp;task&nbsp;to&nbsp;fire&nbsp;a&nbsp;simple&nbsp;event&nbsp;called&nbsp;close&nbsp;at&nbsp;the&lt;br&gt;<br>
WebSocket&nbsp;object&amp;quot;.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&amp;#39;ve&nbsp;added&nbsp;a&nbsp;note&nbsp;that&nbsp;says&nbsp;this.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;gt;&nbsp;Without&nbsp;that&nbsp;you&nbsp;don&amp;#39;t&nbsp;even&nbsp;have&nbsp;the&nbsp;ability&nbsp;to&nbsp;know&nbsp;if&nbsp;a&lt;br&gt;<br>
&amp;gt;&nbsp;socket&nbsp;failed&nbsp;to&nbsp;establish&nbsp;a&nbsp;connection&nbsp;(short&nbsp;of&nbsp;readyState&nbsp;polling).&lt;br&gt;<br>
&amp;gt;&nbsp;The&nbsp;spec&nbsp;also&nbsp;doesn&amp;#39;t&nbsp;indicate&nbsp;that&nbsp;the&nbsp;readyState&nbsp;should&nbsp;transition&nbsp;to&lt;br&gt;<br>
&amp;gt;&nbsp;CLOSED&nbsp;on&nbsp;connection&nbsp;failure.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;This&nbsp;is&nbsp;part&nbsp;of&nbsp;the&nbsp;same&nbsp;sequence&nbsp;of&nbsp;events&nbsp;as&nbsp;described&nbsp;above.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;26&nbsp;Jun&nbsp;2009,&nbsp;Kelly&nbsp;Norton&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Doesn&amp;#39;t&nbsp;it&nbsp;seem&nbsp;strange&nbsp;that&nbsp;disconnect()&nbsp;causes&nbsp;an&nbsp;onclose&nbsp;event&nbsp;to&nbsp;be&lt;br&gt;<br>
&amp;gt;&nbsp;dispatched?&nbsp;Should&nbsp;the&nbsp;method&nbsp;not&nbsp;be&nbsp;close()&nbsp;to&nbsp;be&nbsp;consistent&nbsp;with&lt;br&gt;<br>
&amp;gt;&nbsp;open(),&nbsp;onopen,&nbsp;onclose?&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&amp;#39;ve&nbsp;renamed&nbsp;disconnect()&nbsp;to&nbsp;close()&nbsp;in&nbsp;both&nbsp;EventSource&nbsp;and&nbsp;WebSocket.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;26&nbsp;Jun&nbsp;2009,&nbsp;Michael&nbsp;Nordman&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Does&nbsp;disconnect()&nbsp;attempt&nbsp;to&nbsp;flush&nbsp;pending&nbsp;messages&nbsp;or&nbsp;drop&nbsp;them?&nbsp;There&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&amp;gt;&nbsp;isn&amp;#39;t&nbsp;a&nbsp;way&nbsp;to&nbsp;determine&nbsp;if&nbsp;the&nbsp;WebSocket&nbsp;is&nbsp;successfully&nbsp;sending&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;postMessage&nbsp;data?&nbsp;For&nbsp;all&nbsp;the&nbsp;caller&nbsp;knows,&nbsp;its&nbsp;just&nbsp;backing&nbsp;up&nbsp;and&nbsp;not&lt;br&gt;<br>
&amp;gt;&nbsp;going&nbsp;anywhere.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;it&quot;&gt;&amp;gt;&nbsp;Something&nbsp;that&nbsp;might&nbsp;add&nbsp;value&nbsp;is&nbsp;an&nbsp;onmessagesent&nbsp;event&nbsp;that&nbsp;fires&lt;br&gt;<br>
&amp;gt;&nbsp;after&nbsp;a&nbsp;postMessage&nbsp;has&nbsp;put&nbsp;the&nbsp;bits&nbsp;on&nbsp;the&nbsp;wire.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;If&nbsp;you&nbsp;want&nbsp;acknowledgements,&nbsp;implement&nbsp;app-level&nbsp;acks&nbsp;--&nbsp;in&nbsp;practice,&lt;br&gt;<br>
there&amp;#39;s&nbsp;not&nbsp;much&nbsp;difference&nbsp;between&nbsp;hitting&nbsp;the&nbsp;network&nbsp;or&nbsp;not,&nbsp;if&nbsp;the&lt;br&gt;<br>
other&nbsp;side&nbsp;hasn&amp;#39;t&nbsp;yet&nbsp;received&nbsp;the&nbsp;packets.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;gt;&nbsp;postMessage()&nbsp;may&nbsp;want&nbsp;another&nbsp;exception&nbsp;condition...&nbsp;&amp;#39;too&nbsp;much&nbsp;data&lt;br&gt;<br>
&amp;gt;&nbsp;pending&nbsp;exception&amp;#39;...&nbsp;consider&nbsp;calling&nbsp;postMessage&nbsp;in&nbsp;a&nbsp;while(true)&lt;br&gt;<br>
&amp;gt;&nbsp;loop...&nbsp;at&nbsp;some&nbsp;point&nbsp;the&nbsp;system&nbsp;is&nbsp;going&nbsp;to&nbsp;have&nbsp;to&nbsp;give&nbsp;up&nbsp;queing&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;data&nbsp;if&nbsp;its&nbsp;not&nbsp;actually&nbsp;making&nbsp;its&nbsp;way&nbsp;out&nbsp;on&nbsp;the&nbsp;wire.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;The&nbsp;spec&nbsp;doesn&amp;#39;t&nbsp;specify&nbsp;how&nbsp;UAs&nbsp;are&nbsp;to&nbsp;handle&nbsp;hitting&nbsp;hardware&lt;br&gt;<br>
limitations&nbsp;or&nbsp;system&nbsp;limitations,&nbsp;because&nbsp;it&amp;#39;s&nbsp;often&nbsp;difficult&nbsp;to&nbsp;truly&lt;br&gt;<br>
control&nbsp;how&nbsp;those&nbsp;cases&nbsp;are&nbsp;handled.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;26&nbsp;Jun&nbsp;2009,&nbsp;James&nbsp;Robinson&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;Not&nbsp;changing&nbsp;variables&nbsp;out&nbsp;from&nbsp;under&nbsp;executing&nbsp;JavaScript&nbsp;makes&nbsp;a&nbsp;lot&lt;br&gt;<br>
&amp;gt;&nbsp;of&nbsp;sense,&nbsp;but&nbsp;if&nbsp;that&nbsp;was&nbsp;the&nbsp;case&nbsp;then&nbsp;it&amp;#39;s&nbsp;not&nbsp;clear&nbsp;when&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;readyState&nbsp;could&nbsp;be&nbsp;updated.&nbsp; The&nbsp;spec&nbsp;states&nbsp;&amp;quot;When&nbsp;the&nbsp;*Web&nbsp;Socket&lt;br&gt;<br>
&lt;/div&gt;&amp;gt;&nbsp;connection&nbsp;is&nbsp;closed*,&nbsp;the&nbsp;readyState&nbsp;attribute&amp;#39;s&nbsp;value&nbsp;must&nbsp;be&nbsp;changed&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&amp;gt;&nbsp;to&nbsp;CLOSED&nbsp;(2),&nbsp;and&nbsp;the&nbsp;user&nbsp;agent&nbsp;must&nbsp;queue&nbsp;a&nbsp;task&nbsp;to&nbsp;fire&nbsp;a&nbsp;simple&lt;br&gt;<br>
&amp;gt;&nbsp;event&nbsp;called&nbsp;close&nbsp;at&nbsp;the&nbsp;WebSocket&nbsp;object.&amp;quot;&nbsp;If&nbsp;the&nbsp;browser&nbsp;cannot&lt;br&gt;<br>
&amp;gt;&nbsp;mutate&nbsp;the&nbsp;readyState&nbsp;until&nbsp;JavaScript&nbsp;stops&nbsp;running&nbsp;then&nbsp;it&nbsp;would&lt;br&gt;<br>
&amp;gt;&nbsp;either&nbsp;have&nbsp;to&nbsp;either&nbsp;enqueue&nbsp;a&nbsp;second&nbsp;task&nbsp;to&nbsp;change&nbsp;readyState&nbsp;at&nbsp;some&lt;br&gt;<br>
&amp;gt;&nbsp;point&nbsp;in&nbsp;the&nbsp;future&nbsp;or&nbsp;set&nbsp;the&nbsp;readyState&nbsp;right&nbsp;before&nbsp;dispatching&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;&amp;#39;close&amp;#39;&nbsp;event.&nbsp; The&nbsp;latter&nbsp;would&nbsp;be&nbsp;much&nbsp;nicer&nbsp;to&nbsp;implement&nbsp;-&nbsp;but&nbsp;then&lt;br&gt;<br>
&amp;gt;&nbsp;it&nbsp;does&nbsp;make&nbsp;the&nbsp;readyState&nbsp;completely&nbsp;useless&nbsp;as&nbsp;it&nbsp;would&nbsp;always&nbsp;be&lt;br&gt;<br>
&amp;gt;&nbsp;exactly&nbsp;equivalent&nbsp;to&nbsp;the&nbsp;last&nbsp;event&nbsp;that&nbsp;was&nbsp;fired&nbsp;on&nbsp;a&nbsp;given&lt;br&gt;<br>
&amp;gt;&nbsp;WebSocket.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&amp;#39;ve&nbsp;left&nbsp;it&nbsp;as&nbsp;is&nbsp;(the&nbsp;attribute&nbsp;changes&nbsp;on&nbsp;the&nbsp;fly),&nbsp;which&nbsp;is&nbsp;possibly&lt;br&gt;<br>
risky,&nbsp;but&nbsp;more&nbsp;consistent&nbsp;with&nbsp;how&nbsp;such&nbsp;attributes&nbsp;are&nbsp;handled&nbsp;in&lt;br&gt;<br>
general.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;gt;&nbsp;I&nbsp;think&nbsp;a&nbsp;better&nbsp;way&nbsp;to&nbsp;do&nbsp;error&nbsp;handling&nbsp;is&nbsp;to&nbsp;have&nbsp;an&nbsp;asynchronous&lt;br&gt;<br>
&amp;gt;&nbsp;onerror&nbsp;callback&nbsp;or&nbsp;event&nbsp;when&nbsp;the&nbsp;browser&nbsp;notes&nbsp;that&nbsp;a&nbsp;message&nbsp;did&nbsp;not&lt;br&gt;<br>
&amp;gt;&nbsp;make&nbsp;it&nbsp;to&nbsp;the&nbsp;other&nbsp;side.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;The&nbsp;client&nbsp;can&amp;#39;t&nbsp;really&nbsp;always&nbsp;know&nbsp;this&nbsp;anyway.&nbsp;I&nbsp;think&nbsp;it&amp;#39;s&nbsp;better&nbsp;to&nbsp;do&lt;br&gt;<br>
app-level&nbsp;acking&nbsp;if&nbsp;you&nbsp;care&nbsp;enough.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;26&nbsp;Jun&nbsp;2009,&nbsp;James&nbsp;Robinson&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;The&nbsp;concept&nbsp;of&nbsp;a&nbsp;port&nbsp;being&nbsp;in&nbsp;a&nbsp;closed&nbsp;state&nbsp;is&nbsp;not&nbsp;very&nbsp;well&nbsp;defined&nbsp;-&lt;br&gt;<br>
&amp;gt;&nbsp;if&nbsp;the&nbsp;state&nbsp;means&nbsp;only&nbsp;the&nbsp;readyState&nbsp;status,&nbsp;then&nbsp;when&nbsp;can&nbsp;the&nbsp;state&lt;br&gt;<br>
&amp;gt;&nbsp;legally&nbsp;be&nbsp;updated?&nbsp; If&nbsp;it&nbsp;has&nbsp;some&nbsp;meaning&nbsp;closer&nbsp;to&nbsp;the&nbsp;state&nbsp;of&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;underlying&nbsp;connection,&nbsp;then&nbsp;it&nbsp;can&amp;#39;t&nbsp;be&nbsp;queried&nbsp;synchronously&nbsp;without&lt;br&gt;<br>
&amp;gt;&nbsp;very&nbsp;expensive&nbsp;synching&nbsp;to&nbsp;the&nbsp;I/O&nbsp;thread&nbsp;or&nbsp;process.&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;it&quot;&gt;&amp;gt;&nbsp;Forcing&nbsp;applications&nbsp;to&nbsp;build&nbsp;their&nbsp;own&nbsp;send/ack&nbsp;functionality&nbsp;would&nbsp;be&lt;br&gt;<br>
&amp;gt;&nbsp;pretty&nbsp;tragic&nbsp;considering&nbsp;that&nbsp;WebSockets&nbsp;are&nbsp;built&nbsp;on&nbsp;top&nbsp;of&nbsp;TCP.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;If&nbsp;we&nbsp;had&nbsp;access&nbsp;to&nbsp;the&nbsp;underlying&nbsp;TCP&nbsp;packets,&nbsp;I&nbsp;guess&nbsp;we&nbsp;could&nbsp;return&nbsp;a&lt;br&gt;<br>
number&nbsp;with&nbsp;each&nbsp;send()&nbsp;and&nbsp;have&nbsp;some&nbsp;way&nbsp;to&nbsp;query&nbsp;the&nbsp;number&nbsp;of&nbsp;the&lt;br&gt;<br>
mesage&nbsp;that&nbsp;the&nbsp;most&nbsp;recent&nbsp;packet&nbsp;that&nbsp;got&nbsp;all&nbsp;the&nbsp;way&nbsp;to&nbsp;other&nbsp;side&lt;br&gt;<br>
contained,&nbsp;but&nbsp;in&nbsp;practice&nbsp;I&nbsp;don&amp;#39;t&nbsp;think&nbsp;that&nbsp;implementations&nbsp;are&nbsp;always&lt;br&gt;<br>
going&nbsp;to&nbsp;have&nbsp;access&nbsp;to&nbsp;that,&nbsp;and&nbsp;also&nbsp;it&amp;#39;s&nbsp;not&nbsp;just&nbsp;that&nbsp;the&nbsp;other&nbsp;stack&lt;br&gt;<br>
got&nbsp;the&nbsp;message&nbsp;that&nbsp;matters,&nbsp;but&nbsp;that&nbsp;the&nbsp;remote&nbsp;server&nbsp;actually&nbsp;got&nbsp;the&lt;br&gt;<br>
messages&nbsp;and&nbsp;processed&nbsp;it.&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;it&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
On&nbsp;Fri,&nbsp;26&nbsp;Jun&nbsp;2009,&nbsp;Michael&nbsp;Nordman&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp;If&nbsp;you&amp;#39;re&nbsp;uploading&nbsp;a&nbsp;large&nbsp;data&nbsp;set&nbsp;incrementally&nbsp;across&nbsp;many&nbsp;distinct&lt;br&gt;<br>
&amp;gt;&nbsp;postMessage&nbsp;calls&nbsp;(perhaps&nbsp;to&nbsp;leave&nbsp;room&nbsp;for&nbsp;other&nbsp;control&nbsp;messages&lt;br&gt;<br>
&amp;gt;&nbsp;interspersed&nbsp;amoungst&nbsp;them,&nbsp;or&nbsp;to&nbsp;present&nbsp;progress&nbsp;info),&nbsp;how&nbsp;do&nbsp;you&lt;br&gt;<br>
&amp;gt;&nbsp;know&nbsp;when&nbsp;to&nbsp;queue&nbsp;more&nbsp;data&nbsp;to&nbsp;be&nbsp;sent.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&nbsp;think&nbsp;when&nbsp;we&nbsp;add&nbsp;support&nbsp;for&nbsp;file&nbsp;upload,&nbsp;we&amp;#39;ll&nbsp;make&nbsp;it&nbsp;so&nbsp;that&nbsp;it&lt;br&gt;<br>
automagically&nbsp;supports&nbsp;this&nbsp;case.&nbsp;That&nbsp;is,&nbsp;you&amp;#39;ll&nbsp;say&nbsp;&amp;quot;upload&nbsp;this&nbsp;file&nbsp;in&lt;br&gt;<br>
small&nbsp;bits&amp;quot;&nbsp;and&nbsp;then&nbsp;if&nbsp;you&nbsp;later&nbsp;say&nbsp;&amp;quot;send&nbsp;this&nbsp;text&nbsp;message&amp;quot;,&nbsp;the&nbsp;text&lt;br&gt;<br>
message&nbsp;will&nbsp;be&nbsp;sent&nbsp;before&nbsp;any&nbsp;pending&nbsp;file&nbsp;bits.&nbsp;We&nbsp;can&nbsp;use&nbsp;a&nbsp;separate&lt;br&gt;<br>
type&nbsp;of&nbsp;packet&nbsp;in&nbsp;the&nbsp;WebSocket&nbsp;stream&nbsp;to&nbsp;do&nbsp;this.&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Sounds&nbsp;like&nbsp;that&nbsp;would&nbsp;require&nbsp;a&nbsp;protocol&nbsp;change.&nbsp;Is&nbsp;the&nbsp;message&nbsp;framing&nbsp;spec&amp;#39;d&nbsp;in&nbsp;such&nbsp;a&nbsp;way&nbsp;that&nbsp;a&nbsp;new&nbsp;&amp;#39;packet&nbsp;type&amp;#39;&nbsp;can&nbsp;be&nbsp;introduced&nbsp;in&nbsp;a&nbsp;backward&nbsp;compatible&nbsp;fashion? &lt;/div&gt;<br>
&lt;div&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
--&lt;br&gt;<br>
Ian&nbsp;Hickson&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;U+1047E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )\._.,--....,&amp;#39;``.&nbsp; &nbsp; fL&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://ln.hixie.ch/&quot;&nbsp;target=&quot;_blank&quot;&gt;http://ln.hixie.ch/&lt;/a&gt;&nbsp; &nbsp; &nbsp; &nbsp;U+263A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /,&nbsp; &nbsp;_..&nbsp;\&nbsp; &nbsp;_\&nbsp; ;`._&nbsp;,.&lt;br&gt;<br>
Things&nbsp;that&nbsp;are&nbsp;impossible&nbsp;just&nbsp;take&nbsp;longer.&nbsp; &nbsp;`._.-(,_..&amp;#39;--(,_..&amp;#39;`-.;.&amp;#39;&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
