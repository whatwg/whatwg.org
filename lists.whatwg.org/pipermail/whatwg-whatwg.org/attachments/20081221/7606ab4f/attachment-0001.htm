<tt>
Please&nbsp;Note:&nbsp;all&nbsp;the&nbsp;following&nbsp;is&nbsp;my&nbsp;personal&nbsp;humble&nbsp;opinion.&lt;br&gt;&lt;br&gt;As&nbsp;I&nbsp;discovered&nbsp;lately,&nbsp;the&nbsp;main&nbsp;problem&nbsp;of&nbsp;HTML5&nbsp;is&nbsp;its&nbsp;design&nbsp;oriented&nbsp;to&nbsp;keep&nbsp;features&nbsp;that&nbsp;are&nbsp;distributed&nbsp;across&nbsp;browsers,&nbsp;that&nbsp;work&nbsp;or&nbsp;that&nbsp;are&nbsp;simple&nbsp;way&nbsp;to&nbsp;solve&nbsp;big&nbsp;problem.&nbsp;Actually,&nbsp;they&nbsp;are&nbsp;a&nbsp;bunch&nbsp;of&nbsp;different&nbsp;features&nbsp;somehow&nbsp;not&nbsp;integrated&nbsp;to&nbsp;the&nbsp;others.&lt;br&gt;<br>
Instead,&nbsp;programmer&nbsp;(please&nbsp;note,&nbsp;I&nbsp;use&nbsp;the&nbsp;word&nbsp;programmer,&nbsp;not&nbsp;author&nbsp;or&nbsp;web&nbsp;designer)&nbsp;developing&nbsp;*new*&nbsp;application&nbsp;may&nbsp;more&nbsp;like&nbsp;a&nbsp;more&nbsp;structured&nbsp;and&nbsp;logical&nbsp;organization,&nbsp;like&nbsp;XHTML&nbsp;modularization&nbsp;is.&lt;br&gt;HTML5&nbsp;features,&nbsp;summed&nbsp;in&nbsp;big&nbsp;groups,&nbsp;are&nbsp;(in&nbsp;spec&nbsp;order):&lt;br&gt;<br>
1)&nbsp;common&nbsp;syntax&nbsp;for&nbsp;the&nbsp;most&nbsp;used&nbsp;datatypes.&lt;br&gt;2)&nbsp;additional&nbsp;DOM&nbsp;interfaces,&nbsp;which&nbsp;include&nbsp;HTMLElement&nbsp;-&nbsp;HTMLCollection&nbsp;-&nbsp;HTMLFormsControlCollection&nbsp;-&nbsp;&lt;span&nbsp;class=&quot;secno&quot;&gt;&lt;/span&gt;HTMLOptionsCollection&nbsp;-&nbsp;DOMTokenList&nbsp;-&nbsp;DOMStringMap&lt;br&gt;<br>
3)&nbsp;Elements&nbsp;and&nbsp;Content&nbsp;Models&lt;br&gt;4)&nbsp;Element&nbsp;types:&nbsp;metadata&nbsp;-&nbsp;structure&nbsp;-&nbsp;sectioning&nbsp;-&nbsp;grouping&nbsp;-&nbsp;text&nbsp;-&nbsp;editing&nbsp;-&nbsp;embedding&nbsp;-&nbsp;table&nbsp;-&nbsp;forms&nbsp;-&nbsp;interactive&nbsp;-&nbsp;scripting&nbsp;elements&lt;br&gt;5)&nbsp;User&nbsp;agent&nbsp;requirements&lt;br&gt;6)&nbsp;User&nbsp;Interaction&lt;br&gt;<br>
7)&nbsp;Communication&lt;br&gt;8)&nbsp;HTML&nbsp;Syntax&lt;br&gt;&lt;br&gt;Some&nbsp;of&nbsp;these&nbsp;features&nbsp;can&nbsp;be&nbsp;achieved&nbsp;without&nbsp;any&nbsp;of&nbsp;HTML5,&nbsp;for&nbsp;example&lt;br&gt;1)&nbsp;use&nbsp;XMLSchema&nbsp;datatypes&lt;br&gt;2)&nbsp;you&nbsp;don&#39;t&nbsp;need&nbsp;HTMLElement:&nbsp;markup&nbsp;insertion,&nbsp;attributes&nbsp;querying&nbsp;can&nbsp;be&nbsp;done&nbsp;using&nbsp;DOM3Core&nbsp;(that&nbsp;in&nbsp;latest&nbsp;browser&nbsp;are&nbsp;even&nbsp;more&nbsp;performant&nbsp;as&nbsp;no&nbsp;parser&nbsp;is&nbsp;involved),&nbsp;events&nbsp;are&nbsp;far&nbsp;better&nbsp;handled&nbsp;by&nbsp;DOM3Events,&nbsp;styling&nbsp;is&nbsp;included&nbsp;by&nbsp;CSSOM&lt;br&gt;<br>
you&nbsp;don&#39;t&nbsp;need&nbsp;collection&nbsp;either:&nbsp;just&nbsp;use&nbsp;appropriate&nbsp;DOMNodeLists,&nbsp;while&nbsp;for&nbsp;DOMStringMap&nbsp;you&nbsp;may&nbsp;use&nbsp;binding&nbsp;specific&nbsp;features&nbsp;(all&nbsp;Object&nbsp;are&nbsp;hash&nbsp;maps&nbsp;in&nbsp;ECMAScript3):&nbsp;it&nbsp;works&nbsp;this&nbsp;way&nbsp;even&nbsp;in&nbsp;HTML5&lt;br&gt;3)&nbsp;use&nbsp;XHTML2,&nbsp;which&nbsp;is&nbsp;extensible&nbsp;because&nbsp;modularized&lt;br&gt;<br>
4)&nbsp;metadata&nbsp;is&nbsp;better&nbsp;handled&nbsp;by&nbsp;XHTML2&nbsp;Meta&nbsp;Attributes&nbsp;module,&nbsp;which&nbsp;fully&nbsp;integrates&nbsp;the&nbsp;RDF&nbsp;module&nbsp;in&nbsp;any&nbsp;elements;&lt;br&gt;structure,&nbsp;sectioning,&nbsp;grouping&nbsp;are&nbsp;the&nbsp;same;&lt;br&gt;text&nbsp;is&nbsp;very&nbsp;similar:&nbsp;you&nbsp;don&#39;t&nbsp;have&nbsp;time,&nbsp;but&nbsp;you&nbsp;can&nbsp;have&nbsp;&lt;span&nbsp;datatype=&quot;xsd:date&quot;&nbsp;content=&quot;2008-12-21&quot;&gt;Today&lt;/span&gt;&nbsp;as&nbsp;in&nbsp;HTML5&nbsp;you&nbsp;have&nbsp;&lt;time&nbsp;value=&quot;2008-12-21&quot;&gt;Today&lt;/time&gt;;&nbsp;for&nbsp;progress&nbsp;and&nbsp;meter&nbsp;semantic&nbsp;you&nbsp;can&nbsp;use&nbsp;role&nbsp;attribute&nbsp;(for&nbsp;styling&nbsp;you&nbsp;always&nbsp;use&nbsp;CSS);&nbsp;editing&nbsp;is&nbsp;the&nbsp;same,&nbsp;but&nbsp;you&nbsp;have&nbsp;an&nbsp;attribute&nbsp;instead&nbsp;of&nbsp;an&nbsp;element,&nbsp;so&nbsp;you&nbsp;don&#39;t&nbsp;have&nbsp;the&nbsp;issue&nbsp;that&nbsp;ins&nbsp;and&nbsp;del&nbsp;can&nbsp;contain&nbsp;everything,&nbsp;even&nbsp;a&nbsp;whole&nbsp;document&nbsp;(not&nbsp;including&nbsp;&lt;html&gt;);&lt;br&gt;<br>
embedding&nbsp;is&nbsp;much&nbsp;more&nbsp;powerful&nbsp;as&nbsp;any&nbsp;element&nbsp;can&nbsp;be&nbsp;replaced&nbsp;by&nbsp;embedded&nbsp;content;&lt;br&gt;tables&nbsp;are&nbsp;the&nbsp;same&nbsp;(you&nbsp;don&#39;t&nbsp;have&nbsp;tables&nbsp;API;&nbsp;but&nbsp;you&nbsp;can&nbsp;still&nbsp;use&nbsp;DOM3Core);&lt;br&gt;XForms&nbsp;are&nbsp;actually&nbsp;more&nbsp;powerful&nbsp;than&nbsp;WebForms2,&nbsp;since&nbsp;you&nbsp;divide&nbsp;presentation&nbsp;from&nbsp;data&nbsp;from&nbsp;action&nbsp;(that&nbsp;is&nbsp;implemented&nbsp;declaratively);&lt;br&gt;<br>
interactive&nbsp;elements&nbsp;are&nbsp;not&nbsp;needed&nbsp;at&nbsp;all:&nbsp;details&nbsp;is&nbsp;better&nbsp;implemented&nbsp;as&nbsp;it&nbsp;is&nbsp;now&nbsp;(ECMAScript3&nbsp;+&nbsp;CSS3),&nbsp;datagrid&nbsp;is&nbsp;just&nbsp;a&nbsp;way&nbsp;to&nbsp;put&nbsp;data&nbsp;in&nbsp;a&nbsp;tree&nbsp;model:&nbsp;use&nbsp;plain&nbsp;XML&nbsp;for&nbsp;that;&nbsp;command&nbsp;and&nbsp;a&nbsp;in&nbsp;XHTML2&nbsp;implemented&nbsp;in&nbsp;any&nbsp;element&nbsp;using&nbsp;href&nbsp;attribute;&nbsp;menu&nbsp;is&nbsp;mostly&nbsp;an&nbsp;ul&nbsp;with&nbsp;some&nbsp;style;&lt;br&gt;<br>
scripting&nbsp;uses&nbsp;XMLEvents&nbsp;and&nbsp;handler:&nbsp;it&nbsp;looks&nbsp;the&nbsp;same,&nbsp;but&nbsp;it&nbsp;is&nbsp;different&nbsp;as&nbsp;it&nbsp;is&nbsp;more&nbsp;event&nbsp;oriented&nbsp;(scripts&nbsp;are&nbsp;not&nbsp;executed&nbsp;by&nbsp;default,&nbsp;they&#39;re&nbsp;executed&nbsp;when&nbsp;some&nbsp;event&nbsp;fires)&lt;br&gt;8)&nbsp;HTML&nbsp;syntax:&nbsp;as&nbsp;I&nbsp;said&nbsp;before,&nbsp;use&nbsp;XML&nbsp;for&nbsp;that&lt;br&gt;<br>
&lt;br&gt;There&nbsp;are&nbsp;instead&nbsp;features&nbsp;that&nbsp;are&nbsp;indeed&nbsp;very&nbsp;useful&nbsp;to&nbsp;develop&nbsp;a&nbsp;web&nbsp;application,&nbsp;but&nbsp;are&nbsp;not&nbsp;achievable&nbsp;using&nbsp;other&nbsp;means&nbsp;that&nbsp;HTML5:&lt;br&gt;1)&nbsp;some&nbsp;way&nbsp;to&nbsp;interact&nbsp;with&nbsp;object&nbsp;(please&nbsp;note:&nbsp;object,&nbsp;not&nbsp;embed:&nbsp;object&nbsp;is&nbsp;for&nbsp;plugins,&nbsp;embed&nbsp;for&nbsp;content)&nbsp;:&nbsp;actually&nbsp;this&nbsp;can&nbsp;be&nbsp;done&nbsp;using&nbsp;something&nbsp;like&nbsp;cross&nbsp;document&nbsp;messaging,&nbsp;assuming&nbsp;that&nbsp;object&nbsp;creates&nbsp;a&nbsp;new&nbsp;browsing&nbsp;context&nbsp;(it&nbsp;already&nbsp;does&nbsp;if&nbsp;the&nbsp;target&nbsp;is&nbsp;text/html&nbsp;or&nbsp;application/xhtml+xml),&nbsp;but&nbsp;we&nbsp;need&nbsp;a&nbsp;specification&nbsp;for&nbsp;message&nbsp;syntax&lt;br&gt;<br>
2)&nbsp;the&nbsp;binding&nbsp;specific&nbsp;global&nbsp;scope&nbsp;(that&nbsp;is,&nbsp;what&nbsp;object&nbsp;are&nbsp;available&nbsp;in&nbsp;all&nbsp;scopes,&nbsp;if&nbsp;binding&nbsp;supports&nbsp;this);&nbsp;this&nbsp;is&nbsp;normally&nbsp;the&nbsp;window&nbsp;object,&nbsp;but&nbsp;scripts&nbsp;use&nbsp;certain&nbsp;features&nbsp;only&nbsp;on&nbsp;their&nbsp;own&nbsp;browsing&nbsp;context,&nbsp;so&nbsp;that&nbsp;may&nbsp;be&nbsp;moved&nbsp;from&nbsp;that&nbsp;to&nbsp;global&nbsp;scope,&nbsp;removing&nbsp;the&nbsp;whole&nbsp;window&nbsp;object&nbsp;from&nbsp;scope&nbsp;(for&nbsp;current&nbsp;javascript&nbsp;you&nbsp;can&nbsp;write&nbsp;window.window.window.window.window...&nbsp;and&nbsp;get&nbsp;the&nbsp;same&nbsp;as&nbsp;nothing)&lt;br&gt;<br>
3)&nbsp;the&nbsp;Window&nbsp;object&nbsp;(which&nbsp;includes&nbsp;window&nbsp;name,&nbsp;window&nbsp;location,&nbsp;cross&nbsp;document&nbsp;messaging,&nbsp;dialog&nbsp;windows)&lt;br&gt;4)&nbsp;Protocol&nbsp;and&nbsp;Content&nbsp;Handlers&lt;br&gt;5)&nbsp;Session&nbsp;and&nbsp;Local&nbsp;storage&lt;br&gt;6)&nbsp;Database&nbsp;storage&lt;br&gt;7)&nbsp;Drag&nbsp;and&nbsp;Drop&lt;br&gt;<br>
8)&nbsp;WebSockets&lt;br&gt;&lt;br&gt;What&nbsp;I&nbsp;am&nbsp;asking&nbsp;now&nbsp;is&nbsp;so&nbsp;to&nbsp;&quot;modularize&nbsp;HTML&quot;.&nbsp;copy&nbsp;those&nbsp;features&nbsp;into&nbsp;separate,&nbsp;interoperable&nbsp;modules,&nbsp;removing&nbsp;legacy&nbsp;features&nbsp;(like&nbsp;window.on-whatever&nbsp;event&nbsp;listener)&lt;br&gt;A&nbsp;copy&nbsp;of&nbsp;those&nbsp;will&nbsp;remain&nbsp;in&nbsp;HTML5,&nbsp;because&nbsp;browser&nbsp;implement&nbsp;them&nbsp;at&nbsp;the&nbsp;moment,&nbsp;and&nbsp;the&nbsp;HTML5&nbsp;goal&nbsp;is&nbsp;that&nbsp;all&nbsp;browser&nbsp;implement&nbsp;the&nbsp;same&nbsp;things&nbsp;in&nbsp;the&nbsp;same&nbsp;ways&lt;br&gt;<br>
&lt;br&gt;Instead,&nbsp;some&nbsp;web&nbsp;developers&nbsp;in&nbsp;the&nbsp;future&nbsp;will&nbsp;think&nbsp;that&nbsp;a&nbsp;modularized&nbsp;and&nbsp;less&nbsp;redudant&nbsp;API&nbsp;is&nbsp;more&nbsp;usable,&nbsp;like&nbsp;I&nbsp;personally&nbsp;do,&nbsp;and&nbsp;switch&nbsp;to&nbsp;that,&nbsp;without&nbsp;mixing&nbsp;with&nbsp;HTML5:&nbsp;actually,&nbsp;I&nbsp;guess&nbsp;what&nbsp;a&nbsp;Database&nbsp;API&nbsp;does&nbsp;inside&nbsp;HTML.&lt;br&gt;<br>
&lt;br&gt;Best&nbsp;regards,&lt;br&gt;Giovanni&nbsp;Campagna&lt;br&gt;<br>

</tt>
