<tt>
On&nbsp;Thu,&nbsp;Sep&nbsp;24,&nbsp;2009&nbsp;at&nbsp;12:20&nbsp;AM,&nbsp;Jonas&nbsp;Sicking&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;jonas@sicking.cc&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
<br>
<br>
&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;On&nbsp;Wed,&nbsp;Sep&nbsp;23,&nbsp;2009&nbsp;at&nbsp;10:19&nbsp;PM,&nbsp;Darin&nbsp;Fisher&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:darin@chromium.org&quot;&nbsp;target=&quot;_blank&quot;&gt;darin@chromium.org&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;On&nbsp;Wed,&nbsp;Sep&nbsp;23,&nbsp;2009&nbsp;at&nbsp;8:10&nbsp;PM,&nbsp;Jonas&nbsp;Sicking&nbsp;&lt;jonas@sicking.cc&gt;&nbsp;wrote:&lt;br&gt;<br>
&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;On&nbsp;Wed,&nbsp;Sep&nbsp;23,&nbsp;2009&nbsp;at&nbsp;3:29&nbsp;PM,&nbsp;Jeremy&nbsp;Orlow&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:jorlow@chromium.org&quot;&nbsp;target=&quot;_blank&quot;&gt;jorlow@chromium.org&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;On&nbsp;Wed,&nbsp;Sep&nbsp;23,&nbsp;2009&nbsp;at&nbsp;3:15&nbsp;PM,&nbsp;Jonas&nbsp;Sicking&nbsp;&lt;jonas@sicking.cc&gt;&nbsp;wrote:&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;On&nbsp;Wed,&nbsp;Sep&nbsp;23,&nbsp;2009&nbsp;at&nbsp;2:53&nbsp;PM,&nbsp;Brett&nbsp;Cannon&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:brett@python.org&quot;&nbsp;target=&quot;_blank&quot;&gt;brett@python.org&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;On&nbsp;Wed,&nbsp;Sep&nbsp;23,&nbsp;2009&nbsp;at&nbsp;13:35,&nbsp;Jeremy&nbsp;Orlow&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:jorlow@chromium.org&quot;&nbsp;target=&quot;_blank&quot;&gt;jorlow@chromium.org&lt;/a&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;wrote:&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;What&nbsp;are&nbsp;the&nbsp;use&nbsp;cases&nbsp;for&nbsp;wanting&nbsp;to&nbsp;store&nbsp;data&nbsp;beyond&nbsp;strings&nbsp;(and&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;what&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;can&nbsp;be&nbsp;serialized&nbsp;into&nbsp;strings)&nbsp;in&nbsp;LocalStorage?&nbsp; I&nbsp;can&#39;t&nbsp;think&nbsp;of&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;any&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;that&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;outweigh&nbsp;the&nbsp;negatives:&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;1)&nbsp; From&nbsp;previous&nbsp;threads,&nbsp;I&nbsp;think&nbsp;it&#39;s&nbsp;fair&nbsp;to&nbsp;say&nbsp;that&nbsp;we&nbsp;can&nbsp;all&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;agreed&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;that&nbsp;LocalStorage&nbsp;is&nbsp;a&nbsp;regrettable&nbsp;API&nbsp;(mainly&nbsp;due&nbsp;to&nbsp;its&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;synchronous&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;nature).&nbsp; If&nbsp;so,&nbsp;it&nbsp;seems&nbsp;that&nbsp;making&nbsp;it&nbsp;more&nbsp;powerful&nbsp;and&nbsp;thus&nbsp;more&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;attractive&nbsp;to&nbsp;developers&nbsp;is&nbsp;just&nbsp;asking&nbsp;for&nbsp;trouble.&nbsp; After&nbsp;all,&nbsp;the&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;more&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;people&nbsp;use&nbsp;it,&nbsp;the&nbsp;more&nbsp;lock&nbsp;contention&nbsp;there&#39;ll&nbsp;be,&nbsp;and&nbsp;the&nbsp;more&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;browser&nbsp;UI&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;jank&nbsp;users&nbsp;will&nbsp;be&nbsp;sure&nbsp;to&nbsp;experience.&nbsp; This&nbsp;will&nbsp;also&nbsp;be&nbsp;worse&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;because&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;it&#39;ll&nbsp;be&nbsp;easier&nbsp;for&nbsp;developers&nbsp;to&nbsp;store&nbsp;large&nbsp;objects&nbsp;in&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;LoaclStorage.&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;2)&nbsp; As&nbsp;far&nbsp;as&nbsp;I&nbsp;can&nbsp;tell,&nbsp;there&#39;s&nbsp;no&nbsp;where&nbsp;else&nbsp;in&nbsp;the&nbsp;spec&nbsp;where&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;you&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;have&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;to&nbsp;serialize&nbsp;structured&nbsp;clone(able)&nbsp;data&nbsp;to&nbsp;disk.&nbsp; Given&nbsp;that&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;LocalStorage&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;is&nbsp;supposed&nbsp;to&nbsp;throw&nbsp;an&nbsp;exception&nbsp;if&nbsp;any&nbsp;ImageData&nbsp;is&nbsp;contained&nbsp;and&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;since&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;File&nbsp;and&nbsp;FileData&nbsp;objects&nbsp;are&nbsp;legal,&nbsp;it&nbsp;seems&nbsp;as&nbsp;though&nbsp;making&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;LocalStorage&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;handle&nbsp;structured&nbsp;clone&nbsp;data&nbsp;has&nbsp;a&nbsp;fairly&nbsp;high&nbsp;cost&nbsp;to&nbsp;implementors.&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp; Not&nbsp;to&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;mention&nbsp;that&nbsp;disallowing&nbsp;ImageData&nbsp;in&nbsp;only&nbsp;this&nbsp;one&nbsp;case&nbsp;is&nbsp;not&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;intuitive.&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;I&nbsp;think&nbsp;allowing&nbsp;structured&nbsp;clone(able)&nbsp;data&nbsp;in&nbsp;LocalStorage&nbsp;is&nbsp;a&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;big&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;mistake.&nbsp; Enough&nbsp;so&nbsp;that,&nbsp;if&nbsp;SessionStorage&nbsp;and&nbsp;LocalStorage&nbsp;can&#39;t&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;diverge&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;on&nbsp;this&nbsp;issue,&nbsp;it&#39;d&nbsp;be&nbsp;worth&nbsp;taking&nbsp;the&nbsp;power&nbsp;away&nbsp;from&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;SessionStorage.&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&gt;&nbsp;J&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;Speaking&nbsp;from&nbsp;experience,&nbsp;I&nbsp;have&nbsp;been&nbsp;using&nbsp;localStorage&nbsp;in&nbsp;my&nbsp;PhD&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;thesis&nbsp;work&nbsp;w/o&nbsp;any&nbsp;real&nbsp;need&nbsp;for&nbsp;structured&nbsp;clones&nbsp;(I&nbsp;would&nbsp;have&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;used&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;Web&nbsp;Database&nbsp;but&nbsp;it&nbsp;isn&#39;t&nbsp;widely&nbsp;used&nbsp;yet&nbsp;and&nbsp;I&nbsp;was&nbsp;not&nbsp;sure&nbsp;if&nbsp;it&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;was&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;going&nbsp;to&nbsp;make&nbsp;the&nbsp;cut&nbsp;in&nbsp;the&nbsp;end).&nbsp;All&nbsp;it&nbsp;took&nbsp;to&nbsp;come&nbsp;close&nbsp;to&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;simulating&nbsp;structured&nbsp;clones&nbsp;now&nbsp;was&nbsp;to&nbsp;develop&nbsp;my&nbsp;own&nbsp;compatibility&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;wrapper&nbsp;for&nbsp;localStorage&nbsp;(&lt;a&nbsp;href=&quot;http://realstorage.googlecode.com&quot;&nbsp;target=&quot;_blank&quot;&gt;http://realstorage.googlecode.com&lt;/a&gt;&nbsp;for&nbsp;those&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;who&nbsp;care)&nbsp;and&nbsp;add&nbsp;setJSONObject()&nbsp;and&nbsp;getJSONObject()&nbsp;methods&nbsp;on&nbsp;the&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;wrapper.&nbsp;Works&nbsp;w/o&nbsp;issue.&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;Actually,&nbsp;this&nbsp;seems&nbsp;like&nbsp;a&nbsp;prime&nbsp;reason&nbsp;*to*&nbsp;add&nbsp;structured&nbsp;storage&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;support.&nbsp;Obviously&nbsp;string&nbsp;data&nbsp;wasn&#39;t&nbsp;enough&nbsp;for&nbsp;you&nbsp;so&nbsp;you&nbsp;had&nbsp;to&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;write&nbsp;extra&nbsp;code&nbsp;in&nbsp;order&nbsp;to&nbsp;work&nbsp;around&nbsp;that.&nbsp;If&nbsp;structured&nbsp;clones&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;had&nbsp;been&nbsp;natively&nbsp;supported&nbsp;you&nbsp;both&nbsp;would&nbsp;have&nbsp;had&nbsp;to&nbsp;write&nbsp;less&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;code,&nbsp;and&nbsp;the&nbsp;resulting&nbsp;algorithms&nbsp;would&nbsp;have&nbsp;been&nbsp;faster.&nbsp;Faster&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;since&nbsp;the&nbsp;browser&nbsp;can&nbsp;serialize/parser&nbsp;to/from&nbsp;a&nbsp;binary&nbsp;internal&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;format&nbsp;faster&nbsp;than&nbsp;to/from&nbsp;JSON&nbsp;through&nbsp;the&nbsp;JSON&nbsp;serializer/parser.&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;Yes,&nbsp;but&nbsp;since&nbsp;LocalStorage&nbsp;is&nbsp;already&nbsp;widely&nbsp;deployed,&nbsp;authors&nbsp;are&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;stuck&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;with&nbsp;the&nbsp;the&nbsp;structured&nbsp;clone-less&nbsp;version&nbsp;of&nbsp;LocalStorage&nbsp;for&nbsp;a&nbsp;very&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;long&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;time.&nbsp; So&nbsp;the&nbsp;only&nbsp;way&nbsp;an&nbsp;app&nbsp;can&nbsp;store&nbsp;anything&nbsp;that&nbsp;can&#39;t&nbsp;be&nbsp;JSONified&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;is&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;to&nbsp;break&nbsp;backwards compatibility.&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;On&nbsp;Wed,&nbsp;Sep&nbsp;23,&nbsp;2009&nbsp;at&nbsp;3:11&nbsp;PM,&nbsp;Jonas&nbsp;Sicking &lt;jonas@sicking.cc&gt; wrote:&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;On&nbsp;Wed,&nbsp;Sep&nbsp;23,&nbsp;2009&nbsp;at&nbsp;1:35&nbsp;PM,&nbsp;Jeremy&nbsp;Orlow&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:jorlow@chromium.org&quot;&nbsp;target=&quot;_blank&quot;&gt;jorlow@chromium.org&lt;/a&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;What&nbsp;are&nbsp;the&nbsp;use&nbsp;cases&nbsp;for&nbsp;wanting&nbsp;to&nbsp;store&nbsp;data&nbsp;beyond&nbsp;strings&nbsp;(and&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;what&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;can&nbsp;be&nbsp;serialized&nbsp;into&nbsp;strings)&nbsp;in&nbsp;LocalStorage?&nbsp; I&nbsp;can&#39;t&nbsp;think&nbsp;of&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;any&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;that&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;outweigh&nbsp;the&nbsp;negatives:&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;1)&nbsp; From&nbsp;previous&nbsp;threads,&nbsp;I&nbsp;think&nbsp;it&#39;s&nbsp;fair&nbsp;to&nbsp;say&nbsp;that&nbsp;we&nbsp;can&nbsp;all&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;agreed&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;that&nbsp;LocalStorage&nbsp;is&nbsp;a&nbsp;regrettable&nbsp;API&nbsp;(mainly&nbsp;due&nbsp;to&nbsp;its&nbsp;synchronous&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;nature).&nbsp; If&nbsp;so,&nbsp;it&nbsp;seems&nbsp;that&nbsp;making&nbsp;it&nbsp;more&nbsp;powerful&nbsp;and&nbsp;thus&nbsp;more&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;attractive&nbsp;to&nbsp;developers&nbsp;is&nbsp;just&nbsp;asking&nbsp;for&nbsp;trouble.&nbsp; After&nbsp;all,&nbsp;the&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;more&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;people&nbsp;use&nbsp;it,&nbsp;the&nbsp;more&nbsp;lock&nbsp;contention&nbsp;there&#39;ll&nbsp;be,&nbsp;and&nbsp;the&nbsp;more&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;browser&nbsp;UI&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;jank&nbsp;users&nbsp;will&nbsp;be&nbsp;sure&nbsp;to&nbsp;experience.&nbsp; This&nbsp;will&nbsp;also&nbsp;be&nbsp;worse&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;because&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;it&#39;ll&nbsp;be&nbsp;easier&nbsp;for&nbsp;developers&nbsp;to&nbsp;store&nbsp;large&nbsp;objects&nbsp;in&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;LoaclStorage.&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;2)&nbsp; As&nbsp;far&nbsp;as&nbsp;I&nbsp;can&nbsp;tell,&nbsp;there&#39;s&nbsp;no&nbsp;where&nbsp;else&nbsp;in&nbsp;the&nbsp;spec&nbsp;where&nbsp;you&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;have&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;to&nbsp;serialize&nbsp;structured&nbsp;clone(able)&nbsp;data&nbsp;to&nbsp;disk.&nbsp; Given&nbsp;that&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;LocalStorage&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;is&nbsp;supposed&nbsp;to&nbsp;throw&nbsp;an&nbsp;exception&nbsp;if&nbsp;any&nbsp;ImageData&nbsp;is&nbsp;contained&nbsp;and&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;since&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;File&nbsp;and&nbsp;FileData&nbsp;objects&nbsp;are&nbsp;legal,&nbsp;it&nbsp;seems&nbsp;as&nbsp;though&nbsp;making&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;LocalStorage&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;handle&nbsp;structured&nbsp;clone&nbsp;data&nbsp;has&nbsp;a&nbsp;fairly&nbsp;high&nbsp;cost&nbsp;to&nbsp;implementors.&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp; Not&nbsp;to&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;mention&nbsp;that&nbsp;disallowing&nbsp;ImageData&nbsp;in&nbsp;only&nbsp;this&nbsp;one&nbsp;case&nbsp;is&nbsp;not&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;intuitive.&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;I&nbsp;think&nbsp;allowing&nbsp;structured&nbsp;clone(able)&nbsp;data&nbsp;in&nbsp;LocalStorage&nbsp;is&nbsp;a&nbsp;big&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;mistake.&nbsp; Enough&nbsp;so&nbsp;that,&nbsp;if&nbsp;SessionStorage&nbsp;and&nbsp;LocalStorage&nbsp;can&#39;t&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;diverge&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;on&nbsp;this&nbsp;issue,&nbsp;it&#39;d&nbsp;be&nbsp;worth&nbsp;taking&nbsp;the&nbsp;power&nbsp;away&nbsp;from&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;&gt;&nbsp;SessionStorage.&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;Despite&nbsp;localStorage&nbsp;unfortunate&nbsp;locking&nbsp;contention&nbsp;problem,&nbsp;it&#39;s&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;become&nbsp;quite&nbsp;a&nbsp;popular&nbsp;API.&nbsp;It&#39;s&nbsp;also&nbsp;very&nbsp;successful&nbsp;in&nbsp;terms&nbsp;of&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;browser&nbsp;deployment&nbsp;since&nbsp;it&#39;s&nbsp;available&nbsp;in&nbsp;at&nbsp;least&nbsp;latest&nbsp;versions&nbsp;of&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&gt;&nbsp;IE,&nbsp;Safari,&nbsp;Firefox,&nbsp;and&nbsp;Chrome.&nbsp;Don&#39;t&nbsp;know&nbsp;about&nbsp;support&nbsp;in&nbsp;Opera?&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;The&nbsp;more&nbsp;popular&nbsp;it&nbsp;becomes,&nbsp;the&nbsp;more&nbsp;it&#39;s&nbsp;going&nbsp;to&nbsp;hurt&nbsp;UA&nbsp;developers,&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;web&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;developers,&nbsp;and&nbsp;users.&nbsp; I&nbsp;don&#39;t&nbsp;see&nbsp;why&nbsp;this&nbsp;is&nbsp;an&nbsp;argument&nbsp;for&nbsp;making&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;it&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;more&nbsp;powerful.&lt;br&gt;<br>
&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;How&nbsp;will&nbsp;it&nbsp;hurt&nbsp;UA&nbsp;developers?&nbsp;I&nbsp;think&nbsp;we&#39;re&nbsp;stuck&nbsp;forever&nbsp;to&lt;br&gt;<br>
&gt;&gt;&nbsp;implement&nbsp;the&nbsp;locking&nbsp;mechanism.&nbsp;Adding&nbsp;more&nbsp;datatypes&nbsp;to&nbsp;the&nbsp;API&lt;br&gt;<br>
&gt;&gt;&nbsp;doesn&#39;t&nbsp;mean&nbsp;that&nbsp;we&#39;ll&nbsp;have&nbsp;to&nbsp;implement&nbsp;it&nbsp;more.&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;multi-core&nbsp;is&nbsp;the&nbsp;future.&nbsp; what&#39;s&nbsp;the&nbsp;opposite&nbsp;of&nbsp;fine-grained&nbsp;locking?&lt;br&gt;<br>
&gt;&nbsp; it&#39;s&nbsp;not&nbsp;good&nbsp;;-)&lt;br&gt;<br>
&gt;&nbsp;the&nbsp;implicit&nbsp;locking&nbsp;mechanism&nbsp;as&nbsp;spec&#39;d&nbsp;is&nbsp;super&nbsp;lame.&nbsp; implicitly&lt;br&gt;<br>
&gt;&nbsp;unlocking&nbsp;under&lt;br&gt;<br>
&gt;&nbsp;mysterious-to-the-developer&nbsp;circumstances!&nbsp; how&nbsp;can&nbsp;that&nbsp;be&nbsp;a&nbsp;good&nbsp;thing?&lt;br&gt;<br>
&gt;&nbsp;storage.setItem(&quot;y&quot;,&lt;br&gt;<br>
&gt;&nbsp;function_involving_implicit_unlocking(storage.getItem(&quot;x&quot;)));&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;I&nbsp;totally&nbsp;agree&nbsp;on&nbsp;all&nbsp;points.&nbsp;The&nbsp;current&nbsp;API&nbsp;has&nbsp;big&nbsp;imperfections.&lt;br&gt;<br>
However&nbsp;I&nbsp;haven&#39;t&nbsp;seen&nbsp;any&nbsp;workable&nbsp;counter&nbsp;proposals&nbsp;so&nbsp;far,&nbsp;and&nbsp;I&lt;br&gt;<br>
honestly&nbsp;don&#39;t&nbsp;believe&nbsp;there&nbsp;are&nbsp;any&nbsp;as&nbsp;long&nbsp;as&nbsp;our&nbsp;goals&nbsp;are:&lt;br&gt;<br>
&lt;br&gt;<br>
*&nbsp;Don&#39;t&nbsp;break&nbsp;existing&nbsp;users&nbsp;of&nbsp;the&nbsp;current&nbsp;implementations.&lt;br&gt;<br>
*&nbsp;Don&#39;t&nbsp;expose&nbsp;race&nbsp;conditions&nbsp;to&nbsp;the&nbsp;web.&lt;br&gt;<br>
*&nbsp;Don&#39;t&nbsp;rely&nbsp;on&nbsp;authors&nbsp;getting&nbsp;explicit&nbsp;locking&nbsp;mechanisms&nbsp;right.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;I&nbsp;agree&nbsp;that&nbsp;there&#39;s&nbsp;no&nbsp;way&nbsp;to&nbsp;&quot;fix&quot;&nbsp;local&nbsp;storage&nbsp;without&nbsp;violating&nbsp;one&nbsp;of&nbsp;these&nbsp;goals.&nbsp; That&#39;s&nbsp;why&nbsp;I&nbsp;think&nbsp;we&nbsp;should&nbsp;just&nbsp;leave&nbsp;it&nbsp;alone&nbsp;and&nbsp;come&nbsp;up&nbsp;with&nbsp;a&nbsp;better&nbsp;API.&nbsp; If&nbsp;we&nbsp;keep&nbsp;improving&nbsp;LocalStorage&nbsp;then&nbsp;of&nbsp;course&nbsp;people&nbsp;will&nbsp;continue&nbsp;using&nbsp;it!&nbsp; (Which,&nbsp;as&nbsp;I&nbsp;mentioned,&nbsp;will&nbsp;only&nbsp;make&nbsp;the&nbsp;problems&nbsp;worse.)&nbsp; In&nbsp;other&nbsp;words,&nbsp;the&nbsp;more&nbsp;features&nbsp;we&nbsp;add&nbsp;to&nbsp;LocalStorage&nbsp;at&nbsp;this&nbsp;point,&nbsp;the&nbsp;worse&nbsp;we&#39;re&nbsp;making&nbsp;the&nbsp;web&nbsp;platform&nbsp;as&nbsp;a&nbsp;whole.&lt;/div&gt;<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Just&nbsp;to&nbsp;be&nbsp;super&nbsp;clear:&nbsp;I&#39;m&nbsp;not&nbsp;advocating&nbsp;getting&nbsp;rid&nbsp;of&nbsp;LocalStorage&nbsp;as&nbsp;is.&nbsp; (Anymore.&nbsp; :-)&nbsp; I&#39;m&nbsp;saying&nbsp;that&nbsp;we&nbsp;should&nbsp;leave&nbsp;it&nbsp;as&nbsp;is&nbsp;and&nbsp;come&nbsp;up&nbsp;with&nbsp;a&nbsp;better&nbsp;storage&nbsp;API&nbsp;that&nbsp;all&nbsp;browser&nbsp;vendors&nbsp;can&nbsp;get&nbsp;behind.&lt;/div&gt;<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
But,&nbsp;as&nbsp;imperfect&nbsp;as&nbsp;the&nbsp;current&nbsp;API&nbsp;is,&nbsp;I&nbsp;think&nbsp;the&nbsp;following&nbsp;is&nbsp;a&lt;br&gt;<br>
decent&nbsp;way&nbsp;forward:&lt;br&gt;<br>
&lt;br&gt;<br>
*&nbsp;Allow&nbsp;pages&nbsp;that&nbsp;want&nbsp;the&nbsp;convenience&nbsp;of&nbsp;localStorage&nbsp;to&nbsp;use&nbsp;it.&nbsp;For&lt;br&gt;<br>
multi-process&nbsp;browsers&nbsp;this&nbsp;will&nbsp;mean&nbsp;poor&nbsp;UI&nbsp;*for&nbsp;pages&nbsp;that&nbsp;use&lt;br&gt;<br>
localStorage*.&nbsp;Especially&nbsp;when&nbsp;said&nbsp;pages&nbsp;hold&nbsp;on&nbsp;to&nbsp;localStorage&nbsp;for&lt;br&gt;<br>
a&nbsp;long&nbsp;time.&lt;br&gt;<br>
*&nbsp;Add&nbsp;alternative&nbsp;APIs&nbsp;that&nbsp;don&#39;t&nbsp;suffer&nbsp;from&nbsp;the&nbsp;same&nbsp;problems.&nbsp;More&nbsp;below.&lt;br&gt;<br>
&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;In&nbsp;addition,&nbsp;this&nbsp;argument&nbsp;assumes&nbsp;that&nbsp;Microsoft&nbsp;(and&nbsp;other&nbsp;UAs)&nbsp;will&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;implement&nbsp;the&nbsp;structured&nbsp;clone&nbsp;version&nbsp;of&nbsp;LocalStorage.&nbsp; Has&nbsp;anyone&nbsp;(or&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;can&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;anyone)&nbsp;from&nbsp;Microsoft&nbsp;comment&nbsp;on&nbsp;this?&lt;br&gt;<br>
&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;Given&nbsp;that&nbsp;I&#39;ve&nbsp;never&nbsp;heard&nbsp;microsoft&nbsp;commit&nbsp;to&nbsp;a&nbsp;webstandard,&nbsp;ever,&nbsp;I&lt;br&gt;<br>
&gt;&gt;&nbsp;doubt&nbsp;that&nbsp;we&#39;ll&nbsp;hear&nbsp;anything&nbsp;here.&nbsp;Or&nbsp;that&nbsp;the&nbsp;lack&nbsp;of&nbsp;hearing&lt;br&gt;<br>
&gt;&gt;&nbsp;anything&nbsp;means&nbsp;we&nbsp;can&nbsp;draw&nbsp;any&nbsp;conclusions.&lt;br&gt;<br>
&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;This&nbsp;is&nbsp;not&nbsp;a&nbsp;small&nbsp;feature&nbsp;to&nbsp;add.&nbsp; Yes,&nbsp;it&#39;s&nbsp;smaller&nbsp;than&nbsp;creating&nbsp;a&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;new&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;storage&nbsp;mechanism&nbsp;(that&nbsp;everyone&nbsp;is&nbsp;willing&nbsp;to&nbsp;adopt),&nbsp;but&nbsp;I&nbsp;still&nbsp;think&lt;br&gt;<br>
&gt;&gt;&nbsp;&gt;&nbsp;that&#39;s&nbsp;what&nbsp;we&nbsp;should&nbsp;be&nbsp;looking&nbsp;at.&nbsp; Rather&nbsp;than&nbsp;polishing&nbsp;a&nbsp;turd.&lt;br&gt;<br>
&gt;&gt;&lt;br&gt;<br>
&gt;&gt;&nbsp;I&nbsp;do&nbsp;think&nbsp;that&nbsp;localStorage&nbsp;is&nbsp;a&nbsp;decent&nbsp;API&nbsp;that&nbsp;developers&nbsp;will&nbsp;want&lt;br&gt;<br>
&gt;&gt;&nbsp;to,&nbsp;and&nbsp;should,&nbsp;use.&nbsp;I&nbsp;think&nbsp;looking&nbsp;into&nbsp;adding&nbsp;a&nbsp;async&nbsp;accessor&nbsp;to&lt;br&gt;<br>
&gt;&gt;&nbsp;get&nbsp;a&nbsp;storage&nbsp;object&nbsp;so&nbsp;that&nbsp;people&nbsp;can&nbsp;use&nbsp;an&nbsp;localStorage-like&nbsp;API&lt;br&gt;<br>
&gt;&gt;&nbsp;while&nbsp;avoiding&nbsp;risks&nbsp;of&nbsp;blocking.&nbsp;This&nbsp;would&nbsp;also&nbsp;allow&nbsp;sharing&nbsp;data&lt;br&gt;<br>
&gt;&gt;&nbsp;between&nbsp;worker&nbsp;threads&nbsp;and&nbsp;the&nbsp;main&nbsp;window.&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;i&nbsp;think&nbsp;the&nbsp;async&nbsp;callback&nbsp;to&nbsp;get&nbsp;a&nbsp;storage&nbsp;object&nbsp;is&nbsp;an&nbsp;improvement,&nbsp;but&lt;br&gt;<br>
&gt;&nbsp;i&#39;m&nbsp;not&nbsp;sure&nbsp;that&nbsp;it&nbsp;addresses&nbsp;all&nbsp;of&nbsp;the&nbsp;problems.&nbsp; for&nbsp;example,&nbsp;if&nbsp;a&lt;br&gt;<br>
&gt;&nbsp;worker&lt;br&gt;<br>
&gt;&nbsp;wants&nbsp;to&nbsp;read&nbsp;values&nbsp;from&nbsp;storage,&nbsp;compute,&nbsp;and&nbsp;then&nbsp;put&nbsp;a&nbsp;value&nbsp;into&lt;br&gt;<br>
&gt;&nbsp;storage,&nbsp;it&nbsp;would&nbsp;probably&nbsp;do&nbsp;all&nbsp;of&nbsp;this&nbsp;from&nbsp;the&nbsp;storage&nbsp;callback.&nbsp; that&lt;br&gt;<br>
&gt;&nbsp;would&nbsp;result&nbsp;in&nbsp;holding&nbsp;the&nbsp;lock&nbsp;for&nbsp;a&nbsp;long&nbsp;time,&nbsp;which&nbsp;would&nbsp;lock&nbsp;out&nbsp;any&lt;br&gt;<br>
&gt;&nbsp;other&nbsp;threads,&nbsp;including&nbsp;non-worker&nbsp;threads.&lt;br&gt;<br>
&gt;&nbsp;the&nbsp;problem&nbsp;here&nbsp;is&nbsp;that&nbsp;localStorage&nbsp;is&nbsp;a&nbsp;pile&nbsp;of&nbsp;global&nbsp;variables.&nbsp; we&nbsp;are&lt;br&gt;<br>
&gt;&nbsp;trying&nbsp;to&nbsp;give&nbsp;people&nbsp;global&nbsp;variables&nbsp;without&nbsp;giving&nbsp;them&nbsp;tools&nbsp;to&lt;br&gt;<br>
&gt;&nbsp;synchronize&lt;br&gt;<br>
&gt;&nbsp;access&nbsp;to&nbsp;them.&nbsp; the&nbsp;claim&nbsp;i&#39;ve&nbsp;heard&nbsp;is&nbsp;that&nbsp;developers&nbsp;are&nbsp;not&nbsp;savy&nbsp;enough&lt;br&gt;<br>
&gt;&nbsp;to&nbsp;use&nbsp;those&nbsp;tools&nbsp;properly.&nbsp; i&nbsp;agree&nbsp;that&nbsp;developers&nbsp;tend&nbsp;to&nbsp;use&nbsp;tools&lt;br&gt;<br>
&gt;&nbsp;without&lt;br&gt;<br>
&gt;&nbsp;fully&nbsp;understanding&nbsp;them.&nbsp; ok,&nbsp;but&nbsp;then&nbsp;why&nbsp;are&nbsp;we&nbsp;giving&nbsp;them&nbsp;global&lt;br&gt;<br>
&gt;&nbsp;variables?&lt;br&gt;<br>
&gt;&nbsp;there&nbsp;has&nbsp;to&nbsp;be&nbsp;a&nbsp;better&nbsp;answer.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;I&nbsp;actually&nbsp;described&nbsp;an&nbsp;potential&nbsp;solution&nbsp;in&nbsp;the&nbsp;thread&nbsp;on&nbsp;worker&nbsp;storage.&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;problem&nbsp;you&nbsp;describe&nbsp;is&nbsp;a&nbsp;worker&nbsp;holding&nbsp;on&nbsp;the&nbsp;the&nbsp;storage&nbsp;for&nbsp;an&lt;br&gt;<br>
very&nbsp;long&nbsp;(indefinite)&nbsp;time,&nbsp;thereby&nbsp;locking&nbsp;out&nbsp;other&nbsp;threads/windows&lt;br&gt;<br>
from&nbsp;accessing&nbsp;the&nbsp;same&nbsp;storage&nbsp;area.This&nbsp;seems&nbsp;inevitable&nbsp;if&nbsp;we&nbsp;want&lt;br&gt;<br>
to&nbsp;prevent&nbsp;race&nbsp;conditions&nbsp;while&nbsp;at&nbsp;the&nbsp;same&nbsp;time&nbsp;not&nbsp;forcing&nbsp;the&lt;br&gt;<br>
complexities&nbsp;of&nbsp;locks&nbsp;onto&nbsp;web&nbsp;developers.&nbsp;The&nbsp;WebDatabase&nbsp;API&nbsp;suffers&lt;br&gt;<br>
from&nbsp;exactly&nbsp;the&nbsp;same&nbsp;problem.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Actually,&nbsp;it&#39;s&nbsp;not&nbsp;the&nbsp;same&nbsp;problem.&nbsp; When&nbsp;pages&nbsp;access&nbsp;LocalStorage&nbsp;synchronously,&nbsp;it&nbsp;means&nbsp;that&nbsp;entire&nbsp;event&nbsp;loops&nbsp;get&nbsp;can&nbsp;be&nbsp;blocked&nbsp;by&nbsp;one&nbsp;worker.&nbsp; If&nbsp;instead&nbsp;pages&nbsp;only&nbsp;have&nbsp;asynchronous&nbsp;access&nbsp;(as&nbsp;they&nbsp;do&nbsp;in&nbsp;the&nbsp;WebDatabase&nbsp;API),&nbsp;then&nbsp;the&nbsp;only&nbsp;problem&nbsp;is&nbsp;that&nbsp;their&nbsp;callback&nbsp;will&nbsp;never&nbsp;get&nbsp;called.&nbsp; Such&nbsp;resource&nbsp;starvation&nbsp;is&nbsp;of&nbsp;course&nbsp;sub-optimal,&nbsp;but&nbsp;at&nbsp;least&nbsp;it&nbsp;won&#39;t&nbsp;affect&nbsp;other&nbsp;pages&nbsp;in&nbsp;the&nbsp;same&nbsp;event&nbsp;loop.&lt;/div&gt;<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
However,&nbsp;we&nbsp;can&nbsp;lessen&nbsp;the&nbsp;problem.&nbsp;By&nbsp;adding&nbsp;multiple&nbsp;storage&nbsp;areas,&lt;br&gt;<br>
we&nbsp;can&nbsp;allow&nbsp;a&nbsp;worker&nbsp;to&nbsp;use&nbsp;one&nbsp;storage&nbsp;area,&nbsp;while&nbsp;allowing&nbsp;other&lt;br&gt;<br>
parties&nbsp;to&nbsp;simultaneously&nbsp;use&nbsp;other&nbsp;storage&nbsp;areas.&nbsp;This&nbsp;way,&nbsp;if&nbsp;a&lt;br&gt;<br>
worker&nbsp;and&nbsp;a&nbsp;window&nbsp;aren&#39;t&nbsp;sharing&nbsp;data&nbsp;at&nbsp;all,&nbsp;they&nbsp;never&nbsp;get&nbsp;in&nbsp;the&lt;br&gt;<br>
way&nbsp;of&nbsp;each&nbsp;other.&lt;br&gt;<br>
&lt;br&gt;<br>
So&nbsp;a&nbsp;very&nbsp;simplistic&nbsp;design&nbsp;would&nbsp;be&nbsp;something&nbsp;like&nbsp;the&nbsp;following:&lt;br&gt;<br>
&lt;br&gt;<br>
getStorageArea(name,&nbsp;callback)&lt;br&gt;<br>
&lt;br&gt;<br>
when&nbsp;called&nbsp;will&nbsp;asynchronously&nbsp;call&nbsp;the&nbsp;callback&nbsp;parameter&nbsp;once&nbsp;the&lt;br&gt;<br>
storage&nbsp;area&nbsp;named&nbsp;by&nbsp;the&nbsp;first&nbsp;parameter&nbsp;becomes&nbsp;available.&nbsp;The&lt;br&gt;<br>
callback&nbsp;receives&nbsp;the&nbsp;storage&nbsp;area&nbsp;as&nbsp;an&nbsp;argument.&nbsp;We&nbsp;would&nbsp;also&nbsp;have&lt;br&gt;<br>
the&nbsp;function&lt;br&gt;<br>
&lt;br&gt;<br>
getMultipleStorageAreas(names,&nbsp;callback)&lt;br&gt;<br>
&lt;br&gt;<br>
Same&nbsp;as&nbsp;above,&nbsp;but&nbsp;names&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;strings&nbsp;indicating&nbsp;multiple&lt;br&gt;<br>
storage&nbsp;areas&nbsp;that&nbsp;need&nbsp;to&nbsp;be&nbsp;acquired&nbsp;before&nbsp;the&nbsp;callback&nbsp;is&nbsp;called.&lt;br&gt;<br>
The&nbsp;callback&nbsp;receives&nbsp;all&nbsp;the&nbsp;areas&nbsp;in&nbsp;an&nbsp;array&nbsp;as&nbsp;an&nbsp;argument.&nbsp;This&lt;br&gt;<br>
function&nbsp;allows&nbsp;transferring&nbsp;data&nbsp;between&nbsp;multiple&nbsp;storage&nbsp;areas&lt;br&gt;<br>
without&nbsp;risking&nbsp;racing.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;These&nbsp;are&nbsp;all&nbsp;good&nbsp;suggestions,&nbsp;but&nbsp;I&#39;m&nbsp;not&nbsp;sure&nbsp;even&nbsp;that&nbsp;API&nbsp;would&nbsp;be&nbsp;powerful&nbsp;enough&nbsp;for&nbsp;developers.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;thought exercise&gt;&lt;/div&gt;&lt;div&gt;For&nbsp;example,&nbsp;how&nbsp;would&nbsp;you&nbsp;implement&nbsp;an&nbsp;offline&nbsp;webmail&nbsp;app?&nbsp; Well,&nbsp;my&nbsp;first&nbsp;thought&nbsp;is&nbsp;to&nbsp;make&nbsp;each&nbsp;email&nbsp;a&nbsp;key/value.&nbsp; But&nbsp;we&nbsp;can&#39;t&nbsp;iterate&nbsp;over&nbsp;ranges&nbsp;of&nbsp;keys,&nbsp;so&nbsp;that&nbsp;won&#39;t&nbsp;work.&nbsp; Maybe&nbsp;instead&nbsp;we&nbsp;can&nbsp;make&nbsp;each&nbsp;key&nbsp;a&nbsp;folder&nbsp;for&nbsp;our&nbsp;mail?&nbsp; We&nbsp;could&nbsp;store&nbsp;all&nbsp;the&nbsp;mails&nbsp;in&nbsp;an&nbsp;array.&nbsp; But&nbsp;that&nbsp;could&nbsp;be&nbsp;a&nbsp;huge&nbsp;amount&nbsp;of&nbsp;data&nbsp;in&nbsp;each&nbsp;key--on&nbsp;the&nbsp;order&nbsp;of&nbsp;hundreds&nbsp;of&nbsp;megabytes&nbsp;for&nbsp;some&nbsp;users.&nbsp; So,&nbsp;to&nbsp;optimize,&nbsp;I&nbsp;guess&nbsp;we&nbsp;could&nbsp;store&nbsp;the&nbsp;emails&nbsp;in&nbsp;their&nbsp;own&nbsp;keys&nbsp;and&nbsp;then&nbsp;just&nbsp;store&nbsp;large&nbsp;arrays&nbsp;of&nbsp;mail&nbsp;keys&nbsp;in&nbsp;each&nbsp;folder&nbsp;key.&nbsp; This&nbsp;would&nbsp;also&nbsp;solve&nbsp;the&nbsp;problem&nbsp;of&nbsp;gmail-like&nbsp;&quot;labels&quot;&nbsp;(i.e.&nbsp;a&nbsp;many&nbsp;to&nbsp;one&nbsp;relationship&nbsp;between&nbsp;folders/labels&nbsp;to&nbsp;emails).&nbsp; Oh&nbsp;yeah,&nbsp;and&nbsp;we&#39;d&nbsp;need&nbsp;to&nbsp;have&nbsp;one&nbsp;key&nbsp;that&#39;s&nbsp;a&nbsp;list&nbsp;of&nbsp;all&nbsp;the&nbsp;folders.&lt;/div&gt;<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Great.&nbsp; But&nbsp;now&nbsp;we&nbsp;want&nbsp;to&nbsp;allow&nbsp;offline&nbsp;searching&nbsp;of&nbsp;our&nbsp;emails.&nbsp; Crap.&nbsp; Well&nbsp;we&nbsp;can&nbsp;efficiently&nbsp;search&nbsp;arrays&nbsp;with&nbsp;a&nbsp;binary&nbsp;search.&nbsp; But&nbsp;that&nbsp;takes&nbsp;a&nbsp;while&nbsp;to&nbsp;update.&nbsp; Well,&nbsp;we&nbsp;can&nbsp;implement&nbsp;a&nbsp;balanced&nbsp;tree&nbsp;for&nbsp;each&nbsp;index&nbsp;and&nbsp;then&nbsp;store&nbsp;it&nbsp;in&nbsp;keys.&nbsp; And&nbsp;have&nbsp;one&nbsp;key&nbsp;that&nbsp;has&nbsp;a&nbsp;list&nbsp;of&nbsp;all&nbsp;our&nbsp;index&nbsp;keys.&nbsp; This&nbsp;seems&nbsp;reasonably&nbsp;efficient--as&nbsp;long&nbsp;as&nbsp;the&nbsp;trees&nbsp;don&#39;t&nbsp;get&nbsp;too&nbsp;big.&nbsp; Even&nbsp;if&nbsp;the&nbsp;implementation&nbsp;is&nbsp;pretty&nbsp;slick,&nbsp;once&nbsp;they&nbsp;get&nbsp;to&nbsp;a&nbsp;certain&nbsp;size,&nbsp;just&nbsp;loading&nbsp;one&nbsp;key&nbsp;into&nbsp;memory&nbsp;could&nbsp;take&nbsp;a&nbsp;while.&nbsp; Especially&nbsp;since&nbsp;the&nbsp;entire&nbsp;time&nbsp;we&#39;re&nbsp;updating/reading/whatever&nbsp;our&nbsp;keys,&nbsp;we&#39;re&nbsp;either&nbsp;starving&nbsp;other&nbsp;tabs&nbsp;from&nbsp;accessing&nbsp;the&nbsp;data&nbsp;or&nbsp;blocking&nbsp;their&nbsp;event&nbsp;loop.&lt;/div&gt;<br>
<br>
<br>
&lt;div&gt;&lt;/thought exercise &gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So&nbsp;yes:&nbsp;I&nbsp;do&nbsp;think&nbsp;that&nbsp;you&nbsp;can&nbsp;create&nbsp;at&nbsp;least&nbsp;a&nbsp;simple&nbsp;web&nbsp;mail&nbsp;client.&nbsp; And,&nbsp;as&nbsp;long&nbsp;as&nbsp;the&nbsp;JavaScript&nbsp;engine&nbsp;is&nbsp;fast&nbsp;enough&nbsp;to&nbsp;handle&nbsp;large,&nbsp;complex&nbsp;data&nbsp;structures&nbsp;(without&nbsp;running&nbsp;out&nbsp;of&nbsp;memory!),&nbsp;I&nbsp;suppose&nbsp;you&nbsp;probably&nbsp;could&nbsp;build&nbsp;just&nbsp;about&nbsp;anything&nbsp;on&nbsp;top&nbsp;of&nbsp;it.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;But&nbsp;realistically,&nbsp;it&nbsp;seems&nbsp;that&nbsp;(at&nbsp;a&nbsp;minimum)&nbsp;we&nbsp;need&nbsp;to&nbsp;add&nbsp;a&nbsp;way&nbsp;to&nbsp;iterate&nbsp;over&nbsp;ranges&nbsp;of&nbsp;keys&nbsp;and&nbsp;something&nbsp;with&nbsp;multiple&nbsp;storage&nbsp;areas&nbsp;(as&nbsp;you&nbsp;suggested).&nbsp; Honestly,&nbsp;I&nbsp;can&#39;t&nbsp;think&nbsp;of&nbsp;anything&nbsp;else&nbsp;that&nbsp;seems&nbsp;super&nbsp;important&nbsp;right&nbsp;now.&nbsp; (Though&nbsp;I&nbsp;know&nbsp;the&nbsp;gmail&nbsp;guys&nbsp;would&nbsp;say&nbsp;they&nbsp;need&nbsp;full&nbsp;text&nbsp;search.&nbsp; :-)&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If&nbsp;it&#39;d&nbsp;be&nbsp;helpful,&nbsp;I&nbsp;could&nbsp;maybe&nbsp;ask&nbsp;some&nbsp;developers&nbsp;here&nbsp;at&nbsp;Google&nbsp;how&nbsp;they&#39;d&nbsp;like&nbsp;to&nbsp;use&nbsp;LocalStorage&nbsp;to&nbsp;get&nbsp;some&nbsp;more&nbsp;concrete&nbsp;use&nbsp;cases.&lt;/div&gt;<br>
&lt;div&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
There&#39;s&nbsp;several&nbsp;problems&nbsp;with&nbsp;this,&nbsp;such&nbsp;as&nbsp;the&nbsp;names&nbsp;are&nbsp;sort&nbsp;of&lt;br&gt;<br>
crappy,&nbsp;and&nbsp;that&nbsp;getting&nbsp;storage&nbsp;areas&nbsp;an&nbsp;array&nbsp;isn&#39;t&nbsp;very&nbsp;friendly.&lt;br&gt;<br>
However&nbsp;you&nbsp;get&nbsp;the&nbsp;basic&nbsp;idea. &lt;/blockquote&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt; &lt;/blockquote&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
<br>
<br>
<br>
We&nbsp;don&#39;t&nbsp;even&nbsp;need&nbsp;to&nbsp;use&nbsp;Storage&nbsp;objects&nbsp;for&nbsp;this.&nbsp;In&nbsp;fact,&nbsp;I&nbsp;hope&lt;br&gt;<br>
mozilla&nbsp;will&nbsp;in&nbsp;a&nbsp;not&nbsp;too&nbsp;distant&nbsp;future&nbsp;come&nbsp;up&nbsp;with&nbsp;an&nbsp;alternative&lt;br&gt;<br>
proposal&nbsp;to&nbsp;the&nbsp;WebDatabase&nbsp;SQL&nbsp;API.&nbsp;Something&nbsp;like&nbsp;this&nbsp;might&nbsp;fit&lt;br&gt;<br>
into&nbsp;such&nbsp;a&nbsp;proposal&nbsp;as&nbsp;I&nbsp;think&nbsp;that&#39;ll&nbsp;have&nbsp;multiple&nbsp;separate&nbsp;storage&lt;br&gt;<br>
areas&nbsp;anyway.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Any&nbsp;chance&nbsp;you&nbsp;could&nbsp;give&nbsp;us&nbsp;a&nbsp;preview&nbsp;of&nbsp;how&nbsp;you&nbsp;envision&nbsp;this&nbsp;API&nbsp;looking?&lt;/div&gt;&lt;/div&gt;<br>

</tt>
