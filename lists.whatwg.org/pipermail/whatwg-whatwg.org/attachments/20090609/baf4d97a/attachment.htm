<tt>
It&nbsp;occurs&nbsp;to&nbsp;me&nbsp;that&nbsp;my&nbsp;statement&nbsp;was&nbsp;a&nbsp;bit&nbsp;stronger&nbsp;than&nbsp;I&nbsp;intended&nbsp;-&nbsp;the&nbsp;spec&nbsp;*does*&nbsp;indeed&nbsp;make&nbsp;guarantees&nbsp;regarding&nbsp;GC&nbsp;of&nbsp;workers,&nbsp;but&nbsp;they&nbsp;are&nbsp;fairly&nbsp;loose&nbsp;and&nbsp;typically&nbsp;tied&nbsp;to&nbsp;the&nbsp;parent&nbsp;Document&nbsp;becoming&nbsp;inactive. &lt;div&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;-atw&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Tue,&nbsp;Jun&nbsp;9,&nbsp;2009&nbsp;at&nbsp;6:42&nbsp;PM,&nbsp;Drew&nbsp;Wilson&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:atwilson@google.com&quot;&gt;atwilson@google.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
This&nbsp;is&nbsp;a&nbsp;bit&nbsp;of&nbsp;an&nbsp;aside,&nbsp;but&nbsp;section&nbsp;4.5&nbsp;of&nbsp;the&nbsp;Web&nbsp;Workers&nbsp;spec&nbsp;no&nbsp;longer&nbsp;makes&nbsp;any&nbsp;guarantees&nbsp;regarding&nbsp;GC&nbsp;of&nbsp;workers.&nbsp;I&nbsp;would&nbsp;expect&nbsp;user&nbsp;agents&nbsp;to&nbsp;make&nbsp;some&nbsp;kind&nbsp;of&nbsp;best&nbsp;effort&nbsp;to&nbsp;detect&nbsp;unreachability&nbsp;in&nbsp;the&nbsp;simplest&nbsp;cases,&nbsp;but&nbsp;supporting&nbsp;MessagePorts&nbsp;and&nbsp;SharedWorkers&nbsp;makes&nbsp;authoritatively&nbsp;determining&nbsp;worker&nbsp;reachability&nbsp;exceedingly&nbsp;difficult&nbsp;except&nbsp;in&nbsp;simpler&nbsp;cases&nbsp;(DedicatedWorkers&nbsp;with&nbsp;no&nbsp;MessagePorts&nbsp;or&nbsp;nested&nbsp;workers,&nbsp;for&nbsp;example). It&nbsp;seems&nbsp;like&nbsp;we&nbsp;should&nbsp;be&nbsp;encouraging&nbsp;developers&nbsp;to&nbsp;call&nbsp;WorkerGlobalScope.close()&nbsp;when&nbsp;they&nbsp;are&nbsp;done&nbsp;with&nbsp;their&nbsp;workers, which in the case below makes the number of running threads less undeterministic.&lt;div&gt;<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;Back&nbsp;on&nbsp;topic,&nbsp;I believe what Dmitry was suggesting was not that we specify&nbsp;a&nbsp;specific&nbsp;limit in the specification, but rather we have some sort of general agreement on how a UA might handle limits (what should it do when the limit is reached).&nbsp;His&nbsp;suggestion&nbsp;of&nbsp;delaying&nbsp;the&nbsp;startup&nbsp;of&nbsp;the&nbsp;worker&nbsp;seems&nbsp;like&nbsp;a&nbsp;better&nbsp;solution&nbsp;than&nbsp;other&nbsp;approaches&nbsp;like&nbsp;throwing&nbsp;an&nbsp;exception&nbsp;on&nbsp;the&nbsp;Worker&nbsp;constructor.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-atw&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;On&nbsp;Tue,&nbsp;Jun&nbsp;9,&nbsp;2009&nbsp;at&nbsp;6:28&nbsp;PM,&nbsp;Oliver&nbsp;Hunt&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:oliver@apple.com&quot;&nbsp;target=&quot;_blank&quot;&gt;oliver@apple.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
&lt;div&nbsp;style=&quot;word-wrap:break-word&quot;&gt;I&nbsp;believe&nbsp;that&nbsp;this&nbsp;will&nbsp;be&nbsp;difficult&nbsp;to&nbsp;have&nbsp;such&nbsp;a&nbsp;limit&nbsp;as&nbsp;sites&nbsp;may&nbsp;rely&nbsp;on&nbsp;GC&nbsp;to&nbsp;collect&nbsp;Workers&nbsp;that&nbsp;are&nbsp;no&nbsp;longer&nbsp;running&nbsp;(so&nbsp;number&nbsp;of&nbsp;running&nbsp;threads&nbsp;is&nbsp;non-deterministic), and in the context of mix source content (&amp;quot;mash-ups&amp;quot;) it&nbsp;will&nbsp;be&nbsp;difficult&nbsp;for&nbsp;any&nbsp;content&nbsp;source&nbsp;to&nbsp;be&nbsp;sure&nbsp;it&nbsp;isn&amp;#39;t&nbsp;going&nbsp;to&nbsp;contribute&nbsp;to&nbsp;that&nbsp;limit.  Obviously a UA shouldn&amp;#39;t crash, but i believe that it is up to the UA to determine how to achieve this -- eg. having a limit to allow a 1:1 relationship between workers and processes will have a much lower limit than an implementation that has a worker per thread model, or an m:n relationship between workers and threads/processes.&nbsp; Having&nbsp;the&nbsp;specification&nbsp;limited&nbsp;simply&nbsp;because&nbsp;one&nbsp;implementation&nbsp;mechanism&nbsp;has&nbsp;certain&nbsp;limits&nbsp;when&nbsp;there&nbsp;are&nbsp;many&nbsp;alternative&nbsp;implementation&nbsp;models&nbsp;seems&nbsp;like&nbsp;a&nbsp;bad&nbsp;idea.&lt;div&gt;<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;believe&nbsp;if&nbsp;there&amp;#39;s&nbsp;going&nbsp;to&nbsp;be&nbsp;any&nbsp;worker&nbsp;related&nbsp;limits, it should realistically be a lower limit on the number of workers rather than an upper.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font&nbsp;color=&quot;#888888&quot;&gt;--Oliver&lt;/font&gt;&lt;div&gt;<br>
<br>
&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;On&nbsp;Jun&nbsp;9,&nbsp;2009,&nbsp;at&nbsp;6:13&nbsp;PM,&nbsp;Dmitry&nbsp;Titov&nbsp;wrote:&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&gt;Hi&nbsp;WHATWG!&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;Chromium,&nbsp;workers&nbsp;are&nbsp;going&nbsp;to&nbsp;have&nbsp;their&nbsp;separate&nbsp;processes,&nbsp;at&nbsp;least&nbsp;for&nbsp;now.&nbsp;So&nbsp;we&nbsp;quickly&nbsp;found&nbsp;that&nbsp;&amp;quot;while(true)&nbsp;foo&nbsp;=&nbsp;new&nbsp;Worker(...)&amp;quot;&nbsp;quickly&nbsp;consumes&nbsp;the&nbsp;OS&nbsp;resources&nbsp;:-)&nbsp;In&nbsp;fact,&nbsp;this&nbsp;will&nbsp;kill&nbsp;other&nbsp;browsers&nbsp;too,&nbsp;and&nbsp;on&nbsp;some&nbsp;systems&nbsp;the&nbsp;unbounded&nbsp;number&nbsp;of&nbsp;threads&nbsp;will&nbsp;effectively&nbsp;&amp;quot;freeze&amp;quot;&nbsp;the&nbsp;system&nbsp;beyond&nbsp;the&nbsp;browser. &lt;/div&gt;<br>
<br>
&nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;We&nbsp;think&nbsp;about&nbsp;how&nbsp;to&nbsp;reasonably&nbsp;place&nbsp;limits&nbsp;on&nbsp;the&nbsp;resources&nbsp;consumed&nbsp;by&nbsp;&amp;#39;sea&nbsp;of&nbsp;workers&amp;#39;.&nbsp;Obviously,&nbsp;one&nbsp;could&nbsp;just&nbsp;limit&nbsp;a&nbsp;maxumum&nbsp;number&nbsp;of&nbsp;parallel&nbsp;workers&nbsp;available&nbsp;to&nbsp;page&nbsp;or&nbsp;domain&nbsp;or&nbsp;browser.&nbsp;But&nbsp;what&nbsp;do&nbsp;you&nbsp;do&nbsp;when&nbsp;a&nbsp;limit&nbsp;is&nbsp;reached?&nbsp;The&nbsp;Worker()&nbsp;constructor&nbsp;could&nbsp;return&nbsp;null&nbsp;or&nbsp;throw&nbsp;exception.&nbsp;However,&nbsp;that&nbsp;seems&nbsp;to&nbsp;go&nbsp;against&nbsp;the&nbsp;spirit&nbsp;of&nbsp;the&nbsp;spec&nbsp;since&nbsp;it&nbsp;usually&nbsp;does&nbsp;not&nbsp;deal&nbsp;with&nbsp;resource&nbsp;constraints.&nbsp;So&nbsp;it&nbsp;makes&nbsp;sense&nbsp;to&nbsp;look&nbsp;for&nbsp;the&nbsp;most&nbsp;sensible&nbsp;implementation&nbsp;that&nbsp;tries&nbsp;best&nbsp;to&nbsp;behave.&lt;/div&gt;<br>
<br>
&nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Current&nbsp;idea&nbsp;is&nbsp;to&nbsp;let&nbsp;create&nbsp;as&nbsp;many&nbsp;Worker&nbsp;objects&nbsp;as&nbsp;requested,&nbsp;but&nbsp;not&nbsp;necessarily&nbsp;start&nbsp;them&nbsp;right&nbsp;away.&nbsp;So&nbsp;the&nbsp;resources&nbsp;are&nbsp;not&nbsp;allocated&nbsp;except&nbsp;the&nbsp;thin&nbsp;JS&nbsp;wrapper.&nbsp;As&nbsp;long&nbsp;as&nbsp;workers&nbsp;terminate&nbsp;and&nbsp;the&nbsp;number&nbsp;of&nbsp;them&nbsp;decreases&nbsp;below&nbsp;the&nbsp;limit,&nbsp;more&nbsp;workers&nbsp;from&nbsp;the&nbsp;&amp;quot;ready&nbsp;queue&amp;quot;&nbsp;could&nbsp;be&nbsp;started.&nbsp;This&nbsp;allows&nbsp;to&nbsp;support&nbsp;implementation&nbsp;limits&nbsp;w/o&nbsp;exposing&nbsp;them.&lt;/div&gt;<br>
<br>
&nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;is&nbsp;similar&nbsp;to&nbsp;how&nbsp;a&nbsp;&amp;#39;sea&nbsp;of&nbsp;XHRs&amp;#39;&nbsp;would&nbsp;behave.&nbsp;The&nbsp;test&nbsp;page&nbsp;&lt;a&nbsp;href=&quot;http://www.figushki.com/test/xhr/xhr10000.html&quot;&nbsp;target=&quot;_blank&quot;&gt;here&lt;/a&gt; creates&nbsp;10,000&nbsp;async&nbsp;XHR&nbsp;requests&nbsp;to&nbsp;distinct&nbsp;URLs&nbsp;and&nbsp;then&nbsp;waits&nbsp;for&nbsp;all&nbsp;of&nbsp;them&nbsp;to&nbsp;complete.&nbsp;While&nbsp;it&amp;#39;s&nbsp;obviosuly&nbsp;impossible&nbsp;to&nbsp;have&nbsp;10K&nbsp;http&nbsp;connections&nbsp;in&nbsp;parallel,&nbsp;all&nbsp;XHRs&nbsp;will&nbsp;be&nbsp;completed,&nbsp;given&nbsp;time.&lt;/div&gt;<br>
<br>
&nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Does&nbsp;it&nbsp;sound&nbsp;like&nbsp;a&nbsp;good&nbsp;way&nbsp;to&nbsp;avoid&nbsp;the&nbsp;resource&nbsp;crunch&nbsp;due&nbsp;to&nbsp;high&nbsp;number&nbsp;of&nbsp;workers?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thanks,&lt;/div&gt;&lt;div&gt;Dmitry&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;<br>
<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>

</tt>
