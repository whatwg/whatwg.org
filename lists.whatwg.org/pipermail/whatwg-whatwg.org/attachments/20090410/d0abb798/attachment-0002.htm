<tt>
Media&nbsp;element&nbsp;state&nbsp;changes,&nbsp;such&nbsp;as&nbsp;readyState&nbsp;changes,&nbsp;trigger&nbsp;asynchronous&nbsp;events.&nbsp;When&nbsp;the&nbsp;event&nbsp;handler&nbsp;actually&nbsp;runs,&nbsp;the&nbsp;element&nbsp;state&nbsp;might&nbsp;have&nbsp;already&nbsp;changed&nbsp;again.&nbsp;For&nbsp;example,&nbsp;it&#39;s&nbsp;quite&nbsp;possible&nbsp;for&nbsp;readyState&nbsp;to&nbsp;change&nbsp;to&nbsp;HAVE_ENOUGH_DATA,&nbsp;a&nbsp;canplaythrough&nbsp;event&nbsp;is&nbsp;scheduled,&nbsp;then&nbsp;the&nbsp;readyState&nbsp;changes&nbsp;to&nbsp;HAVE_CURRENT_DATA,&nbsp;then&nbsp;the&nbsp;canplaythrough&nbsp;event&nbsp;handler&nbsp;runs&nbsp;and&nbsp;may&nbsp;be&nbsp;surprised&nbsp;to&nbsp;find&nbsp;that&nbsp;the&nbsp;state&nbsp;is&nbsp;not&nbsp;HAVE_ENOUGH_DATA.&lt;br&nbsp;clear=&quot;all&quot;&gt;<br>
&lt;br&gt;A&nbsp;related&nbsp;surprise&nbsp;is&nbsp;that&nbsp;although&nbsp;a&nbsp;media&nbsp;element&nbsp;delays&nbsp;the&nbsp;document&nbsp;load&nbsp;event&nbsp;until&nbsp;the&nbsp;readyState&nbsp;reaches&nbsp;HAVE_CURRENT_DATA,&nbsp;it&nbsp;is&nbsp;possible&nbsp;for&nbsp;a&nbsp;loadeddata&nbsp;event&nbsp;handler&nbsp;to&nbsp;actually&nbsp;run&nbsp;after&nbsp;the&nbsp;document&nbsp;load&nbsp;event&nbsp;handler.&lt;br&gt;<br>
&lt;br&gt;An&nbsp;obvious&nbsp;approach&nbsp;to&nbsp;avoid&nbsp;these&nbsp;surprises&nbsp;is&nbsp;to&nbsp;arrange&nbsp;for&nbsp;the&nbsp;state&nbsp;changes&nbsp;to&nbsp;not&nbsp;be&nbsp;reflected&nbsp;in&nbsp;the&nbsp;element&nbsp;until&nbsp;the&nbsp;associated&nbsp;event&nbsp;actually&nbsp;fires.&nbsp;That&#39;s&nbsp;a&nbsp;problem&nbsp;if&nbsp;you&nbsp;apply&nbsp;it&nbsp;generally,&nbsp;though.&nbsp;If&nbsp;you&nbsp;delay&nbsp;changes&nbsp;to&nbsp;the&nbsp;&#39;currentTime&#39;&nbsp;attribute&nbsp;until&nbsp;the&nbsp;associated&nbsp;timeupdate&nbsp;event&nbsp;runs,&nbsp;either&nbsp;&#39;currentTime&#39;&nbsp;does&nbsp;not&nbsp;reflect&nbsp;what&nbsp;is&nbsp;actually&nbsp;being&nbsp;displayed&nbsp;or&nbsp;your&nbsp;video&nbsp;playback&nbsp;depends&nbsp;on&nbsp;timely&nbsp;JS&nbsp;event&nbsp;execution&nbsp;---&nbsp;both&nbsp;of&nbsp;those&nbsp;options&nbsp;are&nbsp;unacceptable.&nbsp;And&nbsp;allowing&nbsp;&#39;currentTime&#39;&nbsp;to&nbsp;advance&nbsp;while&nbsp;the&nbsp;readyState&nbsp;is&nbsp;still&nbsp;at&nbsp;HAVE_CURRENT_DATA&nbsp;seems&nbsp;like&nbsp;it&nbsp;could&nbsp;be&nbsp;confusing&nbsp;too.&lt;br&gt;<br>
&lt;br&gt;So&nbsp;I&nbsp;don&#39;t&nbsp;have&nbsp;a&nbsp;proposal&nbsp;here,&nbsp;just&nbsp;raising&nbsp;this&nbsp;issue&nbsp;and&nbsp;wondering&nbsp;if&nbsp;anyone&nbsp;has&nbsp;any&nbsp;better&nbsp;ideas.&lt;br&gt;&lt;br&gt;Rob&lt;br&gt;--&nbsp;&lt;br&gt;&quot;He&nbsp;was&nbsp;pierced&nbsp;for&nbsp;our&nbsp;transgressions,&nbsp;he&nbsp;was&nbsp;crushed&nbsp;for&nbsp;our&nbsp;iniquities;&nbsp;the&nbsp;punishment&nbsp;that&nbsp;brought&nbsp;us&nbsp;peace&nbsp;was&nbsp;upon&nbsp;him,&nbsp;and&nbsp;by&nbsp;his&nbsp;wounds&nbsp;we&nbsp;are&nbsp;healed.&nbsp;We&nbsp;all,&nbsp;like&nbsp;sheep,&nbsp;have&nbsp;gone&nbsp;astray,&nbsp;each&nbsp;of&nbsp;us&nbsp;has&nbsp;turned&nbsp;to&nbsp;his&nbsp;own&nbsp;way;&nbsp;and&nbsp;the&nbsp;LORD&nbsp;has&nbsp;laid&nbsp;on&nbsp;him&nbsp;the&nbsp;iniquity&nbsp;of&nbsp;us&nbsp;all.&quot;&nbsp;[Isaiah&nbsp;53:5-6]&lt;br&gt;<br>
<br>

</tt>
