<tt>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Wed,&nbsp;Sep&nbsp;23,&nbsp;2009&nbsp;at&nbsp;1:31&nbsp;PM,&nbsp;João&nbsp;Eiras&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:joaoe@opera.com&quot;&gt;joaoe@opera.com&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;On&nbsp;Wed,&nbsp;23&nbsp;Sep&nbsp;2009&nbsp;20:19:43&nbsp;+0200,&nbsp;Brett&nbsp;Cannon&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:brett@python.org&quot;&nbsp;target=&quot;_blank&quot;&gt;brett@python.org&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
Before&nbsp;the&nbsp;move&nbsp;to&nbsp;structured&nbsp;clones&nbsp;one&nbsp;could&nbsp;tell&nbsp;if&nbsp;a&nbsp;key&nbsp;was&nbsp;set&lt;br&gt;<br>
by&nbsp;calling&nbsp;getItem()&nbsp;and&nbsp;seeing&nbsp;if&nbsp;it&nbsp;returned&nbsp;null&nbsp;(had&nbsp;to&nbsp;use&nbsp;===&nbsp;as&lt;br&gt;<br>
someone&nbsp;could&nbsp;have&nbsp;called&nbsp;setItem()&nbsp;w/&nbsp;null,&nbsp;but&nbsp;that&nbsp;would&nbsp;be&nbsp;coerced&lt;br&gt;<br>
to&nbsp;a&nbsp;string&nbsp;for&nbsp;storage).&nbsp;But&nbsp;with&nbsp;the&nbsp;latest&nbsp;draft&#39;s&nbsp;switch&nbsp;to&lt;br&gt;<br>
structured&nbsp;clones&nbsp;that&nbsp;test&nbsp;no&nbsp;longer&nbsp;clearly&nbsp;differentiates&nbsp;between&lt;br&gt;<br>
whether&nbsp;the&nbsp;value&nbsp;returned&nbsp;by&nbsp;getItem()&nbsp;signifies&nbsp;that&nbsp;the&nbsp;key&nbsp;was&nbsp;not&lt;br&gt;<br>
set,&nbsp;or&nbsp;the&nbsp;key&nbsp;was&nbsp;set&nbsp;with&nbsp;the&nbsp;value&nbsp;null.&lt;br&gt;<br>
&lt;br&gt;<br>
As&nbsp;written&nbsp;right&nbsp;now&nbsp;the&nbsp;only&nbsp;way&nbsp;to&nbsp;detect&nbsp;if&nbsp;a&nbsp;key&nbsp;was&nbsp;truly&nbsp;set&nbsp;is&lt;br&gt;<br>
to&nbsp;iterate&nbsp;through&nbsp;all&nbsp;of&nbsp;them&nbsp;with&nbsp;&#39;length&#39;&nbsp;and&nbsp;key().&nbsp;Perhaps&nbsp;a&lt;br&gt;<br>
contains()&nbsp;function&nbsp;that&nbsp;returns&nbsp;true/false&nbsp;based&nbsp;on&nbsp;whether&nbsp;the&nbsp;key&lt;br&gt;<br>
is&nbsp;set&nbsp;is&nbsp;warranted?&nbsp;Otherwise&nbsp;you&nbsp;could&nbsp;do&nbsp;something&nbsp;like&nbsp;Python&#39;s&lt;br&gt;<br>
get()&nbsp;method&nbsp;on&nbsp;dicts&nbsp;where&nbsp;an&nbsp;optional&nbsp;second&nbsp;argument&nbsp;is&nbsp;provided&nbsp;to&lt;br&gt;<br>
getItem()&nbsp;which&nbsp;is&nbsp;returned&nbsp;only&nbsp;if&nbsp;the&nbsp;key&nbsp;is&nbsp;not&nbsp;set,&nbsp;allowing&nbsp;a&lt;br&gt;<br>
user-provided&nbsp;object&nbsp;represent&nbsp;a&nbsp;key&nbsp;not&nbsp;existing&nbsp;w/&nbsp;===.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;/div&gt;<br>
Yes,&nbsp;there&nbsp;is&nbsp;ambiguity&nbsp;in&nbsp;getItem()&nbsp;between&nbsp;the&nbsp;case&nbsp;of&nbsp;non&nbsp;existent&nbsp;key&nbsp;or&nbsp;the&nbsp;case&nbsp;or&nbsp;null&nbsp;key.&lt;br&gt;<br>
But&nbsp;does&nbsp;storing&nbsp;null&nbsp;keys&nbsp;adds&nbsp;any&nbsp;value,&nbsp;or&nbsp;relevant&nbsp;information&nbsp;?&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;User&nbsp;Agent&nbsp;could&nbsp;optimize&nbsp;by&nbsp;treating&nbsp;a&nbsp;setItem(key,&nbsp;null)&nbsp;as&nbsp;a&nbsp;removeItem()&nbsp;because&nbsp;getItem()&nbsp;would&nbsp;return&nbsp;in&nbsp;both&nbsp;cases&nbsp;null,&nbsp;and&nbsp;it&nbsp;would&nbsp;be&nbsp;an&nbsp;opportunity&nbsp;to&nbsp;spend&nbsp;less&nbsp;quota&nbsp;of&nbsp;the&nbsp;storage&nbsp;area.&nbsp;The&nbsp;only&nbsp;side&nbsp;effect&nbsp;of&nbsp;such&nbsp;optimization&nbsp;would&nbsp;be&nbsp;that&nbsp;setItem(key,&nbsp;null)&nbsp;would&nbsp;not&nbsp;produce&nbsp;a&nbsp;new&nbsp;key&nbsp;entry&nbsp;that&nbsp;could&nbsp;be&nbsp;read&nbsp;by&nbsp;key(index).&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;<br>
But&nbsp;back&nbsp;on&nbsp;the&nbsp;original&nbsp;issue,&nbsp;doing&nbsp;a&nbsp;setItem(key,null)&nbsp;is&nbsp;just&nbsp;redundant&nbsp;overhead&nbsp;that&nbsp;does&nbsp;not&nbsp;had&nbsp;any&nbsp;information,&nbsp;so&nbsp;the&nbsp;spec&nbsp;could&nbsp;just&nbsp;allow&nbsp;the&nbsp;harmless&nbsp;ambiguity&nbsp;to&nbsp;happen.&lt;br&gt;<br>
I&nbsp;personally&nbsp;would&nbsp;prefer&nbsp;setItem(key,null/undefined)&nbsp;to&nbsp;be&nbsp;treated&nbsp;as&nbsp;removeItem(key).&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;IIRC,&nbsp;this&nbsp;is&nbsp;how&nbsp;it&nbsp;used&nbsp;to&nbsp;be.&nbsp; If&nbsp;so,&nbsp;does&nbsp;anyone&nbsp;remember&nbsp;why&nbsp;this&nbsp;was&nbsp;changed?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Also,&nbsp;what&nbsp;about&nbsp;undefined?&nbsp; It&nbsp;seems&nbsp;kind&nbsp;of&nbsp;weird&nbsp;that&nbsp;we&#39;d&nbsp;let&nbsp;someone&nbsp;store&nbsp;undefined&nbsp;and&nbsp;not&nbsp;null.&lt;/div&gt;<br>
<br>

</tt>
