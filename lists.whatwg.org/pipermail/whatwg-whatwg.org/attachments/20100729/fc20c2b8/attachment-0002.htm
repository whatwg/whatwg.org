<tt>
<br>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;Jul&nbsp;29,&nbsp;2010&nbsp;at&nbsp;2:53&nbsp;PM,&nbsp;Ian&nbsp;Hickson&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:ian@hixie.ch&quot;&gt;ian@hixie.ch&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
<br>
On&nbsp;Fri,&nbsp;16&nbsp;Apr&nbsp;2010,&nbsp;Kit&nbsp;Grose&nbsp;wrote:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;I&nbsp;agree&nbsp;with&nbsp;you&nbsp;both&nbsp;generally,&nbsp;but&nbsp;I&nbsp;disagree&nbsp;that&nbsp;there&nbsp;are&nbsp;no&lt;br&gt;<br>
&gt;&nbsp;downsides.&nbsp;I&nbsp;imagine&nbsp;the&nbsp;main&nbsp;use-case&nbsp;where&nbsp;this&nbsp;sort&nbsp;of&nbsp;behaviour&lt;br&gt;<br>
&gt;&nbsp;might&nbsp;be&nbsp;expected&nbsp;is&nbsp;a&nbsp;Javascript&nbsp;application&nbsp;which&nbsp;dynamically&nbsp;adds&nbsp;a&lt;br&gt;<br>
&gt;&nbsp;new&nbsp;form&nbsp;to&nbsp;the&nbsp;page&nbsp;based&nbsp;on&nbsp;some&nbsp;user&nbsp;interaction&nbsp;and&nbsp;one&nbsp;of&nbsp;those&lt;br&gt;<br>
&gt;&nbsp;fields&nbsp;should&nbsp;be&nbsp;autofocused&nbsp;when&nbsp;it&#39;s&nbsp;been&nbsp;added&nbsp;to&nbsp;the&nbsp;DOM.&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;don&#39;t&nbsp;think&nbsp;that&#39;s&nbsp;the&nbsp;main&nbsp;use&nbsp;case.&nbsp;The&nbsp;main&nbsp;use&nbsp;case&nbsp;is&nbsp;static&nbsp;pages&lt;br&gt;<br>
that&nbsp;just&nbsp;use&nbsp;script&nbsp;to&nbsp;focus&nbsp;the&nbsp;control.&lt;br&gt;<br>
&lt;br&gt;<br>
However,&nbsp;I&nbsp;could&nbsp;see&nbsp;an&nbsp;argument&nbsp;that&nbsp;we&nbsp;should&nbsp;handle&nbsp;the&nbsp;case&nbsp;of&nbsp;a&nbsp;page&lt;br&gt;<br>
that&nbsp;loads&nbsp;a&nbsp;stub&nbsp;script&nbsp;which&nbsp;then&nbsp;loads&nbsp;a&nbsp;blob&nbsp;of&nbsp;HTML&nbsp;in&nbsp;and&nbsp;inserts&nbsp;it&lt;br&gt;<br>
after&nbsp;onload&nbsp;--&nbsp;that,&nbsp;in&nbsp;combination&nbsp;with&nbsp;the&nbsp;points&nbsp;above,&nbsp;argues&nbsp;that&nbsp;we&lt;br&gt;<br>
should&nbsp;not&nbsp;prevent&nbsp;autofocus&nbsp;from&nbsp;working&nbsp;after&nbsp;onload,&nbsp;but&nbsp;that&nbsp;we&nbsp;should&lt;br&gt;<br>
make&nbsp;it&nbsp;only&nbsp;work&nbsp;once.&nbsp;I&#39;ve&nbsp;specced&nbsp;that.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
&gt;&nbsp;For&nbsp;instance,&nbsp;picture&nbsp;the&nbsp;Gmail&nbsp;model.&nbsp;When&nbsp;you&nbsp;first&nbsp;load,&nbsp;the&lt;br&gt;<br>
&gt;&nbsp;autofocus&nbsp;attribute&nbsp;could&nbsp;conceivably&nbsp;be&nbsp;on&nbsp;the&nbsp;inbox&nbsp;search&nbsp;field.&nbsp;When&lt;br&gt;<br>
&gt;&nbsp;you&nbsp;click&nbsp;Compose,&nbsp;the&nbsp;compose&nbsp;form&nbsp;will&nbsp;be&nbsp;dynamically&nbsp;added&nbsp;and&nbsp;the&lt;br&gt;<br>
&gt;&nbsp;&quot;To&quot;&nbsp;field&nbsp;should&nbsp;be&nbsp;autofocused&nbsp;(but&nbsp;the&nbsp;search&nbsp;field&nbsp;is&nbsp;still&lt;br&gt;<br>
&gt;&nbsp;on-screen)&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;I&nbsp;suppose&nbsp;you&nbsp;could&nbsp;argue&nbsp;that&nbsp;it&#39;d&nbsp;be&nbsp;up&nbsp;to&nbsp;the&nbsp;application&nbsp;to&nbsp;go&nbsp;and&lt;br&gt;<br>
&gt;&nbsp;*remove*&nbsp;the&nbsp;previous&nbsp;autofocus&nbsp;attribute&nbsp;from&nbsp;the&nbsp;search&nbsp;field,&nbsp;or&lt;br&gt;<br>
&gt;&nbsp;should&nbsp;manage&nbsp;focus&nbsp;as&nbsp;they&nbsp;currently&nbsp;do&nbsp;with&nbsp;HTMLInputElement.focus(),&lt;br&gt;<br>
&gt;&nbsp;but&nbsp;I&nbsp;can&nbsp;see&nbsp;the&nbsp;simplicity&nbsp;that&nbsp;automatically&nbsp;moving&nbsp;the&nbsp;focus&nbsp;would&lt;br&gt;<br>
&gt;&nbsp;represent&nbsp;for&nbsp;these&nbsp;sorts&nbsp;of&nbsp;applications.&lt;br&gt;<br>
&lt;br&gt;<br>
In&nbsp;this&nbsp;kind&nbsp;of&nbsp;situation,&nbsp;you&#39;d&nbsp;just&nbsp;use&nbsp;focus().&nbsp;There&#39;s&nbsp;not&nbsp;much&nbsp;point&lt;br&gt;<br>
using&nbsp;autofocus&nbsp;if&nbsp;you&#39;re&nbsp;already&nbsp;running&nbsp;code;&nbsp;the&nbsp;main&nbsp;win&nbsp;of&nbsp;the&lt;br&gt;<br>
attribute&nbsp;is&nbsp;simplifying&nbsp;the&nbsp;page&nbsp;and&nbsp;not&nbsp;requiring&nbsp;scripting,&nbsp;but&nbsp;if&lt;br&gt;<br>
you&#39;ve&nbsp;already&nbsp;got&nbsp;code&nbsp;the&nbsp;cost&nbsp;of&nbsp;an&nbsp;additional&nbsp;focus()&nbsp;is&nbsp;minimal.&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;I&nbsp;agree&nbsp;that&nbsp;if&nbsp;you&nbsp;are&nbsp;comparing:&lt;br&gt;&lt;br&gt;var&nbsp;html&nbsp;=&nbsp;&quot;&lt;input&nbsp;id=&#39;mySearch&#39;&nbsp;type=&#39;text&#39;&nbsp;autofocus&gt;&quot;;&lt;br&gt;<br>
<br>
<br>
document.getElementById(&#39;myDiv&#39;).innerHTML&nbsp;=&nbsp;html;&lt;br&gt;&lt;br&gt;to&lt;br&gt;&lt;br&gt;var&nbsp;html&nbsp;=&nbsp;&quot;&lt;input&nbsp;id=&#39;mySearch&#39;&nbsp;type=&#39;text&#39;&gt;&quot;;&lt;br&gt;<br>
<br>
document.getElementById(&#39;myDiv&#39;).innerHTML&nbsp;=&nbsp;html;&lt;br&gt;<br>
document.getElementById(&#39;mySearch&#39;).focus();&lt;br&gt;&lt;br&gt;then&nbsp;the&nbsp;cost&nbsp;is&nbsp;minimal.&lt;br&gt;&lt;br&gt;However&nbsp;there&nbsp;are&nbsp;a&nbsp;lot&nbsp;of&nbsp;instances&nbsp;of&nbsp;scripts&nbsp;retrieving&nbsp;HTML&nbsp;blobs&nbsp;where&nbsp;it&nbsp;is&nbsp;much&nbsp;more&nbsp;convenient&nbsp;and&nbsp;compatible&nbsp;with&nbsp;the&nbsp;work&nbsp;flow&nbsp;that&nbsp;the&nbsp;focus&nbsp;is&nbsp;determined&nbsp;using&nbsp;HTML&nbsp;instead&nbsp;of&nbsp;JS.&nbsp;If&nbsp;you&nbsp;take&nbsp;a&nbsp;common&nbsp;example&nbsp;such&nbsp;as&nbsp;a&nbsp;Facebook-style&nbsp;modal&nbsp;&quot;dialog&quot;&nbsp;you&nbsp;can&nbsp;see&nbsp;that&nbsp;it&nbsp;would&nbsp;be&nbsp;easy&nbsp;to&nbsp;return&nbsp;HTML&nbsp;with&nbsp;an&nbsp;&lt;input&nbsp;autofocus&gt;.&nbsp;Any&nbsp;HTML&nbsp;editor/generator&nbsp;could&nbsp;set&nbsp;focus&nbsp;this&nbsp;way&nbsp;and&nbsp;it&nbsp;would&nbsp;be&nbsp;easy&nbsp;to&nbsp;convey&nbsp;that&nbsp;functionality&nbsp;to&nbsp;the&nbsp;UA&nbsp;as&nbsp;it&nbsp;is&nbsp;part&nbsp;of&nbsp;the&nbsp;content.&lt;br&gt;<br>
<br>
&lt;br&gt;As&nbsp;soon&nbsp;as&nbsp;it&nbsp;you&nbsp;get&nbsp;into&nbsp;requiring&nbsp;JS&nbsp;to&nbsp;call&nbsp;.focus()&nbsp;for&nbsp;any&nbsp;focus&nbsp;action&nbsp;after&nbsp;onload&nbsp;then&nbsp;things&nbsp;get&nbsp;complicated.&nbsp;It&nbsp;becomes&nbsp;something&nbsp;that&nbsp;has&nbsp;to&nbsp;be&nbsp;conveyed&nbsp;out-of-band&nbsp;from&nbsp;the&nbsp;HTML&nbsp;throughout&nbsp;the&nbsp;whole&nbsp;work&nbsp;flow.&nbsp;Now&nbsp;my&nbsp;HTML&nbsp;form&nbsp;editor&nbsp;needs&nbsp;to&nbsp;tell&nbsp;the&nbsp;backend&nbsp;to&nbsp;tell&nbsp;the&nbsp;UA&nbsp;to&nbsp;call&nbsp;.focus()&nbsp;on&nbsp;a&nbsp;specific&nbsp;element&nbsp;after&nbsp;that&nbsp;HTML&nbsp;has&nbsp;been&nbsp;sent&nbsp;_and_&nbsp;rendered&nbsp;to&nbsp;the&nbsp;client.&nbsp;That&nbsp;can&nbsp;be&nbsp;done,&nbsp;but&nbsp;it&nbsp;certainly&nbsp;isn&#39;t&nbsp;elegant&nbsp;or&nbsp;simple.&lt;br&gt;<br>
<br>
&lt;br&gt;It&nbsp;would&nbsp;seem&nbsp;to&nbsp;me&nbsp;that&nbsp;focus&nbsp;should&nbsp;always&nbsp;be&nbsp;set&nbsp;on&nbsp;the&nbsp;last&nbsp;element&nbsp;to&nbsp;have&nbsp;autofocus.&nbsp;This&nbsp;would&nbsp;address&nbsp;the&nbsp;&quot;dialog&quot;&nbsp;scenario&nbsp;and&nbsp;work&nbsp;well&nbsp;with&nbsp;common&nbsp;CMS&nbsp;practices.&nbsp;A&nbsp;site&nbsp;may&nbsp;use&nbsp;a&nbsp;CMS&nbsp;(e.g.&nbsp;a&nbsp;blog,&nbsp;Drupal,&nbsp;SharePoint,&nbsp;etc)&nbsp;that&nbsp;may&nbsp;generate&nbsp;a&nbsp;&quot;static&quot;&nbsp;page&nbsp;(from&nbsp;the&nbsp;perspective&nbsp;of&nbsp;the&nbsp;UA)&nbsp;that&nbsp;has&nbsp;autofocus&nbsp;on&nbsp;a&nbsp;search&nbsp;box&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;page.&nbsp;However,&nbsp;when&nbsp;the&nbsp;user&nbsp;goes&nbsp;to&nbsp;a&nbsp;page&nbsp;with&nbsp;a&nbsp;form&nbsp;it&nbsp;would&nbsp;autofocus&nbsp;on&nbsp;the&nbsp;form&nbsp;as&nbsp;it&nbsp;would&nbsp;be&nbsp;farther&nbsp;down&nbsp;the&nbsp;page&nbsp;(presumably).&lt;br&gt;<br>
<br>
&lt;br&gt;Paul&nbsp;Ellis&lt;br&gt;<br>

</tt>
