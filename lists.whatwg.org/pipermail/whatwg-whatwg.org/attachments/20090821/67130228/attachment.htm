<tt>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Fri,&nbsp;Aug&nbsp;21,&nbsp;2009&nbsp;at&nbsp;6:37&nbsp;AM,&nbsp;Patrick&nbsp;Mueller&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:pmuellr@muellerware.org&quot;&gt;pmuellr@muellerware.org&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
<br>
Patrick&nbsp;Mueller&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
&lt;br&gt;<br>
Time&nbsp;to&nbsp;work&nbsp;on&nbsp;some&nbsp;examples.&nbsp; This&nbsp;would&nbsp;relatively&nbsp;easy&nbsp;to&nbsp;prototype&nbsp;in&nbsp;something&nbsp;like&nbsp;Rhino&nbsp;(or&nbsp;my&nbsp;nitro_pie&nbsp;python&nbsp;wrapper&nbsp;for&nbsp;JavaScriptCore),&nbsp;at&nbsp;least&nbsp;API&nbsp;wise,&nbsp;so&nbsp;we&nbsp;could&nbsp;see&nbsp;what&nbsp;the&nbsp;user-land&nbsp;code&nbsp;would&nbsp;look&nbsp;like,&nbsp;and&nbsp;see&nbsp;it&nbsp;run.&lt;br&gt;<br>
<br>
<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
I&nbsp;developed&nbsp;a&nbsp;simulator&nbsp;for&nbsp;this&nbsp;yesterday.&nbsp; My&nbsp;big&nbsp;take&nbsp;away&nbsp;is&nbsp;that&nbsp;the&nbsp;current&nbsp;shape&nbsp;leaves&nbsp;users&nbsp;in&nbsp;a&nbsp;batteries-not-included&nbsp;state.&lt;br&gt;<br>
&lt;br&gt;<br>
Here&amp;#39;s&nbsp;the&nbsp;kind&nbsp;of&nbsp;code&nbsp;I&nbsp;had&nbsp;to&nbsp;write&nbsp;to&nbsp;arrange&nbsp;to&nbsp;create&nbsp;a&nbsp;new&nbsp;scope&nbsp;and&nbsp;load&nbsp;a&nbsp;single&nbsp;script&nbsp;in&nbsp;it&nbsp;from&nbsp;multiple&nbsp;windows.&nbsp; Each&nbsp;window&nbsp;would&nbsp;run&nbsp;this&nbsp;code&nbsp;in&nbsp;it&amp;#39;s&nbsp;own&nbsp;context.&lt;br&gt;<br>
&lt;br&gt;<br>
function&nbsp;loadLibrary(scopeName,&nbsp;script,&nbsp;callback)&nbsp;{&lt;br&gt;<br>
&nbsp; &nbsp; var&nbsp;scope&nbsp;=&nbsp;getSharedScope(scopeName);&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; //&nbsp;script&nbsp;already&nbsp;loaded&nbsp;in&nbsp;the&nbsp;scope&lt;br&gt;<br>
&nbsp; &nbsp; if&nbsp;(scope.__loaded)&nbsp;{&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; callback(scope,&nbsp;scope.__callback_data);&lt;br&gt;<br>
&nbsp; &nbsp; }&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; //&nbsp;script&nbsp;not&nbsp;yet&nbsp;done&nbsp;loading&lt;br&gt;<br>
&nbsp; &nbsp; else&nbsp;if&nbsp;(scope.__loading)&nbsp;{&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; scope.__onLoadedListeners.push(callback);&lt;br&gt;<br>
&nbsp; &nbsp; }&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; //&nbsp;first&nbsp;one&nbsp;in!&nbsp; much&nbsp;work&nbsp;to&nbsp;do&nbsp;...&lt;br&gt;<br>
&nbsp; &nbsp; else&nbsp;{&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; scope.__loading&nbsp;=&nbsp;true;&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; scope.__onLoadedListeners&nbsp;=&nbsp;[];&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; function&nbsp;handler(callback_data)&nbsp;{&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; scope.__loaded&nbsp; &nbsp; &nbsp; &nbsp; =&nbsp;true;&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; scope.__loading&nbsp; &nbsp; &nbsp; &nbsp;=&nbsp;false;&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; scope.__callback_data&nbsp;=&nbsp;callback_data;&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; callback(scope,&nbsp;callback_data);&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for&nbsp;(var&nbsp;i=0;&nbsp;i&amp;lt;scope.__onLoadedListeners.length;&nbsp;i++)&nbsp;{&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; scope.__onLoadedListeners[i](scope,&nbsp;callback_data);&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; }&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; scope.runScript(script,&nbsp;{handler:&nbsp;handler});&lt;br&gt;<br>
&nbsp; &nbsp; }&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; return&nbsp;scope;&lt;br&gt;<br>
}&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;changed&nbsp;the&nbsp;GlobalScript()&nbsp;constructor&nbsp;to&nbsp;a&nbsp;getSharedScope()&nbsp;function&nbsp;(at&nbsp;the&nbsp;top),&nbsp;and&nbsp;the&nbsp;load()&nbsp;function&nbsp;to&nbsp;a&nbsp;runScript()&nbsp;function&nbsp;which&nbsp;takes&nbsp;parameters&nbsp;including&nbsp;a&nbsp;callback&nbsp;function.&lt;br&gt;<br>
&lt;br&gt;<br>
I&amp;#39;m&nbsp;of&nbsp;two&nbsp;minds&nbsp;here.&lt;br&gt;<br>
&lt;br&gt;<br>
One&nbsp;is&nbsp;that&nbsp;the&nbsp;SharedScope&nbsp;proposal&nbsp;is&nbsp;really&nbsp;only&nbsp;appropriate&nbsp;for&nbsp;pages&nbsp;with&nbsp;lots&nbsp;of&nbsp;JavaScript&nbsp;that&nbsp;could&nbsp;be&nbsp;shared,&nbsp;or&nbsp;special&nbsp;use&nbsp;cases&nbsp;where&nbsp;you&nbsp;want&nbsp;(eventually)&nbsp;easy&nbsp;sharing&nbsp;between&nbsp;windows.&nbsp; As&nbsp;such,&nbsp;s&nbsp;smallish&nbsp;amount&nbsp;of&nbsp;JS&nbsp;framework-y-ness&nbsp;like&nbsp;this&nbsp;isn&amp;#39;t&nbsp;a&nbsp;show&nbsp;stopper.&nbsp;In&nbsp;fact,&nbsp;as&nbsp;spec&amp;#39;d,&nbsp;separating&nbsp;out&nbsp;the&nbsp;scope&nbsp;and&nbsp;script&nbsp;loading,&nbsp;will&nbsp;let&nbsp;folks&nbsp;build&nbsp;mini-frameworks&nbsp;for&nbsp;themselves&nbsp;fairly&nbsp;easily,&nbsp;customized&nbsp;to&nbsp;their&nbsp;own&nbsp;needs.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;<br>
On&nbsp;the&nbsp;other&nbsp;hand,&nbsp;I&nbsp;wonder&nbsp;about&nbsp;the&nbsp;potential&nbsp;benefits&nbsp;of&nbsp;letting&nbsp;more&nbsp;people&nbsp;play&nbsp;in&nbsp;the&nbsp;space&nbsp;easier.&nbsp; The&nbsp;securable&nbsp;module&nbsp;work&nbsp;in&nbsp;the&nbsp;serverjs&nbsp;projects&nbsp;it&nbsp;a&nbsp;bit&nbsp;easier&nbsp;to&nbsp;use&nbsp;out&nbsp;of&nbsp;the&nbsp;box.&nbsp; I&amp;#39;m&nbsp;not&nbsp;sure&nbsp;they&nbsp;have&nbsp;an&nbsp;async&nbsp;story&nbsp;though,&nbsp;and&nbsp;async&nbsp;loading&nbsp;of&nbsp;scripts&nbsp;is&nbsp;where&nbsp;this&nbsp;stuff&nbsp;quickly&nbsp;gets&nbsp;complicated.&lt;/blockquote&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;For&nbsp;a&nbsp;feature&nbsp;of&nbsp;this&nbsp;scope,&nbsp;I&nbsp;think&nbsp;it&amp;#39;s&nbsp;much&nbsp;better&nbsp;to&nbsp;keep&nbsp;the&nbsp;API&nbsp;surface&nbsp;area&nbsp;as&nbsp;low&nbsp;as&nbsp;is&nbsp;possible&nbsp;for&nbsp;the&nbsp;first&nbsp;version.&nbsp; If,&nbsp;out&nbsp;of&nbsp;the&nbsp;frameworks,&nbsp;emerges&nbsp;a&nbsp;clear&nbsp;winner,&nbsp;then&nbsp;we&nbsp;should&nbsp;talk&nbsp;about&nbsp;expanding&nbsp;the&nbsp;API.&nbsp; Until&nbsp;then,&nbsp;I&nbsp;worry&nbsp;we&amp;#39;ll&nbsp;just&nbsp;be&nbsp;speculating/bike-shedding.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thanks&nbsp;for&nbsp;doing&nbsp;this,&nbsp;btw!&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;J&lt;/div&gt;&lt;/div&gt;<br>

</tt>
