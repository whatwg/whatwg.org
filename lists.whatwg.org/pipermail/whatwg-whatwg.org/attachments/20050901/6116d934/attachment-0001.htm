<tt>
3.4.2&nbsp;&quot;DOM&nbsp;&lt;code&gt;Node&lt;/code&gt;&nbsp;objects&quot;&nbsp;browser&nbsp;DOM&nbsp;nodes&nbsp;often&nbsp;have&nbsp;state&nbsp;that&nbsp;isn't&nbsp;apparent&nbsp;in&nbsp;the&nbsp;DOM&nbsp;---&nbsp;e.g.,&nbsp;the&nbsp;contents&nbsp;of&nbsp;a&nbsp;&lt;canvas&gt;,&nbsp;or&nbsp;the&nbsp;state&nbsp;of&nbsp;form&nbsp;controls.&nbsp;Please&nbsp;clarify&nbsp;that&nbsp;this&nbsp;state&nbsp;is&nbsp;not&nbsp;restored&nbsp;and&nbsp;ONLY&nbsp;the&nbsp;listed&nbsp;attributes&nbsp;and&nbsp;children&nbsp;may&nbsp;be&nbsp;restored.<br>
&lt;br&gt;&lt;br&gt;3.4.2&nbsp;&quot;other&nbsp;objects&quot;&nbsp;this&nbsp;is&nbsp;entirely&nbsp;ECMAscript&nbsp;specific,&nbsp;is&nbsp;it&nbsp;not?&nbsp;How&nbsp;can&nbsp;this&nbsp;work&nbsp;across&nbsp;language&nbsp;bindings?&nbsp;It&nbsp;might&nbsp;be&nbsp;a&nbsp;lot&nbsp;simpler&nbsp;for&nbsp;everyone&nbsp;to&nbsp;only&nbsp;specify&nbsp;storage&nbsp;for&nbsp;DOM&nbsp;types.&lt;br&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;http://3.4.6.1&quot;&gt;<br>
3.4.6.1&lt;/a&gt;&nbsp;&quot;The&nbsp;space&nbsp;limits&nbsp;on&nbsp;&lt;span&gt;public&nbsp;storage&nbsp;areas&lt;/span&gt;&nbsp;should&nbsp;not&nbsp;affect<br>
&nbsp;&nbsp;&nbsp;the&nbsp;limits&nbsp;for&nbsp;non-public&nbsp;domains,&nbsp;however.&quot;&nbsp;The&nbsp;definition&nbsp;of&nbsp;&quot;public&quot;&nbsp;is&nbsp;troublesome,&nbsp;as&nbsp;you&nbsp;note&nbsp;below.&nbsp;With&nbsp;this&nbsp;policy&nbsp;the&nbsp;most&nbsp;reasonable&nbsp;thing&nbsp;for&nbsp;implementors&nbsp;is&nbsp;to&nbsp;be&nbsp;conservative&nbsp;about&nbsp;what&nbsp;domains&nbsp;are&nbsp;declared&nbsp;&quot;public&quot;&nbsp;...&nbsp;allowing&nbsp;denial&nbsp;of&nbsp;service&nbsp;attacks&nbsp;against&nbsp;sites&nbsp;in&nbsp;deeper/obscure&nbsp;public&nbsp;domains&nbsp;but&nbsp;preventing&nbsp;sites&nbsp;from&nbsp;grabbing&nbsp;unlimited&nbsp;storage.&nbsp;Of&nbsp;course&nbsp;grabbing&nbsp;lots&nbsp;of&nbsp;domain&nbsp;names&nbsp;isn't&nbsp;unthinkable&nbsp;so&nbsp;UAs&nbsp;will&nbsp;probably&nbsp;need&nbsp;additional&nbsp;mechanisms&nbsp;to&nbsp;manage&nbsp;quota.&nbsp;Some&nbsp;more&nbsp;discussion&nbsp;of&nbsp;this&nbsp;problem&nbsp;would&nbsp;be&nbsp;helpful.<br>
&lt;br&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;http://3.4.6.2&quot;&gt;3.4.6.2&lt;/a&gt;&nbsp;Is&nbsp;it&nbsp;obvious&nbsp;what&nbsp;&quot;run&nbsp;to&nbsp;completion&quot;&nbsp;means&nbsp;for&nbsp;a&nbsp;script?&nbsp;I&nbsp;think&nbsp;here&nbsp;you&nbsp;need&nbsp;to&nbsp;say&nbsp;that&nbsp;the&nbsp;intended&nbsp;semantics&nbsp;is&nbsp;that&nbsp;*as&nbsp;far&nbsp;as&nbsp;scripts&nbsp;can&nbsp;tell*,&nbsp;there&nbsp;is&nbsp;no&nbsp;concurrent&nbsp;script&nbsp;execution,&nbsp;and&nbsp;hence&nbsp;no&nbsp;concurrent&nbsp;access&nbsp;to&nbsp;storage&nbsp;objects,&nbsp;and&nbsp;any&nbsp;implementation&nbsp;technique&nbsp;that&nbsp;preserves&nbsp;this&nbsp;is&nbsp;allowed.&nbsp;If&nbsp;that's&nbsp;not&nbsp;the&nbsp;intended&nbsp;semantics,&nbsp;it&nbsp;should&nbsp;be!&nbsp;The&nbsp;behaviour&nbsp;currently&nbsp;described&nbsp;is&nbsp;one&nbsp;such&nbsp;technique&nbsp;but&nbsp;there&nbsp;could<br>
be&nbsp;others&nbsp;(e.g.,&nbsp;optimistic&nbsp;transactional&nbsp;script&nbsp;execution).&lt;br&gt;&lt;br&gt;Two&nbsp;things&nbsp;that&nbsp;I&nbsp;didn't&nbsp;see&nbsp;that&nbsp;I&nbsp;think&nbsp;should&nbsp;be&nbsp;mentioned;&nbsp;apologies&nbsp;if&nbsp;they&nbsp;are:&lt;br&gt;--&nbsp;From&nbsp;the&nbsp;security&nbsp;discussion,&nbsp;it's&nbsp;obvious&nbsp;that&nbsp;UAs&nbsp;are&nbsp;permitted&nbsp;to&nbsp;arbitrarily&nbsp;discard&nbsp;persistent&nbsp;storage&nbsp;data.&nbsp;This&nbsp;should&nbsp;be&nbsp;stated&nbsp;up-front.&nbsp;Exactly&nbsp;*when*&nbsp;is&nbsp;such&nbsp;discarding&nbsp;permitted,&nbsp;though?<br>
&lt;br&gt;--&nbsp;There&nbsp;should&nbsp;be&nbsp;some&nbsp;atomicity&nbsp;property&nbsp;that&nbsp;authors&nbsp;can&nbsp;rely&nbsp;on&nbsp;to&nbsp;safely&nbsp;update&nbsp;storage&nbsp;under&nbsp;potential&nbsp;failures&nbsp;(of&nbsp;the&nbsp;UA,&nbsp;or&nbsp;the&nbsp;hardware,&nbsp;or&nbsp;whatever).&nbsp;It's&nbsp;probably&nbsp;enough&nbsp;to&nbsp;require&nbsp;that&nbsp;setItem&nbsp;and&nbsp;removeItem&nbsp;are&nbsp;atomic&nbsp;with&nbsp;respect&nbsp;to&nbsp;failure.&nbsp;In&nbsp;other&nbsp;words,&nbsp;if&nbsp;the&nbsp;UA&nbsp;fails&nbsp;during&nbsp;a&nbsp;setItem&nbsp;or&nbsp;removeItem,&nbsp;then&nbsp;later&nbsp;the&nbsp;operation&nbsp;will&nbsp;be&nbsp;observed&nbsp;to&nbsp;either&nbsp;have&nbsp;succeeded&nbsp;normally&nbsp;or&nbsp;not&nbsp;happened&nbsp;at&nbsp;all&nbsp;(and&nbsp;of&nbsp;course&nbsp;the&nbsp;storage&nbsp;object&nbsp;will&nbsp;not&nbsp;be&nbsp;corrupted!).<br>
&lt;br&gt;&lt;br&gt;Rob&lt;br&gt;--&nbsp;&lt;br&gt;[&quot;Therefore,&nbsp;my&nbsp;dear&nbsp;friends,&nbsp;as&nbsp;you&nbsp;have&nbsp;always&nbsp;obeyed–not&nbsp;only&nbsp;in&nbsp;my&lt;br&gt;presence,&nbsp;but&nbsp;now&nbsp;much&nbsp;more&nbsp;in&nbsp;my&nbsp;absence–continue&nbsp;to&nbsp;work&nbsp;out&nbsp;your&lt;br&gt;salvation&nbsp;with&nbsp;fear&nbsp;and&nbsp;trembling,&nbsp;for&nbsp;it&nbsp;is&nbsp;God&nbsp;who&nbsp;works&nbsp;in&nbsp;you&nbsp;to&nbsp;will<br>
&lt;br&gt;and&nbsp;to&nbsp;act&nbsp;according&nbsp;to&nbsp;his&nbsp;good&nbsp;purpose.&quot;&nbsp;Philippians&nbsp;2:12-13.]
</tt>
