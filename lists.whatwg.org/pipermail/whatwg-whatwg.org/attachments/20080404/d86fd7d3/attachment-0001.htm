<tt>
postMessage()&nbsp;is&nbsp;currently&nbsp;specified&nbsp;as&nbsp;a&nbsp;synchronous&nbsp;API&nbsp;--&nbsp;the&nbsp;caller&nbsp;is&nbsp;blocked&nbsp;until&nbsp;the&nbsp;target&nbsp;frame&nbsp;finishes&nbsp;handling&nbsp;the&nbsp;event.&lt;br&gt;&lt;br&gt;This&nbsp;seems&nbsp;broken&nbsp;to&nbsp;me.&nbsp;&nbsp;I&nbsp;would&nbsp;argue&nbsp;this&nbsp;should&nbsp;be&nbsp;an&nbsp;asynchronous&nbsp;API,&nbsp;for&nbsp;two&nbsp;reasons:&lt;br&gt;<br>
&lt;br&gt;1.&nbsp;&nbsp;&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;font-weight:&nbsp;bold;&quot;&gt;JS&nbsp;content&nbsp;authors&nbsp;will&nbsp;want&nbsp;an&nbsp;async&nbsp;API.&lt;/span&gt;&nbsp;&nbsp;Large&nbsp;JavaScript&nbsp;applications&nbsp;(take&nbsp;GMail&nbsp;for&nbsp;instance)&nbsp;go&nbsp;through&nbsp;contortions&nbsp;today&nbsp;to&nbsp;avoid&nbsp;hitting&nbsp;the&nbsp;JS&nbsp;stack&nbsp;limit&nbsp;in&nbsp;any&nbsp;browser.&nbsp;&nbsp;If&nbsp;postMessage&nbsp;is&nbsp;synchronous,&nbsp;and&nbsp;you&nbsp;receive&nbsp;an&nbsp;event,&nbsp;what&nbsp;is&nbsp;the&nbsp;current&nbsp;stack&nbsp;depth?&nbsp;You&nbsp;have&nbsp;no&nbsp;way&nbsp;of&nbsp;knowing,&nbsp;and&nbsp;(in&nbsp;the&nbsp;worst&nbsp;case)&nbsp;must&nbsp;assume&nbsp;that&nbsp;the&nbsp;frame&nbsp;you&#39;re&nbsp;being&nbsp;called&nbsp;from&nbsp;already&nbsp;has&nbsp;N-1&nbsp;frames&nbsp;on&nbsp;the&nbsp;stack,&nbsp;thus&nbsp;you&nbsp;can&nbsp;make&nbsp;no&nbsp;function&nbsp;calls&nbsp;from&nbsp;within&nbsp;your&nbsp;message&nbsp;handler.&nbsp;&nbsp;So&nbsp;your&nbsp;message&nbsp;handlers&nbsp;must&nbsp;always&nbsp;look&nbsp;like&nbsp;this:&lt;br&gt;<br>
&lt;br&gt;function&nbsp;messageHandler(messageEvent)&nbsp;{&lt;br&gt;&nbsp;//&nbsp;We&nbsp;assume&nbsp;calling&nbsp;into&nbsp;our&nbsp;complex&nbsp;functions&nbsp;might&nbsp;run&nbsp;out&nbsp;of&nbsp;stack&nbsp;space,&nbsp;so&nbsp;we&nbsp;just&nbsp;handle&nbsp;this&nbsp;in&nbsp;a&nbsp;timeout:&lt;br&gt;&nbsp;setTimeout(0,&nbsp;function()&nbsp;{&nbsp;realMessageHandler(messageEvent)&nbsp;}&nbsp;);&lt;br&gt;<br>
}&lt;br&gt;&lt;br&gt;function&nbsp;realMessageHandler(messageEvent)&nbsp;{&nbsp;&lt;br&gt;&nbsp;&nbsp;//&nbsp;handle&nbsp;the&nbsp;message...&lt;br&gt;&nbsp;&nbsp;//&nbsp;and,&nbsp;reply&nbsp;to&nbsp;the&nbsp;message&lt;br&gt;&nbsp;&nbsp;messageEvent.source.postMessage(&quot;response&nbsp;message&quot;);&lt;br&gt;}&lt;br&gt;&lt;br&gt;I&nbsp;forsee&nbsp;JS&nbsp;authors&nbsp;implementing&nbsp;their&nbsp;own&nbsp;asynchronous&nbsp;behavior,&nbsp;as&nbsp;shown&nbsp;above.&nbsp;&nbsp;Thus&nbsp;defeating&nbsp;reasons&nbsp;for&nbsp;postMessage&nbsp;to&nbsp;be&nbsp;synchronous&nbsp;in&nbsp;the&nbsp;first&nbsp;place.&lt;br&gt;<br>
&lt;br&gt;2.&nbsp;&nbsp;&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;font-weight:&nbsp;bold;&quot;&gt;JS&nbsp;engine&nbsp;implementors&nbsp;will&nbsp;want&nbsp;an&nbsp;async&nbsp;API.&lt;/span&gt;&nbsp;&nbsp;Major&nbsp;JS&nbsp;engines,&nbsp;like&nbsp;SpiderMonkey&nbsp;(Mozilla)&nbsp;and&nbsp;JavaScriptCore&nbsp;(WebKit)&nbsp;can&nbsp;already&nbsp;be&nbsp;used&nbsp;from&nbsp;multiple&nbsp;threads,&nbsp;but&nbsp;these&nbsp;browsers&nbsp;currently&nbsp;run&nbsp;all&nbsp;JS&nbsp;on&nbsp;the&nbsp;main&nbsp;thread.&nbsp;&nbsp;I&nbsp;would&nbsp;rather&nbsp;we&nbsp;didn&#39;t&nbsp;prevent&nbsp;FireFox&nbsp;or&nbsp;Safari&nbsp;from&nbsp;some&nbsp;day&nbsp;running&nbsp;a&nbsp;separate&nbsp;interpreter&nbsp;(and&nbsp;thread)&nbsp;per&nbsp;tab.&nbsp;(Only&nbsp;possible&nbsp;for&nbsp;frames&nbsp;which&nbsp;are&nbsp;not&nbsp;of&nbsp;the&nbsp;same&nbsp;origin.&nbsp;&nbsp;&nbsp;Same-origin&nbsp;frames&nbsp;already&nbsp;assume&nbsp;they&nbsp;can&nbsp;grab&nbsp;at&nbsp;each&nbsp;others&nbsp;innards&nbsp;in&nbsp;a&nbsp;synchronous&nbsp;manner.)&nbsp;&nbsp;postMessage&nbsp;imposes&nbsp;a&nbsp;NEW&nbsp;requirement&nbsp;that&nbsp;all&nbsp;connected&nbsp;frames&nbsp;to&nbsp;be&nbsp;run&nbsp;from&nbsp;the&nbsp;same&nbsp;thread&nbsp;(or&nbsp;somehow&nbsp;synchronize&nbsp;the&nbsp;threads&nbsp;after&nbsp;the&nbsp;first&nbsp;postMessage()&nbsp;call&nbsp;is&nbsp;made).&nbsp;&nbsp;This&nbsp;requirement&nbsp;would&nbsp;seem&nbsp;even&nbsp;worse&nbsp;for&nbsp;Microsoft,&nbsp;since&nbsp;IE8&nbsp;looks&nbsp;like&nbsp;it&#39;s&nbsp;multi-process.&nbsp;&nbsp;A&nbsp;synchronous&nbsp;postMessage&nbsp;would&nbsp;require&nbsp;IE8&nbsp;to&nbsp;keep&nbsp;all&nbsp;frames&nbsp;which&nbsp;have&nbsp;references&nbsp;to&nbsp;each&nbsp;other&nbsp;in&nbsp;the&nbsp;same&nbsp;process.&lt;br&gt;<br>
&lt;br&gt;Anyway,&nbsp;I&#39;m&nbsp;not&nbsp;the&nbsp;foremost&nbsp;expert&nbsp;here,&nbsp;but&nbsp;I&nbsp;was&nbsp;reading&nbsp;HTML5&nbsp;last&nbsp;week&nbsp;and&nbsp;encountered&nbsp;this&nbsp;sync&nbsp;postMessage()&nbsp;requirement,&nbsp;which&nbsp;seemed&nbsp;like&nbsp;a&nbsp;bad&nbsp;idea.&lt;br&gt;&lt;br&gt;-eric&lt;br&gt;&lt;br&gt;<br>

</tt>
