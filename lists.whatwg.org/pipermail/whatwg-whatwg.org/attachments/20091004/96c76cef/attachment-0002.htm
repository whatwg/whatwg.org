<tt>
This&nbsp;sounds&nbsp;like&nbsp;a&nbsp;very&nbsp;good&nbsp;proposal,&nbsp;but&nbsp;can&nbsp;we&nbsp;extend&nbsp;it&nbsp;to&nbsp;include&nbsp;other&nbsp;things&nbsp;than&nbsp;just&nbsp;drawImage?&nbsp;I&#39;m&nbsp;not&nbsp;sure&nbsp;how&nbsp;useful&nbsp;it&nbsp;would&nbsp;be,&nbsp;but&nbsp;it&nbsp;could&nbsp;perhaps&nbsp;include&nbsp;all&nbsp;the&nbsp;other&nbsp;drawing&nbsp;options,&nbsp;like&nbsp;stroking&nbsp;and&nbsp;filling&nbsp;paths&nbsp;created&nbsp;with&nbsp;lineTo,&nbsp;arc,&nbsp;etc.&nbsp;&lt;br&gt;<br>
&lt;br&gt;Marius&nbsp;Gundersen&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Sun,&nbsp;Oct&nbsp;4,&nbsp;2009&nbsp;at&nbsp;9:10&nbsp;AM,&nbsp;Charles&nbsp;Pritchard&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:chuck@jumis.com&quot;&gt;chuck@jumis.com&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
There&nbsp;have&nbsp;been&nbsp;a&nbsp;few&nbsp;discussions&nbsp;about&nbsp;anti-aliasing&nbsp;/&nbsp;aliasing&nbsp;in&nbsp;Canvas&nbsp;implementations.&lt;br&gt;<br>
Of&nbsp;those&nbsp;I&nbsp;read&nbsp;through,&nbsp;the&nbsp;conflict&nbsp;remains.&lt;br&gt;<br>
&lt;br&gt;<br>
In&nbsp;some&nbsp;implementations:&nbsp;when&nbsp;drawImage&nbsp;is&nbsp;used&nbsp;along&nbsp;with&nbsp;a&nbsp;clipping&nbsp;path,&lt;br&gt;<br>
feathering&nbsp;is&nbsp;applied.&nbsp;This&nbsp;shows&nbsp;up&nbsp;in&nbsp;several&nbsp;projective&nbsp;transformation&nbsp;demos&lt;br&gt;<br>
contrasting&nbsp;Firefox&nbsp;with&nbsp;Chrome.&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;believe&nbsp;that&nbsp;if&nbsp;we&nbsp;allow&nbsp;a&nbsp;toggle&nbsp;for&nbsp;this&nbsp;setting,&nbsp;we&nbsp;can&nbsp;bring&nbsp;some&nbsp;compatibility&lt;br&gt;<br>
to&nbsp;the&nbsp;two&nbsp;systems.&lt;br&gt;<br>
&lt;br&gt;<br>
Enumerate&nbsp;two&nbsp;aliasClipping&nbsp;values&nbsp;:&nbsp;&quot;aliased&quot;,&nbsp;&quot;feathered&quot;&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;consider&nbsp;&quot;anti-aliased&quot;&nbsp;to&nbsp;confusing,&nbsp;I&nbsp;think&nbsp;&quot;feathered&quot;&nbsp;is&nbsp;a&nbsp;better&nbsp;name.&lt;br&gt;<br>
&lt;br&gt;<br>
.....&lt;br&gt;<br>
&lt;br&gt;<br>
[Supplemental]&lt;br&gt;<br>
interface&nbsp;CanvasRenderingContext2D&nbsp;{&lt;br&gt;<br>
&nbsp; &nbsp; attribute&nbsp;DOMString&nbsp;aliasClipping;&nbsp;//&nbsp;default&nbsp;&quot;feathered&quot;&lt;br&gt;<br>
 }&lt;br&gt;<br>
&lt;br&gt;<br>
context&nbsp;.&nbsp;aliasClipping&nbsp;[&nbsp;=&nbsp;value&nbsp;]&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; Returns&nbsp;the&nbsp;current&nbsp;aliasing&nbsp;of&nbsp;the&nbsp;clipping&nbsp;region,&nbsp;as&nbsp;applied&nbsp;to&nbsp;rendering&nbsp;operations.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; Can&nbsp;be&nbsp;set,&nbsp;to&nbsp;change&nbsp;the&nbsp;aliasing&nbsp;value.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; If&nbsp;any&nbsp;of&nbsp;the&nbsp;arguments&nbsp;are&nbsp;not&nbsp;implemented,&nbsp;throws&nbsp;a&nbsp;NOT_SUPPORTED_ERR&nbsp;exception.&lt;br&gt;<br>
&lt;br&gt;<br>
CanvasRenderingContext2D.prototype.defineSetter(&#39;aliasClipping&#39;)&nbsp;{&nbsp;throw&nbsp;NOT_SUPPORTED_ERR;&nbsp;}&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
