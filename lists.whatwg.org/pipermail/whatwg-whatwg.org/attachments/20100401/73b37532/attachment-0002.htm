<tt>
How&nbsp;does&nbsp;the&nbsp;GC-initiated&nbsp;close()&nbsp;event&nbsp;work&nbsp;in&nbsp;Firefox,&nbsp;in&nbsp;the&nbsp;case&nbsp;of&nbsp;a&nbsp;fire-and-forget&nbsp;worker?&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;For&nbsp;example:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;foo.html:&lt;/div&gt;&lt;div&gt;&lt;script&gt;&lt;/div&gt;&lt;div&gt;new&nbsp;Worker(&quot;forget.js&quot;);&lt;/div&gt;<br>
&lt;div&gt;&lt;/script&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;forget.js:&lt;/div&gt;&lt;div&gt;self.setInterval(function()&nbsp;{&nbsp;...do&nbsp;something...},&nbsp;1000);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;this&nbsp;case,&nbsp;it&nbsp;seems&nbsp;incorrect&nbsp;to&nbsp;ever&nbsp;fire&nbsp;a&nbsp;close()&nbsp;event&nbsp;until&nbsp;the&nbsp;parent&nbsp;window&nbsp;leaves&nbsp;the&nbsp;bfcache. I&#39;m&nbsp;guessing&nbsp;you&nbsp;must&nbsp;do&nbsp;something&nbsp;to&nbsp;prevent&nbsp;the&nbsp;worker&nbsp;object&nbsp;from&nbsp;being&nbsp;GC&#39;d&nbsp;in&nbsp;the&nbsp;case&nbsp;that&nbsp;there&#39;s&nbsp;pending&nbsp;activity&nbsp;in&nbsp;the&nbsp;worker?&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-atw&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;Apr&nbsp;1,&nbsp;2010&nbsp;at&nbsp;3:31&nbsp;PM,&nbsp;Jonas&nbsp;Sicking&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;jonas@sicking.cc&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;On&nbsp;Wed,&nbsp;Mar&nbsp;31,&nbsp;2010&nbsp;at&nbsp;10:03&nbsp;AM,&nbsp;ben&nbsp;turner&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:bent.mozilla@gmail.com&quot;&gt;bent.mozilla@gmail.com&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;&gt;&nbsp;Hi,&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;When&nbsp;implementing&nbsp;the&nbsp;close()&nbsp;function&nbsp;for&nbsp;Firefox&nbsp;we&nbsp;chose&nbsp;to&nbsp;set&nbsp;the&lt;br&gt;<br>
&gt;&nbsp;closing&nbsp;flag&nbsp;and&nbsp;clear&nbsp;pending&nbsp;events&nbsp;only.&nbsp;As&nbsp;the&nbsp;worker&nbsp;script&nbsp;is&lt;br&gt;<br>
&gt;&nbsp;calling&nbsp;close()&nbsp;on&nbsp;itself&nbsp;we&nbsp;figured&nbsp;that&nbsp;the&nbsp;worker&nbsp;should&nbsp;retain&lt;br&gt;<br>
&gt;&nbsp;maximum&nbsp;functionality&nbsp;until&nbsp;it&nbsp;has&nbsp;finished&nbsp;execution&nbsp;(otherwise&nbsp;it&lt;br&gt;<br>
&gt;&nbsp;could&nbsp;just&nbsp;not&nbsp;call&nbsp;close()&nbsp;and&nbsp;rely&nbsp;on&nbsp;some&nbsp;kind&nbsp;of&nbsp;postMessage()&nbsp;and&lt;br&gt;<br>
&gt;&nbsp;terminate()&nbsp;combo).&nbsp;Therefore&nbsp;we&nbsp;do&nbsp;not&nbsp;enforce&nbsp;any&nbsp;timeout&nbsp;for&nbsp;the&lt;br&gt;<br>
&gt;&nbsp;currently&nbsp;executing&nbsp;script&nbsp;and&nbsp;we&nbsp;continue&nbsp;to&nbsp;allow&nbsp;postMessage()&lt;br&gt;<br>
&gt;&nbsp;calls&nbsp;and&nbsp;synchronous&nbsp;XHR&nbsp;to&nbsp;proceed.&nbsp;Since&nbsp;the&nbsp;closing&nbsp;flag&nbsp;is&nbsp;set&nbsp;in&lt;br&gt;<br>
&gt;&nbsp;response&nbsp;to&nbsp;close()&nbsp;the&nbsp;worker&nbsp;is&nbsp;guaranteed&nbsp;to&nbsp;finish&nbsp;as&nbsp;soon&nbsp;as&nbsp;the&lt;br&gt;<br>
&gt;&nbsp;currently&nbsp;running&nbsp;script&nbsp;finishes.&nbsp;We&nbsp;always&nbsp;enforce&nbsp;a&nbsp;timeout&nbsp;for&nbsp;any&lt;br&gt;<br>
&gt;&nbsp;code&nbsp;that&nbsp;runs&nbsp;in&nbsp;response&nbsp;to&nbsp;the&nbsp;close&nbsp;event&nbsp;that&nbsp;gets&nbsp;fired&nbsp;after&lt;br&gt;<br>
&gt;&nbsp;the&nbsp;current&nbsp;script&nbsp;finishes,&nbsp;though.&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;If&nbsp;the&nbsp;code&nbsp;that&nbsp;calls&nbsp;close()&nbsp;never&nbsp;returns&nbsp;(like&nbsp;the&nbsp;while(1)&nbsp;{&nbsp;}&lt;br&gt;<br>
&gt;&nbsp;example&nbsp;above)&nbsp;then&nbsp;the&nbsp;worker&nbsp;will&nbsp;never&nbsp;finish,&nbsp;as&nbsp;pointed&nbsp;out&lt;br&gt;<br>
&gt;&nbsp;above,&nbsp;but&nbsp;that&#39;s&nbsp;no&nbsp;different&nbsp;than&nbsp;having&nbsp;a&nbsp;worker&nbsp;script&nbsp;that&lt;br&gt;<br>
&gt;&nbsp;consists&nbsp;only&nbsp;of&nbsp;a&nbsp;while(1)&nbsp;{&nbsp;}&nbsp;loop&nbsp;and&nbsp;we&nbsp;don&#39;t&nbsp;think&nbsp;it&#39;s&nbsp;important&lt;br&gt;<br>
&gt;&nbsp;to&nbsp;prevent.&nbsp;If&nbsp;a&nbsp;worker&nbsp;script&nbsp;is&nbsp;written&nbsp;in&nbsp;this&nbsp;way&nbsp;then&nbsp;a&lt;br&gt;<br>
&gt;&nbsp;terminate()&nbsp;call&nbsp;is&nbsp;still&nbsp;a&nbsp;valid&nbsp;solution.&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;Also,&nbsp;since&nbsp;we&nbsp;try&nbsp;to&nbsp;retain&nbsp;maximum&nbsp;functionality&nbsp;after&nbsp;close()&nbsp;we&lt;br&gt;<br>
&gt;&nbsp;also&nbsp;allow&nbsp;errors&nbsp;to&nbsp;propagate&nbsp;as&nbsp;shown&nbsp;above.&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;If&nbsp;anyone&nbsp;is&nbsp;curious&nbsp;the&nbsp;basic&nbsp;strategy&nbsp;we&nbsp;use&nbsp;in&nbsp;response&nbsp;to&nbsp;close&lt;br&gt;<br>
&gt;&nbsp;functions&nbsp;(like&nbsp;close(),&nbsp;terminate(),&nbsp;and&nbsp;for&nbsp;UA-generated&nbsp;events&nbsp;like&lt;br&gt;<br>
&gt;&nbsp;when&nbsp;the&nbsp;main&nbsp;worker&nbsp;object&nbsp;is&nbsp;GC&#39;d)&nbsp;can&nbsp;be&nbsp;found&nbsp;in&nbsp;the&nbsp;following&lt;br&gt;<br>
&gt;&nbsp;table:&lt;br&gt;<br>
&gt;&lt;br&gt;<br>
&gt;&nbsp;&lt;a&nbsp;href=&quot;http://mxr.mozilla.org/mozilla-central/source/dom/src/threads/nsDOMWorker.h#202&quot;&nbsp;target=&quot;_blank&quot;&gt;http://mxr.mozilla.org/mozilla-central/source/dom/src/threads/nsDOMWorker.h#202&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;For&nbsp;what&nbsp;it&#39;s&nbsp;worth,&nbsp;I&nbsp;think&nbsp;the&nbsp;behavior&nbsp;that&nbsp;firefox&nbsp;has&nbsp;makes&nbsp;a&nbsp;lot&lt;br&gt;<br>
of&nbsp;sense&nbsp;and&nbsp;I&nbsp;think&nbsp;it&nbsp;should&nbsp;be&nbsp;mandated&nbsp;by&nbsp;the&nbsp;spec.&nbsp;(I&nbsp;know,&nbsp;big&lt;br&gt;<br>
shocker&nbsp;:)&nbsp;)&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;one&nbsp;thing&nbsp;that&nbsp;we&nbsp;do&nbsp;and&nbsp;that&nbsp;is&nbsp;somewhat&nbsp;iffy&nbsp;is&nbsp;the&nbsp;close&nbsp;event.&lt;br&gt;<br>
Ben&nbsp;actually&nbsp;gets&nbsp;it&nbsp;a&nbsp;bit&nbsp;wrong&nbsp;in&nbsp;the&nbsp;description&nbsp;above.&nbsp;This&nbsp;is&nbsp;how&lt;br&gt;<br>
it&nbsp;works:&lt;br&gt;<br>
&lt;br&gt;<br>
We&nbsp;fire&nbsp;the&nbsp;close&nbsp;event&nbsp;handler&nbsp;in&nbsp;four&nbsp;situations:&lt;br&gt;<br>
&lt;br&gt;<br>
*&nbsp;After&nbsp;close()&nbsp;is&nbsp;called&nbsp;by&nbsp;the&nbsp;worker,&nbsp;once&nbsp;it&nbsp;finishes&nbsp;its&nbsp;current&nbsp;execution.&lt;br&gt;<br>
*&nbsp;After&nbsp;terminate()&nbsp;is&nbsp;called&nbsp;from&nbsp;outside&nbsp;the&nbsp;worker&nbsp;and&nbsp;any&nbsp;code&lt;br&gt;<br>
running&nbsp;has&nbsp;been&nbsp;aborted.&lt;br&gt;<br>
*&nbsp;If&nbsp;the&nbsp;worker&nbsp;is&nbsp;garbage&nbsp;collected.&lt;br&gt;<br>
*&nbsp;Once&nbsp;the&nbsp;user&nbsp;leaves&nbsp;the&nbsp;page&nbsp;(or&nbsp;specifically,&nbsp;once&nbsp;the&nbsp;page&nbsp;falls&lt;br&gt;<br>
out&nbsp;of&nbsp;the&nbsp;bfcache).&lt;br&gt;<br>
&lt;br&gt;<br>
Only&nbsp;in&nbsp;the&nbsp;last&nbsp;case&nbsp;do&nbsp;we&nbsp;give&nbsp;the&nbsp;close&nbsp;handler&nbsp;a&nbsp;time&nbsp;limit,&nbsp;after&lt;br&gt;<br>
which&nbsp;any&nbsp;currently&nbsp;running&nbsp;close&nbsp;handler&nbsp;is&nbsp;aborted&nbsp;and&nbsp;no&nbsp;more&nbsp;close&lt;br&gt;<br>
handlers&nbsp;are&nbsp;run.&lt;br&gt;<br>
&lt;br&gt;<br>
Though&nbsp;of&nbsp;course&nbsp;the&nbsp;user&nbsp;can&nbsp;leave&nbsp;the&nbsp;page&nbsp;*while*&nbsp;the&nbsp;close&nbsp;event&lt;br&gt;<br>
is&nbsp;getting&nbsp;fired.&nbsp;If&nbsp;so,&nbsp;we&nbsp;start&nbsp;the&nbsp;time&nbsp;limit&nbsp;at&nbsp;that&nbsp;point.&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;iffy&nbsp;part&nbsp;is&nbsp;the&nbsp;third&nbsp;bullet&nbsp;above,&nbsp;since&nbsp;it&nbsp;exposes&nbsp;GC&nbsp;behavior.&lt;br&gt;<br>
This&nbsp;is&nbsp;very&nbsp;unfortunate&nbsp;indeed&nbsp;and&nbsp;because&nbsp;of&nbsp;it&nbsp;I&nbsp;feel&nbsp;that&nbsp;our&lt;br&gt;<br>
implementation&nbsp;is&nbsp;somewhat&nbsp;experimental.&lt;br&gt;<br>
&lt;br&gt;<br>
We&nbsp;could&nbsp;simply&nbsp;not&nbsp;fire&nbsp;the&nbsp;close&nbsp;event&nbsp;in&nbsp;that&nbsp;case,&nbsp;however&nbsp;this&lt;br&gt;<br>
would&nbsp;seem&nbsp;to&nbsp;reduce&nbsp;the&nbsp;usefulness&nbsp;of&nbsp;the&nbsp;close&nbsp;event&nbsp;quite&nbsp;a&nbsp;bit.&lt;br&gt;<br>
&lt;br&gt;<br>
So&nbsp;I&nbsp;think&nbsp;for&nbsp;now&nbsp;I&nbsp;don&#39;t&nbsp;care&nbsp;if&nbsp;the&nbsp;close&nbsp;event&nbsp;is&nbsp;put&nbsp;in&nbsp;the&nbsp;spec&lt;br&gt;<br>
or&nbsp;not.&nbsp;But&nbsp;I&nbsp;wanted&nbsp;to&nbsp;let&nbsp;you&nbsp;know&nbsp;what&nbsp;we&#39;re&nbsp;doing.&nbsp;We&nbsp;don&#39;t&lt;br&gt;<br>
currently&nbsp;have&nbsp;any&nbsp;plans&nbsp;to&nbsp;remove&nbsp;it.&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
/&nbsp;Jonas&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>

</tt>
