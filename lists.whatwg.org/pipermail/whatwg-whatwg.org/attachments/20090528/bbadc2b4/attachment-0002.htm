<tt>
Is&nbsp;your&nbsp;concern&nbsp;that&nbsp;an&nbsp;ill-behaved&nbsp;app&nbsp;could&nbsp;leak&nbsp;ports&nbsp;(since&nbsp;obviously&nbsp;an&nbsp;ill-behaved&nbsp;app&nbsp;could&nbsp;leak&nbsp;ports&nbsp;anyway&nbsp;just&nbsp;by&nbsp;stuffing&nbsp;them&nbsp;in&nbsp;some&nbsp;array),&nbsp;or&nbsp;is&nbsp;it&nbsp;that&nbsp;a&nbsp;well-behaved&nbsp;app&nbsp;can&#39;t&nbsp;release&nbsp;ports? Still&nbsp;need&nbsp;to&nbsp;review&nbsp;the&nbsp;new&nbsp;spec&nbsp;in&nbsp;detail,&nbsp;but&nbsp;from&nbsp;previous&nbsp;conversations&nbsp;I&#39;d&nbsp;assumed&nbsp;that&nbsp;calling&nbsp;MessagePort.close()&nbsp;on&nbsp;either&nbsp;end&nbsp;would&nbsp;allow&nbsp;the&nbsp;ports&nbsp;to&nbsp;be&nbsp;freed&nbsp;-&nbsp;perhaps&nbsp;we&nbsp;should&nbsp;clarify&nbsp;the&nbsp;language&nbsp;in&nbsp;the&nbsp;spec&nbsp;to&nbsp;state&nbsp;that&nbsp;the&nbsp;strong&nbsp;reference&nbsp;is&nbsp;only&nbsp;in&nbsp;place&nbsp;for&nbsp;*entangled*&nbsp;ports.&lt;div&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;alternative&nbsp;is&nbsp;to&nbsp;force&nbsp;applications&nbsp;to&nbsp;keep&nbsp;explicit&nbsp;references&nbsp;to&nbsp;all&nbsp;of&nbsp;their&nbsp;ports,&nbsp;which&nbsp;seems&nbsp;unwieldy&nbsp;and&nbsp;also&nbsp;worse&nbsp;given&nbsp;that&nbsp;there&#39;s&nbsp;now&nbsp;no&nbsp;way&nbsp;for&nbsp;applications&nbsp;to&nbsp;determine&nbsp;whether&nbsp;a&nbsp;given&nbsp;port&nbsp;is&nbsp;entangled&nbsp;or&nbsp;not&nbsp;(since&nbsp;.active&nbsp;exposes&nbsp;the&nbsp;behavior&nbsp;of&nbsp;the&nbsp;garbage&nbsp;collector).&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-atw&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;May&nbsp;28,&nbsp;2009&nbsp;at&nbsp;3:34&nbsp;AM,&nbsp;Maciej&nbsp;Stachowiak&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:mjs@apple.com&quot;&gt;mjs@apple.com&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
On&nbsp;May&nbsp;28,&nbsp;2009,&nbsp;at&nbsp;2:29&nbsp;AM,&nbsp;Ian&nbsp;Hickson&nbsp;wrote:&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
&lt;br&gt;<br>
I&nbsp;just&nbsp;checked&nbsp;in&nbsp;a&nbsp;substantial&nbsp;change&nbsp;to&nbsp;the&nbsp;lifetime&nbsp;model&nbsp;for&nbsp;workers.&lt;br&gt;<br>
Instead&nbsp;of&nbsp;being&nbsp;bound&nbsp;to&nbsp;their&nbsp;ports,&nbsp;which&nbsp;became&nbsp;especially&nbsp;hard&nbsp;to&lt;br&gt;<br>
implement&nbsp;for&nbsp;shared&nbsp;workers,&nbsp;they&nbsp;now&nbsp;just&nbsp;live&nbsp;as&nbsp;long&nbsp;as&nbsp;the&nbsp;Document&lt;br&gt;<br>
that&nbsp;created&nbsp;them&nbsp;(all&nbsp;of&nbsp;the&nbsp;Documents&nbsp;that&nbsp;obtained&nbsp;them,&nbsp;for&nbsp;shared&lt;br&gt;<br>
workers),&nbsp;with&nbsp;this&nbsp;ownership&nbsp;inheriting&nbsp;to&nbsp;nested&nbsp;workers.&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;also&nbsp;removed&nbsp;the&nbsp;various&nbsp;ways&nbsp;to&nbsp;observe&nbsp;the&nbsp;lifetime,&nbsp;namely&nbsp;.active&lt;br&gt;<br>
and&nbsp;the&nbsp;&#39;close&#39;&nbsp;events.&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;hope&nbsp;this&nbsp;will&nbsp;make&nbsp;the&nbsp;shared&nbsp;workers&nbsp;easier&nbsp;to&nbsp;implement.&nbsp;Please&nbsp;let&lt;br&gt;<br>
me&nbsp;know&nbsp;if&nbsp;this&nbsp;screws&nbsp;anything&nbsp;up&nbsp;for&nbsp;dedicated&nbsp;workers.&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;/div&gt;<br>
I&#39;m&nbsp;assuming&nbsp;this&nbsp;is&nbsp;one&nbsp;of&nbsp;the&nbsp;changes:&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
User&nbsp;agents&nbsp;must&nbsp;either&nbsp;act&nbsp;as&nbsp;if&nbsp;MessagePort&nbsp;objects&nbsp;have&nbsp;a&nbsp;strong&nbsp;reference&nbsp;to&nbsp;their&nbsp;entangled&nbsp;MessagePort&nbsp;object&nbsp;or&nbsp;as&nbsp;if&nbsp;each&nbsp;MessagePort&nbsp;object&#39;s&nbsp;owner&nbsp;has&nbsp;a&nbsp;strong&nbsp;reference&nbsp;to&nbsp;the&nbsp;MessagePort&nbsp;object.&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
It&nbsp;seems&nbsp;to&nbsp;me&nbsp;the&nbsp;second&nbsp;alternative&nbsp;prevents&nbsp;MessagePorts&nbsp;created&nbsp;by&nbsp;a&nbsp;Window&nbsp;from&nbsp;ever&nbsp;being&nbsp;garbage&nbsp;collected&nbsp;until&nbsp;the&nbsp;user&nbsp;leaves&nbsp;the&nbsp;page.&nbsp;Is&nbsp;that&nbsp;a&nbsp;correct&nbsp;understanding?&nbsp;If&nbsp;so,&nbsp;that&nbsp;seems&nbsp;like&nbsp;it&nbsp;could&nbsp;create&nbsp;unbounded&nbsp;memory&nbsp;leaks&nbsp;in&nbsp;long-running&nbsp;Web&nbsp;applications&nbsp;that&nbsp;use&nbsp;MessagePorts,&nbsp;even&nbsp;if&nbsp;all&nbsp;references&nbsp;to&nbsp;both&nbsp;endpoints&nbsp;of&nbsp;the&nbsp;MessageChannel&nbsp;are&nbsp;dropped.&nbsp;That&nbsp;seems&nbsp;unacceptable&nbsp;to&nbsp;me,&nbsp;unless&nbsp;I&nbsp;misunderstood.&lt;br&gt;<br>
<br>
&lt;br&gt;<br>
Regards,&lt;br&gt;&lt;font&nbsp;color=&quot;#888888&quot;&gt;<br>
Maciej&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
