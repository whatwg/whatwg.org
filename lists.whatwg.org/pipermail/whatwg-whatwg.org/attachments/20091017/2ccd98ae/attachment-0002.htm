<tt>
This&nbsp;feels&nbsp;like&nbsp;really&nbsp;nice&nbsp;sugar,&nbsp;but&nbsp;maybe&nbsp;the&nbsp;first&nbsp;step&nbsp;should&nbsp;be&nbsp;to&nbsp;get&nbsp;the&nbsp;shim&nbsp;out&nbsp;that&nbsp;gets&nbsp;it&nbsp;working&nbsp;using&nbsp;JS&nbsp;now....&nbsp;and&nbsp;then&nbsp;see&nbsp;how&nbsp;it&nbsp;works&nbsp;in&nbsp;practice.&nbsp;I&nbsp;totally&nbsp;understand&nbsp;why&nbsp;this&nbsp;looks&nbsp;exciting,&nbsp;but&nbsp;I&nbsp;have&nbsp;the&nbsp;same&nbsp;uneasiness&nbsp;as&nbsp;Jonas.&nbsp; It&nbsp;feels&nbsp;like&nbsp;a&nbsp;LOT&nbsp;of&nbsp;magic&nbsp;to&nbsp;go&nbsp;grab&nbsp;a&nbsp;page&nbsp;and&nbsp;grab&nbsp;out&nbsp;the&nbsp;id&nbsp;and&nbsp;.....&nbsp;and&nbsp;I&nbsp;am&nbsp;sure&nbsp;there&nbsp;are&nbsp;edges.&nbsp;Cool&nbsp;idea&nbsp;for&nbsp;sure!&nbsp;It&nbsp;also&nbsp;feels&nbsp;like&nbsp;this&nbsp;should&nbsp;work&nbsp;nicely&nbsp;with&nbsp;the&nbsp;history/state&nbsp;work&nbsp;that&nbsp;already&nbsp;exists.&lt;br&gt;<br>
&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Sat,&nbsp;Oct&nbsp;17,&nbsp;2009&nbsp;at&nbsp;9:57&nbsp;AM,&nbsp;Markus&nbsp;Ernst&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:derernst@gmx.ch&quot;&gt;derernst@gmx.ch&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
Tab&nbsp;Atkins&nbsp;Jr.&nbsp;schrieb:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
On&nbsp;Sat,&nbsp;Oct&nbsp;17,&nbsp;2009&nbsp;at&nbsp;12:22&nbsp;AM,&nbsp;Jonas&nbsp;Sicking&nbsp;&lt;jonas@sicking.cc&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
Also,&nbsp;what&nbsp;should&nbsp;happen&nbsp;if&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;&#39;back&#39;&nbsp;button?&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
If&nbsp;the&nbsp;browser&nbsp;can&nbsp;remember&nbsp;what&nbsp;the&nbsp;page&nbsp;state&nbsp;was&nbsp;previously,&nbsp;just&lt;br&gt;<br>
swap&nbsp;in&nbsp;the&nbsp;old&nbsp;parts.&nbsp; If&nbsp;not,&nbsp;but&nbsp;it&nbsp;at&nbsp;least&nbsp;remembers&nbsp;what&nbsp;parts&lt;br&gt;<br>
were&nbsp;replaced,&nbsp;make&nbsp;a&nbsp;fresh&nbsp;request&nbsp;for&nbsp;the&nbsp;previous&nbsp;page&nbsp;and&lt;br&gt;<br>
substitute&nbsp;in&nbsp;just&nbsp;those&nbsp;bits.&nbsp; If&nbsp;it&nbsp;can&#39;t&nbsp;remember&nbsp;anything,&nbsp;just&nbsp;do&lt;br&gt;<br>
an&nbsp;ordinary&nbsp;navigation&nbsp;with&nbsp;a&nbsp;full&nbsp;page&nbsp;swap.&lt;br&gt;<br>
&lt;br&gt;<br>
It&nbsp;should&nbsp;act&nbsp;as&nbsp;exactly&nbsp;like&nbsp;current&nbsp;Back&nbsp;behavior&nbsp;as&nbsp;possible.&lt;br&gt;<br>
We&#39;re&nbsp;not&nbsp;really&nbsp;playing&nbsp;with&nbsp;the&nbsp;semantics&nbsp;of&nbsp;navigation,&nbsp;so&nbsp;that&lt;br&gt;<br>
shouldn&#39;t&nbsp;be&nbsp;difficult.&lt;br&gt;<br>
&lt;/div&gt;&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
I&nbsp;agree&nbsp;to&nbsp;that.&nbsp;I&nbsp;click&nbsp;a&nbsp;link&nbsp;on&nbsp;a&nbsp;page&nbsp;with&nbsp;an&nbsp;URI,&nbsp;and&nbsp;after&nbsp;clicking&nbsp;I&nbsp;get&nbsp;a&nbsp;new&nbsp;page&nbsp;with&nbsp;another&nbsp;URI&nbsp;-&nbsp;so&nbsp;if&nbsp;I&nbsp;hit&nbsp;the&nbsp;back&nbsp;button,&nbsp;I&nbsp;expect&nbsp;getting&nbsp;back&nbsp;the&nbsp;page&nbsp;I&nbsp;had&nbsp;seen&nbsp;before&nbsp;clicking&nbsp;the&nbsp;link.&nbsp;(Of&nbsp;course&nbsp;with&nbsp;the&nbsp;browser-specific&nbsp;peculiarities&nbsp;-&nbsp;Firefox&nbsp;e.g.&nbsp;remembers&nbsp;the&nbsp;scroll&nbsp;position,&nbsp;others&nbsp;may&nbsp;not...)&nbsp;The&nbsp;user&nbsp;experience&nbsp;when&nbsp;using&nbsp;the&nbsp;back&nbsp;button&nbsp;should&nbsp;not&nbsp;differ&nbsp;whether&nbsp;a&nbsp;browser&nbsp;supports&nbsp;@onlyreplace&nbsp;or&nbsp;not.&lt;br&gt;<br>
<br>
&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
On&nbsp;Sat,&nbsp;Oct&nbsp;17,&nbsp;2009&nbsp;at&nbsp;3:53&nbsp;AM,&nbsp;Gregory&nbsp;Maxwell&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:gmaxwell@gmail.com&quot;&nbsp;target=&quot;_blank&quot;&gt;gmaxwell@gmail.com&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
I&#39;m&nbsp;guessing&nbsp;that&nbsp;the&nbsp;rare&nbsp;case&nbsp;where&nbsp;you&nbsp;need&nbsp;to&nbsp;write&nbsp;into&nbsp;a&lt;br&gt;<br>
replaced&nbsp;ID&nbsp;you&nbsp;can&nbsp;simply&nbsp;have&nbsp;a&nbsp;JS&nbsp;hook&nbsp;that&nbsp;fires&nbsp;on&nbsp;the&nbsp;load&nbsp;and&lt;br&gt;<br>
fixes&nbsp;up&nbsp;the&nbsp;replaced&nbsp;sections&nbsp;as&nbsp;needed.&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
The&nbsp;functioning&nbsp;of&nbsp;load&nbsp;events&nbsp;here&nbsp;confuses&nbsp;me&nbsp;a&nbsp;bit,&nbsp;because&nbsp;I&#39;ve&lt;br&gt;<br>
never&nbsp;done&nbsp;any&nbsp;hacking&nbsp;in&nbsp;that&nbsp;area&nbsp;and&nbsp;so&nbsp;don&#39;t&nbsp;understand&nbsp;the&lt;br&gt;<br>
mechanics&nbsp;well&nbsp;enough&nbsp;to&nbsp;know&nbsp;what&#39;s&nbsp;reasonable.&nbsp; Should&nbsp;the&nbsp;new&nbsp;page&lt;br&gt;<br>
still&nbsp;fire&nbsp;a&nbsp;load&nbsp;event&nbsp;once&nbsp;its&nbsp;replaceable&nbsp;content&nbsp;has&nbsp;loaded?&nbsp; I&#39;m&lt;br&gt;<br>
guessing&nbsp;that&nbsp;the&nbsp;old&nbsp;page&nbsp;never&nbsp;fires&nbsp;an&nbsp;unload&nbsp;event?&nbsp; I&nbsp;really&lt;br&gt;<br>
don&#39;t&nbsp;know&nbsp;what&nbsp;should&nbsp;happen&nbsp;in&nbsp;this&nbsp;area.&lt;br&gt;<br>
&lt;br&gt;<br>
(After&nbsp;giving&nbsp;it&nbsp;a&nbsp;little&nbsp;thought,&nbsp;though,&nbsp;I&nbsp;think&nbsp;we&nbsp;shouldn&#39;t&nbsp;change&lt;br&gt;<br>
the&nbsp;semantics&nbsp;of&nbsp;load/unload/etc.&nbsp; These&nbsp;are&nbsp;still&nbsp;useful,&nbsp;after&nbsp;all,&lt;br&gt;<br>
for&nbsp;when&nbsp;the&nbsp;page&nbsp;*is*&nbsp;completely&nbsp;unloaded&nbsp;or&nbsp;loaded,&nbsp;such&nbsp;as&nbsp;on&nbsp;first&lt;br&gt;<br>
visit&nbsp;or&nbsp;when&nbsp;the&nbsp;user&nbsp;hits&nbsp;Refresh.&nbsp; We&#39;d&nbsp;probably&nbsp;want&nbsp;a&nbsp;new&nbsp;set&nbsp;of&lt;br&gt;<br>
events&nbsp;that&nbsp;fire&nbsp;at&nbsp;the&nbsp;elements&nbsp;being&nbsp;swapped&nbsp;out,&nbsp;and&nbsp;then&nbsp;at&nbsp;the&lt;br&gt;<br>
new&nbsp;elements&nbsp;once&nbsp;they&#39;ve&nbsp;been&nbsp;pushed&nbsp;in.)&lt;br&gt;<br>
&lt;/div&gt;&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
I&nbsp;admit&nbsp;I&nbsp;don&#39;t&nbsp;fully&nbsp;understand&nbsp;load&nbsp;events&nbsp;either.&nbsp;If&nbsp;I&nbsp;get&nbsp;it&nbsp;correctly,&nbsp;this&nbsp;is&nbsp;about&nbsp;functions&nbsp;called&nbsp;on&nbsp;load,&nbsp;that&nbsp;access&nbsp;elements&nbsp;in&nbsp;the&nbsp;replaceable&nbsp;parts&nbsp;of&nbsp;the&nbsp;page.&nbsp;A&nbsp;common&nbsp;use&nbsp;case&nbsp;for&nbsp;this&nbsp;is&nbsp;setting&nbsp;the&nbsp;focus&nbsp;on&nbsp;the&nbsp;first&nbsp;input&nbsp;element&nbsp;of&nbsp;a&nbsp;form.&nbsp;I&nbsp;don&#39;t&nbsp;think&nbsp;that&nbsp;this&nbsp;can&nbsp;be&nbsp;solved&nbsp;at&nbsp;the&nbsp;UA&nbsp;side,&nbsp;some&nbsp;authoring&nbsp;will&nbsp;be&nbsp;necessary;&nbsp;some&nbsp;possible&nbsp;workarounds&nbsp;are:&lt;br&gt;<br>
<br>
-&nbsp;Put&nbsp;page-specific&nbsp;scripts&nbsp;into&nbsp;a&nbsp;separate&nbsp;&lt;script&gt;&nbsp;element&nbsp;with&nbsp;an&nbsp;id,&nbsp;and&nbsp;include&nbsp;it&nbsp;in&nbsp;the&nbsp;@onlyreplace&nbsp;list;&lt;br&gt;<br>
-&nbsp;make&nbsp;one&nbsp;script&nbsp;that&nbsp;fits&nbsp;for&nbsp;all&nbsp;pages,&nbsp;by&nbsp;checking&nbsp;if&nbsp;an&nbsp;element&nbsp;exists&nbsp;before&nbsp;doing&nbsp;actions&nbsp;on&nbsp;it;&lt;br&gt;<br>
-&nbsp;instead&nbsp;of&nbsp;using&nbsp;&lt;body&nbsp;onLoad=&quot;foo()&quot;&gt;,&nbsp;put&nbsp;the&nbsp;function&nbsp;call&nbsp;into&nbsp;a&nbsp;&lt;script&gt;&nbsp;element&nbsp;at&nbsp;the&nbsp;bottom&nbsp;of&nbsp;the&nbsp;replaceable&nbsp;element.&lt;br&gt;<br>
&lt;br&gt;<br>
Anyway&nbsp;such&nbsp;things&nbsp;would&nbsp;be&nbsp;much&nbsp;easier&nbsp;(with&nbsp;or&nbsp;without&nbsp;@onlyreplace)&nbsp;if&nbsp;the&nbsp;onLoad&nbsp;event&nbsp;handler&nbsp;would&nbsp;be&nbsp;allowed&nbsp;on&nbsp;every&nbsp;HTML&nbsp;element&nbsp;rather&nbsp;than&nbsp;on&nbsp;window&nbsp;and&nbsp;body&nbsp;only:&lt;br&gt;<br>
&lt;input&nbsp;type=&quot;text&quot;&nbsp;name=&quot;Name&quot;&nbsp;onLoad=&quot;this.focus()&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
But&nbsp;this&nbsp;looks&nbsp;that&nbsp;trivial&nbsp;to&nbsp;me&nbsp;-&nbsp;element.onLoad&nbsp;must&nbsp;have&nbsp;been&nbsp;suggested&nbsp;long&nbsp;ago&nbsp;and&nbsp;been&nbsp;declined&nbsp;for&nbsp;good&nbsp;reasons,&nbsp;I&nbsp;assume?&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
