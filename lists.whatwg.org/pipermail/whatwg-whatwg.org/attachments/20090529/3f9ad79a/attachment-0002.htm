<tt>
&lt;html&gt;&lt;body&nbsp;style=&quot;word-wrap:&nbsp;break-word;&nbsp;-webkit-nbsp-mode:&nbsp;space;&nbsp;-webkit-line-break:&nbsp;after-white-space;&nbsp;&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;On&nbsp;May&nbsp;29,&nbsp;2009,&nbsp;at&nbsp;11:29&nbsp;AM,&nbsp;Drew&nbsp;Wilson&nbsp;wrote:&lt;/div&gt;&lt;br&nbsp;class=&quot;Apple-interchange-newline&quot;&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;May&nbsp;28,&nbsp;2009&nbsp;at&nbsp;7:47&nbsp;PM,&nbsp;Maciej&nbsp;Stachowiak&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:mjs@apple.com&quot;&gt;mjs@apple.com&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;&nbsp;&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;&nbsp;On&nbsp;May&nbsp;28,&nbsp;2009,&nbsp;at&nbsp;5:17&nbsp;PM,&nbsp;Ian&nbsp;Hickson&nbsp;wrote:&lt;br&gt;&nbsp;&lt;br&gt;&nbsp;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&nbsp;On&nbsp;Thu,&nbsp;28&nbsp;May&nbsp;2009,&nbsp;Maciej&nbsp;Stachowiak&nbsp;wrote:&lt;br&gt;&nbsp;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&nbsp;On&nbsp;May&nbsp;28,&nbsp;2009,&nbsp;at&nbsp;1:08&nbsp;PM,&nbsp;Ian&nbsp;Hickson&nbsp;wrote:&lt;br&gt;&nbsp;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&nbsp;On&nbsp;Thu,&nbsp;28&nbsp;May&nbsp;2009,&nbsp;Maciej&nbsp;Stachowiak&nbsp;wrote:&lt;br&gt;&nbsp;&lt;br&gt;&nbsp;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&nbsp;If&nbsp;so,&nbsp;that&nbsp;seems&nbsp;like&nbsp;it&nbsp;could&nbsp;create&nbsp;unbounded&nbsp;memory&nbsp;leaks&nbsp;in&lt;br&gt;&nbsp;long-running&nbsp;Web&nbsp;applications&nbsp;that&nbsp;use&nbsp;MessagePorts,&nbsp;even&nbsp;if&nbsp;all&lt;br&gt;&nbsp;references&nbsp;to&nbsp;both&nbsp;endpoints&nbsp;of&nbsp;the&nbsp;MessageChannel&nbsp;are&nbsp;dropped.&nbsp;That&lt;br&gt;&nbsp;seems&nbsp;unacceptable&nbsp;to&nbsp;me,&nbsp;unless&nbsp;I&nbsp;misunderstood.&lt;br&gt;&nbsp;&lt;/blockquote&gt;&nbsp;&lt;br&gt;&nbsp;The&nbsp;requirement&nbsp;is&nbsp;actually&nbsp;indistinguishable&nbsp;from&nbsp;the&nbsp;UA&nbsp;using&nbsp;the&lt;br&gt;&nbsp;other&nbsp;alternative&nbsp;and&nbsp;just&nbsp;having&nbsp;a&nbsp;really&nbsp;slow&nbsp;garbage&nbsp;collector&nbsp;that&lt;br&gt;&nbsp;only&nbsp;runs&nbsp;at&nbsp;page-closing&nbsp;time.&lt;br&gt;&nbsp;&lt;/blockquote&gt;&nbsp;&lt;br&gt;&nbsp;So&nbsp;it's&nbsp;exactly&nbsp;equivalent&nbsp;to&nbsp;the&nbsp;old&nbsp;requirement,&nbsp;except&nbsp;the&nbsp;spec&nbsp;now&lt;br&gt;&nbsp;specifically&nbsp;points&nbsp;out&nbsp;that&nbsp;you&nbsp;can&nbsp;just&nbsp;leak&nbsp;forever&nbsp;instead.&nbsp;I&nbsp;don't&lt;br&gt;&nbsp;think&nbsp;that&nbsp;addresses&nbsp;the&nbsp;original&nbsp;concern&nbsp;at&nbsp;all.&lt;br&gt;&nbsp;&lt;/blockquote&gt;&nbsp;&lt;br&gt;&nbsp;I've&nbsp;tweaked&nbsp;the&nbsp;text&nbsp;some&nbsp;to&nbsp;make&nbsp;it&nbsp;clear&nbsp;that&nbsp;once&nbsp;the&nbsp;port&nbsp;is&nbsp;not&lt;br&gt;&nbsp;entangled,&nbsp;it&nbsp;doesn't&nbsp;continue&nbsp;being&nbsp;protected&nbsp;in&nbsp;this&nbsp;way.&lt;br&gt;&nbsp;&lt;/blockquote&gt;&nbsp;&lt;br&gt;&lt;/div&gt;&nbsp;The&nbsp;new&nbsp;text&nbsp;seems&nbsp;to&nbsp;be&nbsp;this:&lt;br&gt;&nbsp;&lt;br&gt;&nbsp;&quot;When&nbsp;a&nbsp;MessagePort&nbsp;object&nbsp;is&nbsp;entangled,&nbsp;user&nbsp;agents&nbsp;must&nbsp;either&nbsp;act&nbsp;as&nbsp;if&nbsp;the&nbsp;object&nbsp;has&nbsp;a&nbsp;strong&nbsp;reference&nbsp;to&nbsp;its&nbsp;entangledMessagePort&nbsp;object,&nbsp;or&nbsp;as&nbsp;if&nbsp;the&nbsp;MessagePort&nbsp;object's&nbsp;owner&nbsp;has&nbsp;a&nbsp;strong&nbsp;reference&nbsp;to&nbsp;the&nbsp;MessagePort&nbsp;object&quot;&lt;br&gt;&nbsp;&lt;br&gt;&nbsp;It&nbsp;seems&nbsp;to&nbsp;me&nbsp;this&nbsp;allows&nbsp;the&nbsp;following&nbsp;case:&nbsp;two&nbsp;message&nbsp;ports&nbsp;A&nbsp;and&nbsp;B&nbsp;are&nbsp;entangled.&nbsp;A&nbsp;is&nbsp;treated&nbsp;as&nbsp;having&nbsp;a&nbsp;strong&nbsp;reference&nbsp;to&nbsp;B,&nbsp;but&nbsp;is&nbsp;not&nbsp;treated&nbsp;as&nbsp;if&nbsp;its&nbsp;owner&nbsp;has&nbsp;a&nbsp;strong&nbsp;reference&nbsp;to&nbsp;it.&nbsp;However,&nbsp;B&nbsp;is&nbsp;not&nbsp;treated&nbsp;as&nbsp;having&nbsp;a&nbsp;strong&nbsp;reference&nbsp;to&nbsp;A,&nbsp;but&nbsp;is&nbsp;treated&nbsp;as&nbsp;if&nbsp;its&nbsp;owner&nbsp;has&nbsp;a&nbsp;strong&nbsp;reference&nbsp;to&nbsp;it.&nbsp;Is&nbsp;that&nbsp;intended?&nbsp;I&nbsp;think&nbsp;this&nbsp;behavior&nbsp;would&nbsp;be&nbsp;practically&nbsp;implementable&nbsp;and&nbsp;quite&nbsp;useful&nbsp;in&nbsp;many&nbsp;cases,&nbsp;even&nbsp;though&nbsp;it&nbsp;is&nbsp;asymmetric.&nbsp;But&nbsp;I&nbsp;am&nbsp;not&nbsp;sure&nbsp;if&nbsp;the&nbsp;text&nbsp;intended&nbsp;to&nbsp;allow&nbsp;it.&lt;/blockquote&gt;&nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Can&nbsp;you&nbsp;elaborate&nbsp;on&nbsp;this&nbsp;a&nbsp;bit?&nbsp;Where&nbsp;would&nbsp;this&nbsp;asymmetric&nbsp;behavior&nbsp;be&nbsp;useful?&nbsp;It&nbsp;seems&nbsp;like&nbsp;in&nbsp;the&nbsp;specific&nbsp;case&nbsp;you&nbsp;cite,&nbsp;B&nbsp;would&nbsp;be&nbsp;doubly-referenced,&nbsp;while&nbsp;A&nbsp;would&nbsp;be&nbsp;unreferenced.&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Ian&nbsp;clarified&nbsp;on&nbsp;IRC&nbsp;that&nbsp;he&nbsp;didn't&nbsp;mean&nbsp;to&nbsp;allow&nbsp;it.&nbsp;The&nbsp;reason&nbsp;it&nbsp;would&nbsp;be&nbsp;useful&nbsp;is&nbsp;that&nbsp;it&nbsp;would&nbsp;allow&nbsp;A&nbsp;to&nbsp;be&nbsp;garbage&nbsp;collected&nbsp;as&nbsp;soon&nbsp;as&nbsp;it&nbsp;has&nbsp;no&nbsp;references,&nbsp;at&nbsp;which&nbsp;point&nbsp;it&nbsp;can&nbsp;notify&nbsp;B&nbsp;that&nbsp;it's&nbsp;gone,&nbsp;and&nbsp;then&nbsp;B&nbsp;can&nbsp;switch&nbsp;rules,&nbsp;and&nbsp;itself&nbsp;be&nbsp;garbage&nbsp;collected&nbsp;once&nbsp;it&nbsp;has&nbsp;no&nbsp;references.&nbsp;It&nbsp;would&nbsp;prevent&nbsp;memory&nbsp;leaks&nbsp;but&nbsp;would&nbsp;not&nbsp;provide&nbsp;meaningful&nbsp;limits&nbsp;on&nbsp;nondeterminism.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Regards,&lt;/div&gt;&lt;div&gt;Maciej&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;P.S.&nbsp;In&nbsp;case&nbsp;anyone&nbsp;doubts&nbsp;that&nbsp;distributed&nbsp;GC&nbsp;is&nbsp;hard&nbsp;(as&nbsp;apparently&nbsp;Ian&nbsp;did&nbsp;until&nbsp;yesterday),&nbsp;here&nbsp;is&nbsp;a&nbsp;clarifying&nbsp;example.&nbsp;It&nbsp;might&nbsp;seem&nbsp;simple&nbsp;to&nbsp;come&nbsp;up&nbsp;with&nbsp;a&nbsp;protocol&nbsp;for&nbsp;two&nbsp;MessagePorts&nbsp;to&nbsp;tell&nbsp;each&nbsp;other&nbsp;when&nbsp;they&nbsp;are&nbsp;otherwise&nbsp;unreferenced&nbsp;by&nbsp;anything&nbsp;in&nbsp;their&nbsp;own&nbsp;heap&nbsp;with&nbsp;minimal&nbsp;GC&nbsp;hooks.&nbsp;But&nbsp;suppose&nbsp;you&nbsp;have&nbsp;Workers&nbsp;A&nbsp;and&nbsp;B,&nbsp;and&nbsp;Window&nbsp;W,&nbsp;and&nbsp;a&nbsp;MessageChannel&nbsp;connecting&nbsp;each&nbsp;pair.&nbsp;The&nbsp;MessagePorts&nbsp;are&nbsp;AB-A&nbsp;(the&nbsp;endpoint&nbsp;of&nbsp;the&nbsp;AB&nbsp;channel&nbsp;in&nbsp;A),&nbsp;AB-B,&nbsp;AW-A,&nbsp;AW-W,&nbsp;BW-B,&nbsp;BW-W.&nbsp;Now&nbsp;suppose&nbsp;that&nbsp;the&nbsp;two&nbsp;MessagePorts&nbsp;in&nbsp;each&nbsp;global&nbsp;context&nbsp;indirectly&nbsp;reference&nbsp;each&nbsp;other&nbsp;(so&nbsp;AB-A&nbsp;has&nbsp;a&nbsp;reference&nbsp;to&nbsp;AW-W&nbsp;and&nbsp;vice&nbsp;vera&nbsp;and&nbsp;so&nbsp;forth).&nbsp;It's&nbsp;quite&nbsp;hard&nbsp;to&nbsp;come&nbsp;up&nbsp;with&nbsp;a&nbsp;protocol&nbsp;that&nbsp;will&nbsp;let&nbsp;all&nbsp;six&nbsp;MessagePorts&nbsp;know&nbsp;that&nbsp;they&nbsp;have&nbsp;no&nbsp;references&nbsp;besides&nbsp;each&nbsp;other&nbsp;and&nbsp;thus&nbsp;may&nbsp;be&nbsp;garbage&nbsp;collected.&nbsp;Note&nbsp;that&nbsp;this&nbsp;example&nbsp;can&nbsp;easily&nbsp;arise&nbsp;in&nbsp;practice,&nbsp;for&nbsp;example&nbsp;if&nbsp;the&nbsp;onmessage&nbsp;listeners&nbsp;for&nbsp;each&nbsp;message&nbsp;port&nbsp;are&nbsp;closures&nbsp;with&nbsp;both&nbsp;the&nbsp;relevant&nbsp;ports&nbsp;in&nbsp;scope.&nbsp;Note&nbsp;also&nbsp;that&nbsp;distributed&nbsp;GC&nbsp;among&nbsp;3&nbsp;heaps&nbsp;is&nbsp;still&nbsp;a&nbsp;much&nbsp;simpler&nbsp;special&nbsp;case&nbsp;than&nbsp;the&nbsp;fully&nbsp;general&nbsp;case&nbsp;of&nbsp;N&nbsp;heaps.&nbsp;In&nbsp;practice,&nbsp;this&nbsp;means&nbsp;that&nbsp;any&nbsp;implementation&nbsp;with&nbsp;split&nbsp;heaps&nbsp;(which&nbsp;likely&nbsp;will&nbsp;include&nbsp;all&nbsp;multiprocess&nbsp;implementations)&nbsp;has&nbsp;to&nbsp;take&nbsp;the&nbsp;more&nbsp;conservative&nbsp;lifetime&nbsp;rule,&nbsp;tying&nbsp;to&nbsp;the&nbsp;owner.&nbsp;So&nbsp;in&nbsp;practice,&nbsp;the&nbsp;only&nbsp;way&nbsp;to&nbsp;reliably&nbsp;free&nbsp;the&nbsp;resources&nbsp;associated&nbsp;with&nbsp;a&nbsp;MessagePort&nbsp;will&nbsp;be&nbsp;to&nbsp;.close()&nbsp;it.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;
</tt>
