<tt>
In&nbsp;this&nbsp;email&nbsp;I&nbsp;sketch&nbsp;my&nbsp;personal&nbsp;view&nbsp;on&nbsp;the&nbsp;future&nbsp;of&nbsp;HTML,&nbsp;I&nbsp;do&nbsp;not&lt;br&gt;claim&nbsp;I&nbsp;have&nbsp;invented&nbsp;a&nbsp;solution&nbsp;to&nbsp;all&nbsp;security&nbsp;issues&nbsp;on&nbsp;the&nbsp;web;&nbsp;I&nbsp;merely&nbsp;&lt;br&gt;hope&nbsp;that&nbsp;this&nbsp;email&nbsp;will&nbsp;be&nbsp;the&nbsp;starting&nbsp;point&nbsp;of&nbsp;a&nbsp;real&nbsp;discussion&nbsp;on&nbsp;web-<br>
&lt;br&gt;security&nbsp;instead&nbsp;of&nbsp;browser&nbsp;security.&nbsp;Since&nbsp;this&nbsp;is&nbsp;my&nbsp;first&nbsp;email&nbsp;to&nbsp;any&nbsp;of&lt;br&gt;these&nbsp;mailinglists,&nbsp;please&nbsp;correct&nbsp;me&nbsp;if&nbsp;I&nbsp;sent&nbsp;this&nbsp;to&nbsp;the&nbsp;wrong&nbsp;one.&lt;br&gt;&lt;br&gt;&lt;br&gt;The&nbsp;current&nbsp;design&nbsp;of&nbsp;the&nbsp;integration&nbsp;of&nbsp;JS&nbsp;and&nbsp;HTML&nbsp;is&nbsp;fundamentally&nbsp;flawed.&nbsp;<br>
&lt;br&gt;One&nbsp;of&nbsp;the&nbsp;major&nbsp;issues&nbsp;which&nbsp;should&nbsp;be&nbsp;learned&nbsp;from&nbsp;a&nbsp;long&nbsp;history&nbsp;of&nbsp;buffer&nbsp;&lt;br&gt;overflows&nbsp;etc&nbsp;is&nbsp;that&nbsp;one&nbsp;should&nbsp;never&nbsp;mix&nbsp;up&nbsp;data&nbsp;and&nbsp;code.&lt;br&gt;The&nbsp;consequences&nbsp;of&nbsp;this&nbsp;design&nbsp;flaw&nbsp;show&nbsp;itself&nbsp;by&nbsp;the&nbsp;XSS-exploits&nbsp;reported&nbsp;<br>
&lt;br&gt;on&nbsp;a&nbsp;daily&nbsp;basis.&nbsp;In&nbsp;my&nbsp;view&nbsp;the&nbsp;browser/standards&nbsp;developers&nbsp;can&nbsp;do&nbsp;2&nbsp;things:&lt;br&gt;&nbsp;&nbsp;-&nbsp;They&nbsp;can&nbsp;ignore&nbsp;it&nbsp;and&nbsp;state&nbsp;that&nbsp;it&nbsp;is&nbsp;a&nbsp;problem&nbsp;of&nbsp;the&nbsp;web-developers&lt;br&gt;&nbsp;&nbsp;-&nbsp;They&nbsp;can&nbsp;fix&nbsp;it&nbsp;in&nbsp;a&nbsp;similar&nbsp;manner&nbsp;the&nbsp;&quot;No&nbsp;Exec&quot;&nbsp;is&nbsp;implemented&nbsp;in&nbsp;current<br>
&lt;br&gt;&nbsp;CPU&nbsp;architectures.&lt;br&gt;&lt;br&gt;The&nbsp;first&nbsp;approach&nbsp;will&nbsp;never&nbsp;work:&nbsp;The&nbsp;average&nbsp;webdeveloper&nbsp;simply&nbsp;cannot&nbsp;&lt;br&gt;oversee&nbsp;possible&nbsp;XSS&nbsp;exploits,&nbsp;this&nbsp;method&nbsp;was&nbsp;attempted&nbsp;for&nbsp;numerous&nbsp;years&nbsp;&lt;br&gt;in&nbsp;the&nbsp;buffer&nbsp;overflow&nbsp;world...&nbsp;IMHOI&nbsp;the&nbsp;average&nbsp;webdeveloper&nbsp;is&nbsp;less&nbsp;<br>
&lt;br&gt;skilled&nbsp;then&nbsp;the&nbsp;average&nbsp;aplication&nbsp;developer.&lt;br&gt;&lt;br&gt;The&nbsp;second&nbsp;solution&nbsp;might&nbsp;seem&nbsp;an&nbsp;utopia,&nbsp;but&nbsp;I&nbsp;think&nbsp;this&nbsp;is&nbsp;realizable.&nbsp;I&nbsp;&lt;br&gt;hope&nbsp;in&nbsp;2/5&nbsp;years&nbsp;browsers&nbsp;will&nbsp;have&nbsp;a&nbsp;special&nbsp;&quot;Secure&nbsp;Mode&quot;&nbsp;which&nbsp;ensures&nbsp;<br>
&lt;br&gt;webdesigners&nbsp;that&nbsp;their&nbsp;website&nbsp;is&nbsp;not&nbsp;vulnerable&nbsp;to&nbsp;XSS&nbsp;in&nbsp;these&nbsp;browsers.&lt;br&gt;&lt;br&gt;The&nbsp;first&nbsp;step&nbsp;in&nbsp;implementing&nbsp;this&nbsp;&quot;No&nbsp;Exec&quot;&nbsp;strategie&nbsp;is&nbsp;that&nbsp;there&nbsp;needs&nbsp;&lt;br&gt;to&nbsp;be&nbsp;a&nbsp;clear&nbsp;distinction&nbsp;between&nbsp;JS&nbsp;and&nbsp;HTML.&nbsp;This&nbsp;can&nbsp;be&nbsp;achieved&nbsp;quite&nbsp;easily<br>
&lt;br&gt;&nbsp;by&nbsp;preventing&nbsp;any&nbsp;JS&nbsp;operation&nbsp;inside&nbsp;a&nbsp;HTML/CSS&nbsp;file.&nbsp;All&nbsp;stuff&nbsp;related&nbsp;to&nbsp;&lt;br&gt;events&nbsp;and&nbsp;code&nbsp;executions&nbsp;should&nbsp;be&nbsp;in&nbsp;JS&nbsp;files.&lt;br&gt;&lt;br&gt;Thus&nbsp;instead&nbsp;of&nbsp;creating&lt;br&gt;&lt;br&gt;index.html&lt;br&gt;&nbsp;&lt;a&nbsp;href=#&nbsp;onclick=&quot;DoFunction()&quot;&nbsp;id=123&nbsp;&gt;<br>
&lt;br&gt;&lt;br&gt;we&nbsp;write&nbsp;&lt;br&gt;index.html&lt;br&gt;&nbsp;&lt;a&nbsp;href=#&nbsp;&nbsp;id=123&nbsp;&gt;&lt;br&gt;&lt;br&gt;index.js&lt;br&gt;&nbsp;&nbsp;document.getElementById(&#39;123&#39;).onclick=&quot;DoFunction()&quot;&lt;br&gt;&lt;br&gt;All&nbsp;JS&nbsp;functions&nbsp;in&nbsp;HTML&nbsp;files&nbsp;should&nbsp;not&nbsp;be&nbsp;executed,&nbsp;the&nbsp;JS-code&nbsp;should&nbsp;be&nbsp;rendered&nbsp;visually<br>
&lt;br&gt;&lt;br&gt;&lt;br&gt;The&nbsp;next&nbsp;step&nbsp;is&nbsp;that&nbsp;we&nbsp;make&nbsp;a&nbsp;clear&nbsp;distinction&nbsp;in&nbsp;our&nbsp;DOM&nbsp;tree&nbsp;which&nbsp;code&nbsp;is<br>
&lt;br&gt;&nbsp;executable&nbsp;and&nbsp;which&nbsp;is&nbsp;not.&nbsp;We&nbsp;might&nbsp;even&nbsp;consider&nbsp;creating&nbsp;2&nbsp;trees,&nbsp;one&nbsp;with&lt;br&gt;&nbsp;the&nbsp;executable&nbsp;code&nbsp;in&nbsp;it&nbsp;(retrieved&nbsp;from&nbsp;JS&nbsp;files),&nbsp;the&nbsp;other&nbsp;one&nbsp;with&nbsp;the&nbsp;&lt;br&gt;data&nbsp;(HTML,&nbsp;CSS&nbsp;files).&nbsp;None&nbsp;of&nbsp;the&nbsp;objects&nbsp;in&nbsp;the&nbsp;data&nbsp;tree&nbsp;should&nbsp;ever&nbsp;be&nbsp;executed.<br>
&lt;br&gt;&lt;br&gt;At&nbsp;this&nbsp;moment&nbsp;I&nbsp;cannot&nbsp;oversee&nbsp;the&nbsp;exact&nbsp;consequences&nbsp;<br>
&lt;br&gt;and&nbsp;limitations&nbsp;on&nbsp;the&nbsp;communications&nbsp;between&nbsp;these&nbsp;2&nbsp;trees.&lt;br&gt;&lt;br&gt;Most&nbsp;XSS&nbsp;exploits&nbsp;might&nbsp;be&nbsp;prevented&nbsp;by&nbsp;this&nbsp;design,&nbsp;but&nbsp;there&nbsp;are&nbsp;still&nbsp;some&nbsp;&lt;br&gt;debatable&nbsp;issues:&lt;br&gt;&nbsp;&nbsp;&nbsp;-&nbsp;What&nbsp;if&nbsp;JS&nbsp;uses&nbsp;eval&nbsp;on&nbsp;a&nbsp;data&nbsp;block?&lt;br&gt;<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Prohibit&nbsp;the&nbsp;use&nbsp;of&nbsp;eval?&lt;br&gt;&nbsp;&nbsp;&nbsp;-&nbsp;What&nbsp;if&nbsp;the&nbsp;JS&nbsp;file&nbsp;contain&nbsp;some&nbsp;user&nbsp;generated&nbsp;content?&nbsp;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.g.&nbsp;a&nbsp;PHP&nbsp;script&nbsp;will&nbsp;generate&nbsp;the&nbsp;JS&nbsp;code&nbsp;and&nbsp;write&nbsp;a&nbsp;line&nbsp;like&nbsp;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JSusername=$PHPusername;&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;I&nbsp;select&nbsp;the&nbsp;username&nbsp;&lt;alert(hello)&gt;&nbsp;then&nbsp;this&nbsp;script&nbsp;is&nbsp;still&nbsp;<br>
&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vulnerable&nbsp;to&nbsp;XSS&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;A&nbsp;solution&nbsp;might&nbsp;be&nbsp;that&nbsp;only&nbsp;specially-signed&nbsp;scripts&nbsp;can&nbsp;be&nbsp;run&nbsp;in&nbsp;this&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Secure&nbsp;mode&quot;;&nbsp;One&nbsp;can&nbsp;get&nbsp;this&nbsp;signature&nbsp;for&nbsp;free,&nbsp;but&nbsp;has&nbsp;to&nbsp;wait&nbsp;for&nbsp;2&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hours.&nbsp;In&nbsp;practice&nbsp;this&nbsp;will&nbsp;prevent&nbsp;people&nbsp;from&nbsp;doing&nbsp;these&nbsp;nasty<br>
&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serverside&nbsp;things.&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;solution&nbsp;to&nbsp;this&nbsp;practical&nbsp;username&nbsp;example&nbsp;would&nbsp;be&nbsp;to&nbsp;include&nbsp;a&nbsp;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;special&nbsp;div&nbsp;&lt;div&nbsp;id=username&gt;$PHPusername&lt;/div&gt;&nbsp;and&nbsp;then&nbsp;read&nbsp;the&nbsp;content&nbsp;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;div&nbsp;in&nbsp;the&nbsp;JS&nbsp;file.<br>
&lt;br&gt;&lt;br&gt;&lt;br&gt;One&nbsp;might&nbsp;wonder&nbsp;how&nbsp;to&nbsp;integrate&nbsp;this&nbsp;into&nbsp;the&nbsp;currently&nbsp;available&nbsp;websites.&nbsp;I&lt;br&gt;think&nbsp;a&nbsp;opt-in&nbsp;option&nbsp;would&nbsp;be&nbsp;sufficient;&nbsp;this&nbsp;might&nbsp;be&nbsp;taken&nbsp;into&nbsp;account&nbsp;into&nbsp;HTML5,&nbsp;&lt;br&gt;but&nbsp;we&nbsp;have&nbsp;to&nbsp;give&nbsp;the&nbsp;web-developer&nbsp;some&nbsp;candy&nbsp;for&nbsp;doing&nbsp;the&nbsp;effort&nbsp;of&nbsp;adjusting&nbsp;<br>
&lt;br&gt;his&nbsp;website.&nbsp;The&nbsp;new&nbsp;tool&nbsp;we&nbsp;will&nbsp;give&nbsp;him&nbsp;is&nbsp;the&nbsp;cross&nbsp;domain&nbsp;XmlHttpRequest.&lt;br&gt;Since&nbsp;we&nbsp;can&nbsp;exclude&nbsp;all&nbsp;XSS&nbsp;attacks&nbsp;most&nbsp;of&nbsp;the&nbsp;fundamental&nbsp;problems&nbsp;with&nbsp;&lt;br&gt;cross&nbsp;site&nbsp;XHR&nbsp;are&nbsp;automatically&nbsp;solved.&lt;br&gt;&lt;br&gt;Separating&nbsp;code&nbsp;and&nbsp;data&nbsp;will&nbsp;simplify&nbsp;the&nbsp;parsers&nbsp;for&nbsp;both&nbsp;filetypes&nbsp;and&nbsp;thus&nbsp;<br>
&lt;br&gt;improve&nbsp;render&nbsp;performance&nbsp;and&nbsp;maybe&nbsp;even&nbsp;decrease&nbsp;render&nbsp;bugs...&lt;br&gt;&lt;br&gt;Regards,&lt;br&gt;Pieter&lt;br&gt;&lt;br&gt;<br>

</tt>
