<tt>
&lt;!DOCTYPE&nbsp;html&nbsp;PUBLIC&nbsp;&quot;-//W3C//DTD&nbsp;HTML&nbsp;4.01&nbsp;Transitional//EN&quot;&gt;<br>
&lt;html&gt;<br>
&lt;head&gt;<br>
&nbsp;&nbsp;&lt;meta&nbsp;content=&quot;text/html;charset=ISO-8859-1&quot;&nbsp;http-equiv=&quot;Content-Type&quot;&gt;<br>
&lt;/head&gt;<br>
&lt;body&nbsp;bgcolor=&quot;#ffffff&quot;&nbsp;text=&quot;#000000&quot;&gt;<br>
Philipp&nbsp;Serafin&nbsp;wrote:<br>
&lt;blockquote<br>
&nbsp;cite=&quot;mid:f042876c0807221023g58e5f36atb936924e334ffaac@mail.gmail.com&quot;<br>
&nbsp;type=&quot;cite&quot;&gt;&lt;br&gt;<br>
&nbsp;&nbsp;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;pre&nbsp;wrap=&quot;&quot;&gt;Asynchronous:&nbsp;Requests&nbsp;and&nbsp;responses&nbsp;can&nbsp;be&nbsp;pipelined,&nbsp;meaning&nbsp;requests&nbsp;and<br>
responses&nbsp;can&nbsp;be&nbsp;transmitted&nbsp;simultaneously&nbsp;and&nbsp;are&nbsp;queued.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/pre&gt;<br>
&nbsp;&nbsp;&lt;/blockquote&gt;<br>
&nbsp;&nbsp;&lt;pre&nbsp;wrap=&quot;&quot;&gt;&lt;!----&gt;<br>
<br>
I&nbsp;think&nbsp;the&nbsp;problem&nbsp;is&nbsp;that&nbsp;this&nbsp;definition&nbsp;of&nbsp;&quot;asynchronous&quot;&nbsp;is&nbsp;very<br>
narrow.&nbsp;Yes,&nbsp;you&nbsp;don't&nbsp;need&nbsp;to&nbsp;wait&nbsp;for&nbsp;a&nbsp;request&nbsp;to&nbsp;finish&nbsp;before&nbsp;you<br>
issue&nbsp;a&nbsp;new&nbsp;one.&nbsp;But&nbsp;you'd&nbsp;still&nbsp;be&nbsp;bound&nbsp;to&nbsp;HTTP's&nbsp;request/response<br>
scheme&nbsp;in&nbsp;general.<br>
&nbsp;&nbsp;&lt;/pre&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
WebSockets&nbsp;uses&nbsp;HTTP&nbsp;so&nbsp;it&nbsp;is&nbsp;hardly<br>
immune&nbsp;to&nbsp;the&nbsp;request/response&nbsp;behaviour&nbsp;of&nbsp;its&nbsp;underlying&nbsp;protocol<br>
(including&nbsp;the&nbsp;stream&nbsp;nature&nbsp;of&nbsp;TCP).&lt;br&gt;<br>
&lt;br&gt;<br>
Besides&nbsp;this&nbsp;statement&nbsp;appears&nbsp;to&nbsp;be&nbsp;based&nbsp;on&nbsp;the&nbsp;assumption&nbsp;that&nbsp;the<br>
server&nbsp;MUST&nbsp;wait&nbsp;for&nbsp;additional&nbsp;client&nbsp;requests&nbsp;to&nbsp;send&nbsp;each&nbsp;&quot;message&quot;.<br>
However&nbsp;the&nbsp;specification&nbsp;allows&nbsp;the&nbsp;server&nbsp;to&nbsp;send&nbsp;&quot;chunked&quot;&nbsp;or<br>
&quot;multipart&quot;&nbsp;data&nbsp;in&nbsp;a&nbsp;variety&nbsp;of&nbsp;ways&nbsp;so&nbsp;full&nbsp;asynchronous<br>
communication&nbsp;is&nbsp;acheivable&nbsp;by&nbsp;making&nbsp;the&nbsp;response&nbsp;chunks&nbsp;&nbsp;part&nbsp;of&nbsp;one<br>
long&nbsp;HTTP&nbsp;multipart&nbsp;response&nbsp;and&nbsp;allowing&nbsp;the&nbsp;javascript&nbsp;API&nbsp;to&nbsp;access<br>
the&nbsp;incoming&nbsp;data&nbsp;while&nbsp;the&nbsp;response&nbsp;is&nbsp;incomplete.&nbsp;It&nbsp;can&nbsp;be<br>
simplified&nbsp;for&nbsp;the&nbsp;end-user&nbsp;by&nbsp;allowing&nbsp;the&nbsp;raw&nbsp;server&nbsp;response&nbsp;to&nbsp;be<br>
read&nbsp;by&nbsp;bytes,&nbsp;lines&nbsp;or&nbsp;&quot;parts&quot;.&nbsp;If&nbsp;you&nbsp;need&nbsp;more&nbsp;channels&nbsp;(ie,&nbsp;to&nbsp;pass<br>
messages&nbsp;while&nbsp;sending&nbsp;a&nbsp;large&nbsp;file)&nbsp;then&nbsp;you&nbsp;simply&nbsp;open&nbsp;more<br>
WebSockets&nbsp;and&nbsp;let&nbsp;the&nbsp;server&nbsp;handle&nbsp;multiplexing&nbsp;via&nbsp;cookies&nbsp;or<br>
message&nbsp;ids.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;blockquote<br>
&nbsp;cite=&quot;mid:f042876c0807221023g58e5f36atb936924e334ffaac@mail.gmail.com&quot;<br>
&nbsp;type=&quot;cite&quot;&gt;<br>
&nbsp;&nbsp;&lt;pre&nbsp;wrap=&quot;&quot;&gt;However,&nbsp;web&nbsp;authors&nbsp;might&nbsp;want&nbsp;to&nbsp;employ&nbsp;other&nbsp;schemes&nbsp;as&nbsp;well,&nbsp;for<br>
example&nbsp;server-sided&nbsp;asynchronous&nbsp;notifications&nbsp;(&quot;pushing&quot;),<br>
&nbsp;&nbsp;&lt;/pre&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
Client&nbsp;opens&nbsp;a&nbsp;connection.&nbsp;handshakes,&nbsp;then&nbsp;leaves&nbsp;connection&nbsp;open<br>
listening&nbsp;for&nbsp;&quot;pushed&quot;&nbsp;parts&nbsp;in&nbsp;the&nbsp;response&nbsp;stream.&nbsp;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;blockquote<br>
&nbsp;cite=&quot;mid:f042876c0807221023g58e5f36atb936924e334ffaac@mail.gmail.com&quot;<br>
&nbsp;type=&quot;cite&quot;&gt;<br>
&nbsp;&nbsp;&lt;pre&nbsp;wrap=&quot;&quot;&gt;client-sided&nbsp;notifications&nbsp;that&nbsp;don't&nbsp;need&nbsp;to&nbsp;be&nbsp;replied&lt;/pre&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
HTTP&nbsp;has&nbsp;a&nbsp;status&nbsp;code&nbsp;specifically&nbsp;for&nbsp;this&nbsp;purpose.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;blockquote<br>
&nbsp;cite=&quot;mid:f042876c0807221023g58e5f36atb936924e334ffaac@mail.gmail.com&quot;<br>
&nbsp;type=&quot;cite&quot;&gt;<br>
&nbsp;&nbsp;&lt;pre&nbsp;wrap=&quot;&quot;&gt;&nbsp;or&nbsp;requests&nbsp;that&nbsp;can&nbsp;be&nbsp;answered&nbsp;out-of-order.&lt;/pre&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
The&nbsp;order&nbsp;of&nbsp;data&nbsp;is&nbsp;controlled&nbsp;by&nbsp;the&nbsp;order&nbsp;it&nbsp;is&nbsp;sent&nbsp;by&nbsp;the<br>
application.&nbsp;There&nbsp;is&nbsp;no&nbsp;requirement&nbsp;for&nbsp;the&nbsp;requests&nbsp;and<br>
responses/parts&nbsp;to&nbsp;be&nbsp;synchronised.&nbsp;Especially&nbsp;if&nbsp;the&nbsp;server&nbsp;responses<br>
consist&nbsp;of&nbsp;a&nbsp;single&nbsp;multi-part&nbsp;&quot;response&quot;.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
I'm&nbsp;not&nbsp;advocating&nbsp;against&nbsp;WebSockets,&nbsp;just&nbsp;its&nbsp;current&nbsp;definition.&nbsp;In<br>
particular&nbsp;it&nbsp;tries&nbsp;to&nbsp;solve&nbsp;things&nbsp;that&nbsp;HTTP/1.1&nbsp;already&nbsp;handles.&nbsp;I<br>
believe&nbsp;we&nbsp;should&nbsp;be&nbsp;thinking&nbsp;of&nbsp;WebSockets&nbsp;as&nbsp;a&nbsp;Javascript&nbsp;API,&nbsp;not&nbsp;a<br>
new&nbsp;communications&nbsp;protocol&nbsp;for&nbsp;the&nbsp;simple&nbsp;reason&nbsp;that&nbsp;HTTP&nbsp;is&nbsp;already<br>
a&nbsp;very&nbsp;suitable&nbsp;and&nbsp;widely&nbsp;deployed&nbsp;protocol.&nbsp;What&nbsp;authors&nbsp;(especially<br>
AJAX&nbsp;authors)&nbsp;are&nbsp;missing&nbsp;is&nbsp;a&nbsp;reliable&nbsp;way&nbsp;to&nbsp;use&nbsp;HTTP's&nbsp;existing<br>
asynchronous&nbsp;connection&nbsp;support.&lt;br&gt;<br>
&lt;br&gt;<br>
Here&nbsp;are&nbsp;my&nbsp;issues&nbsp;with&nbsp;WebSockets&nbsp;as&nbsp;currently&nbsp;defined:&lt;br&gt;<br>
&lt;br&gt;<br>
1.)&nbsp;Request&nbsp;must&nbsp;have&nbsp;a&nbsp;&lt;scheme&gt;&nbsp;component&nbsp;whose&nbsp;value&nbsp;is&nbsp;either<br>
&quot;ws&quot;&nbsp;or&nbsp;&quot;wss&quot;&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;&quot;scheme&quot;&nbsp;should&nbsp;be&nbsp;HTTP(S).&nbsp;WebSockets&nbsp;should&nbsp;be&nbsp;the&nbsp;API.&nbsp;&lt;br&gt;<br>
&lt;br&gt;<br>
2.)&nbsp;The&nbsp;message&nbsp;&nbsp;event&nbsp;is&nbsp;fired&nbsp;when&nbsp;when&nbsp;data&nbsp;is&nbsp;received&nbsp;for&nbsp;a<br>
connection.&nbsp;&lt;br&gt;<br>
&lt;br&gt;<br>
What&nbsp;&quot;data&quot;?&nbsp;A&nbsp;byte,&nbsp;a&nbsp;line,&nbsp;a&nbsp;chunk,&nbsp;the&nbsp;whole&nbsp;response?&nbsp;The&nbsp;spec<br>
isn't&nbsp;clear.&nbsp;I'd&nbsp;also&nbsp;recommend&nbsp;adding&nbsp;a<br>
connection.read(&nbsp;max_bytes&nbsp;)&nbsp;method&nbsp;as&nbsp;used&nbsp;by&nbsp;Python&nbsp;and&nbsp;most<br>
languages&nbsp;to&nbsp;let&nbsp;the&nbsp;author&nbsp;receive&nbsp;bytes&nbsp;at&nbsp;a&nbsp;frequency&nbsp;appropriate&nbsp;to<br>
the&nbsp;application&nbsp;(eg,&nbsp;a&nbsp;game&nbsp;might&nbsp;want&nbsp;to&nbsp;frequently&nbsp;poll&nbsp;for&nbsp;small<br>
updates).&nbsp;&lt;br&gt;<br>
&lt;br&gt;<br>
3.)&nbsp;If&nbsp;the&nbsp;resulting&nbsp;absolute&nbsp;URL&nbsp;has&nbsp;a&nbsp;&lt;port&gt;&nbsp;component,&nbsp;then<br>
let&nbsp;port&nbsp;be&nbsp;that&nbsp;component's&nbsp;value;&nbsp;otherwise,&nbsp;if&nbsp;secure&nbsp;is&nbsp;false,&nbsp;let<br>
port&nbsp;be&nbsp;81,&nbsp;otherwise&nbsp;let&nbsp;port&nbsp;be&nbsp;815.&nbsp;&lt;br&gt;<br>
&lt;br&gt;<br>
No,&nbsp;no,&nbsp;no!&nbsp;Don't&nbsp;let&nbsp;paranoia&nbsp;override&nbsp;common&nbsp;sense.&nbsp;Not&nbsp;all&nbsp;websocket<br>
applications&nbsp;will&nbsp;have&nbsp;the&nbsp;luxury&nbsp;to&nbsp;run&nbsp;on&nbsp;these&nbsp;ports&nbsp;(multiple&nbsp;web<br>
servers,&nbsp;shared&nbsp;host,&nbsp;tunnelled&nbsp;connections,&nbsp;2&nbsp;websocket&nbsp;apps&nbsp;on&nbsp;one<br>
host,&nbsp;etc...).&lt;br&gt;<br>
&lt;br&gt;<br>
4.)&nbsp;The&nbsp;whole&nbsp;handshake&nbsp;is&nbsp;too&nbsp;complex.&lt;br&gt;<br>
&lt;br&gt;<br>
There&nbsp;are&nbsp;many&nbsp;firewalls,&nbsp;proxies&nbsp;and&nbsp;servers&nbsp;that&nbsp;legimately&nbsp;insert,<br>
change,&nbsp;split,&nbsp;or&nbsp;remove&nbsp;HTTP&nbsp;headers&nbsp;or&nbsp;modify&nbsp;their&nbsp;order.&nbsp;This&nbsp;is<br>
also&nbsp;likely&nbsp;if&nbsp;the&nbsp;service&nbsp;being&nbsp;provided&nbsp;sits&nbsp;on&nbsp;top&nbsp;of&nbsp;a<br>
framework/server&nbsp;(such&nbsp;as&nbsp;Coldfusion/IIS).&nbsp;Also&nbsp;what&nbsp;happens&nbsp;if<br>
HTTP/1.2&nbsp;is&nbsp;sent?&nbsp;These&nbsp;will&nbsp;break&nbsp;the&nbsp;WebSocket&nbsp;handshake&nbsp;as&nbsp;currently<br>
defined.&nbsp;&lt;br&gt;<br>
&lt;br&gt;<br>
rfc&nbsp;2616&nbsp;section&nbsp;3&nbsp;says:&nbsp;The&nbsp;version&nbsp;of&nbsp;an&nbsp;HTTP&nbsp;message&nbsp;is&nbsp;indicated&nbsp;by<br>
an&nbsp;HTTP-Version&nbsp;field&nbsp;in&nbsp;the&nbsp;first&nbsp;line&nbsp;of&nbsp;the&nbsp;message.&lt;br&gt;<br>
HTTP-Version&nbsp;&nbsp;&nbsp;=&nbsp;&quot;HTTP&quot;&nbsp;&quot;/&quot;&nbsp;1*DIGIT&nbsp;&quot;.&quot;&nbsp;1*DIGIT&lt;br&gt;<br>
&lt;br&gt;<br>
How&nbsp;many&nbsp;non-http&nbsp;servers&nbsp;send&nbsp;this?&nbsp;Probably&nbsp;none.&nbsp;I&nbsp;recommend&nbsp;the<br>
handshake&nbsp;simply&nbsp;read&nbsp;about&nbsp;256&nbsp;bytes&nbsp;of&nbsp;the&nbsp;server&nbsp;response&nbsp;and&nbsp;check<br>
that&nbsp;it&nbsp;contains&nbsp;a&nbsp;valid&nbsp;HTTP&nbsp;version&nbsp;field&nbsp;and&nbsp;one&nbsp;or&nbsp;more&nbsp;valid&nbsp;HTTP<br>
headers&nbsp;and&nbsp;optional&nbsp;end-of-headers&nbsp;marker.&nbsp;If&nbsp;ALL&nbsp;headers&nbsp;semantically<br>
validate&nbsp;&nbsp;(ie,&nbsp;with&nbsp;the&nbsp;regex&nbsp;[A-Za-z-]:&nbsp;\s(.*?)\r\n)&nbsp;then&nbsp;it&nbsp;is<br>
reasonably&nbsp;safe&nbsp;to&nbsp;assume&nbsp;it&nbsp;is&nbsp;a&nbsp;real&nbsp;HTTP&nbsp;or&nbsp;WebSockets&nbsp;service.&nbsp;If<br>
the&nbsp;headers&nbsp;validate<br>
then&nbsp;the&nbsp;client&nbsp;repeats&nbsp;the&nbsp;process&nbsp;until&nbsp;the&nbsp;message&nbsp;body&nbsp;is&nbsp;reached.<br>
At&nbsp;this<br>
point&nbsp;we&nbsp;check&nbsp;our&nbsp;collected&nbsp;headers&nbsp;for&nbsp;at&nbsp;least&nbsp;one&nbsp;&quot;Accept&quot;&nbsp;header<br>
containing&nbsp;&quot;WebSocket&quot;&nbsp;(assuming&nbsp;that&nbsp;being&nbsp;a&nbsp;&quot;WebSocket&quot;&nbsp;rather&nbsp;than&nbsp;a<br>
basic&nbsp;pipelined&nbsp;HTTP&nbsp;connection&nbsp;is&nbsp;even&nbsp;useful).&lt;br&gt;<br>
&lt;br&gt;<br>
5.)&nbsp;URI&nbsp;parsing&nbsp;specification&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;current&nbsp;proposal&nbsp;spells&nbsp;out&nbsp;the&nbsp;URI/path&nbsp;parsing&nbsp;scheme.&nbsp;However<br>
this&nbsp;should&nbsp;be&nbsp;treated&nbsp;EXACTLY&nbsp;like&nbsp;HTTP&nbsp;so&nbsp;the&nbsp;need&nbsp;to&nbsp;define&nbsp;it&nbsp;in<br>
the&nbsp;spec&nbsp;is&nbsp;redundant.&nbsp;It&nbsp;is&nbsp;enough&nbsp;to&nbsp;say&nbsp;that&nbsp;the&nbsp;resource&nbsp;may&nbsp;be<br>
requested&nbsp;using&nbsp;a&nbsp;GET&nbsp;or&nbsp;POST&nbsp;request.&nbsp;Same&nbsp;with&nbsp;cookie&nbsp;handling,<br>
authorization&nbsp;and&nbsp;other&nbsp;HTTP&nbsp;headers.&nbsp;These&nbsp;should&nbsp;be&nbsp;handled&nbsp;by&nbsp;the<br>
webserver&nbsp;and/or&nbsp;application&nbsp;exactly&nbsp;as&nbsp;normal,&nbsp;there&nbsp;is&nbsp;no&nbsp;need&nbsp;to<br>
rewrite&nbsp;the&nbsp;rules&nbsp;simply&nbsp;because&nbsp;the&nbsp;information&nbsp;flow&nbsp;is&nbsp;asynchronous.&lt;br&gt;<br>
&lt;br&gt;<br>
6.)&nbsp;Data&nbsp;framing&nbsp;specification&lt;br&gt;<br>
&lt;br&gt;<br>
Redundant&nbsp;because&nbsp;HTTP&nbsp;already&nbsp;provides&nbsp;multiple&nbsp;methods&nbsp;of&nbsp;data<br>
segment&nbsp;encapsulation&nbsp;including&nbsp;&quot;Content-Length&quot;,&nbsp;&quot;Transfer-Encoding&quot;<br>
and&nbsp;&quot;Content-Type&quot;.&nbsp;Each&nbsp;of&nbsp;these&nbsp;have&nbsp;sub-types&nbsp;suitable&nbsp;for&nbsp;a&nbsp;range<br>
of&nbsp;possible&nbsp;WebSocket&nbsp;applications.&nbsp;Naturally&nbsp;it&nbsp;is&nbsp;not&nbsp;necessary&nbsp;for<br>
the&nbsp;client&nbsp;or&nbsp;server&nbsp;to&nbsp;support&nbsp;them&nbsp;all&nbsp;since&nbsp;there&nbsp;are&nbsp;HTTP&nbsp;headers<br>
explicitly&nbsp;designed&nbsp;for&nbsp;this&nbsp;kind&nbsp;of&nbsp;negotiation.&nbsp;The&nbsp;WebSocket&nbsp;should<br>
however&nbsp;define&nbsp;at&nbsp;least&nbsp;one&nbsp;fallback&nbsp;method&nbsp;that&nbsp;can&nbsp;be&nbsp;relied&nbsp;on&nbsp;(I<br>
recommend&nbsp;&quot;Content-Length&quot;,&nbsp;&nbsp;&quot;Transfer-Encoding:&nbsp;chunked&quot;&nbsp;and<br>
&quot;Content-Type:&nbsp;multipart/form-data&quot;&nbsp;as&nbsp;MUST&nbsp;requirements).&lt;br&gt;<br>
&lt;br&gt;<br>
7.)&nbsp;WebSockets&nbsp;needs&nbsp;a&nbsp;low-level&nbsp;interface&nbsp;as&nbsp;well&lt;br&gt;<br>
&lt;br&gt;<br>
By&nbsp;&quot;dumbing&nbsp;down&quot;&nbsp;the&nbsp;data&nbsp;transfer&nbsp;into&nbsp;fired&nbsp;events&nbsp;and&nbsp;wrapping&nbsp;the<br>
data&nbsp;segments&nbsp;internally&nbsp;the&nbsp;websocket&nbsp;hides&nbsp;the&nbsp;true&nbsp;communication<br>
behind&nbsp;an&nbsp;abstract&nbsp;object.&nbsp;This&nbsp;is&nbsp;a&nbsp;good&nbsp;thing&nbsp;for&nbsp;simplicity&nbsp;but<br>
extremely&nbsp;limiting&nbsp;for&nbsp;authors&nbsp;wanting&nbsp;to&nbsp;fine-tune&nbsp;an&nbsp;application&nbsp;or<br>
adapt&nbsp;to&nbsp;future&nbsp;protocols.&nbsp;I&nbsp;strongly&nbsp;recommend&nbsp;that&nbsp;rawwrite()&nbsp;and<br>
rawread()&nbsp;methods&nbsp;be&nbsp;made&nbsp;available&nbsp;to&nbsp;an&nbsp;OPEN&nbsp;(ie,<br>
authenticated/handshaked)&nbsp;websocket&nbsp;to&nbsp;allow&nbsp;direct&nbsp;handling&nbsp;of&nbsp;the<br>
stream.&nbsp;It&nbsp;would&nbsp;be&nbsp;understood&nbsp;that&nbsp;authors&nbsp;using&nbsp;these&nbsp;methods&nbsp;must<br>
understand&nbsp;the&nbsp;nature&nbsp;of&nbsp;both&nbsp;HTTP&nbsp;and&nbsp;websockets.&nbsp;In&nbsp;the&nbsp;same&nbsp;way&nbsp;a<br>
settimeout()&nbsp;method&nbsp;should&nbsp;be&nbsp;provided&nbsp;to&nbsp;control&nbsp;blocking/non-blocking<br>
behaviour.&nbsp;I&nbsp;can't&nbsp;stress&nbsp;enough&nbsp;how&nbsp;important&nbsp;these&nbsp;interfaces&nbsp;are,&nbsp;as<br>
they&nbsp;may&nbsp;one&nbsp;day&nbsp;be&nbsp;required&nbsp;to&nbsp;implement&nbsp;WebSockets&nbsp;2.0&nbsp;on&nbsp;&quot;legacy&quot;&nbsp;or<br>
broken&nbsp;HTML5&nbsp;browsers.&lt;br&gt;<br>
&lt;br&gt;<br>
8.)&nbsp;Origin:&nbsp;/&nbsp;WebSocket-Origin:&lt;br&gt;<br>
&lt;br&gt;<br>
Specifying&nbsp;clients&nbsp;allowed&nbsp;to&nbsp;originate&nbsp;a&nbsp;connection&nbsp;is&nbsp;a&nbsp;disaster<br>
waiting&nbsp;to&nbsp;happen&nbsp;for&nbsp;the&nbsp;simple&nbsp;reason&nbsp;that&nbsp;sending&nbsp;your&nbsp;origin&nbsp;is&nbsp;a<br>
privacy&nbsp;violation&nbsp;in&nbsp;the&nbsp;same&nbsp;vain&nbsp;as&nbsp;the&nbsp;referrer&nbsp;field.&nbsp;Any<br>
open-source&nbsp;browser&nbsp;or&nbsp;privacy&nbsp;plugin&nbsp;will&nbsp;simply&nbsp;disable&nbsp;or&nbsp;spoof&nbsp;this<br>
since&nbsp;it&nbsp;would&nbsp;allow&nbsp;advertising&nbsp;networks&nbsp;to&nbsp;track&nbsp;people&nbsp;by&nbsp;ad-serving<br>
via&nbsp;websockets.&nbsp;Such&nbsp;tracking&nbsp;undermines&nbsp;the&nbsp;security&nbsp;of&nbsp;anonymising<br>
proxies&nbsp;(as&nbsp;the&nbsp;&quot;origin&quot;&nbsp;may&nbsp;be&nbsp;a&nbsp;private&nbsp;site&nbsp;or&nbsp;contain&nbsp;a&nbsp;client&nbsp;id).<br>
Using&nbsp;origin&nbsp;as&nbsp;a&nbsp;required&nbsp;field&nbsp;essentially&nbsp;makes&nbsp;the&nbsp;use&nbsp;of<br>
&quot;referrer&quot;&nbsp;mandatory.&nbsp;If&nbsp;a&nbsp;websocket&nbsp;wants&nbsp;to&nbsp;restrict&nbsp;access&nbsp;then&nbsp;it<br>
will&nbsp;have&nbsp;to&nbsp;use&nbsp;credentials&nbsp;or&nbsp;IP&nbsp;ranges&nbsp;like&nbsp;everything&nbsp;else.&lt;br&gt;<br>
&lt;br&gt;<br>
9.)&nbsp;WebSocket-Location&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;scenario&nbsp;this&nbsp;is&nbsp;supposed&nbsp;to&nbsp;solve&nbsp;(that&nbsp;an&nbsp;application&nbsp;makes&nbsp;a<br>
mistake&nbsp;about&nbsp;what&nbsp;host&nbsp;it's&nbsp;on&nbsp;and&nbsp;somehow&nbsp;sends&nbsp;the&nbsp;wrong&nbsp;data)&nbsp;is<br>
contrived.&nbsp;What's&nbsp;more&nbsp;likely&nbsp;to&nbsp;happen&nbsp;is&nbsp;that&nbsp;a&nbsp;server&nbsp;application<br>
has&nbsp;trouble&nbsp;actually&nbsp;knowing&nbsp;its&nbsp;(virtual)&nbsp;hostname&nbsp;(due&nbsp;to&nbsp;a&nbsp;proxy,<br>
mod_rewrite,&nbsp;URL&nbsp;masking&nbsp;or&nbsp;other&nbsp;legitimate&nbsp;redirect)&nbsp;and&nbsp;therefore&nbsp;NO<br>
clients&nbsp;can&nbsp;connect.&nbsp;It&nbsp;isn't&nbsp;uncommon&nbsp;for&nbsp;the&nbsp;host&nbsp;value&nbsp;passed&nbsp;to&nbsp;a<br>
CGI&nbsp;script&nbsp;and&nbsp;the&nbsp;hostname&nbsp;returned&nbsp;by&nbsp;the&nbsp;environment&nbsp;(ie,&nbsp;via&nbsp;uname<br>
or&nbsp;OS&nbsp;library)&nbsp;to&nbsp;conflict.&nbsp;Then&nbsp;there&nbsp;is&nbsp;the&nbsp;matter&nbsp;of&nbsp;an&nbsp;SSL<br>
connection&nbsp;(no&nbsp;host&nbsp;header&nbsp;available).&nbsp;I'm&nbsp;having&nbsp;trouble&nbsp;determining<br>
why&nbsp;this&nbsp;should&nbsp;even&nbsp;matter.&nbsp;I&nbsp;suspect&nbsp;most&nbsp;simple<br>
applications/wrappers&nbsp;will&nbsp;just&nbsp;echo&nbsp;back&nbsp;the&nbsp;host&nbsp;header&nbsp;sent&nbsp;by&nbsp;the<br>
client&nbsp;so&nbsp;if&nbsp;a&nbsp;mistake&nbsp;is&nbsp;made&nbsp;it's&nbsp;likely&nbsp;to&nbsp;go&nbsp;unnoticed&nbsp;anyway.&lt;br&gt;<br>
&lt;br&gt;<br>
10.)&nbsp;To&nbsp;close&nbsp;the&nbsp;Web&nbsp;Socket&nbsp;connection,&nbsp;either&nbsp;the&nbsp;user&nbsp;agent&nbsp;or&nbsp;the<br>
server&nbsp;closes&nbsp;the&nbsp;TCP/IP&nbsp;connection.&nbsp;There&nbsp;is&nbsp;no&nbsp;closing&nbsp;handshake.&lt;br&gt;<br>
&lt;br&gt;<br>
HTTP&nbsp;provides&nbsp;a&nbsp;reliable&nbsp;way&nbsp;of&nbsp;closing&nbsp;a&nbsp;connection&nbsp;so&nbsp;that&nbsp;all<br>
parties&nbsp;(client,&nbsp;server&nbsp;and&nbsp;proxies)&nbsp;know&nbsp;why&nbsp;the&nbsp;connection&nbsp;ended.<br>
There&nbsp;is&nbsp;no&nbsp;reason&nbsp;for&nbsp;websockets&nbsp;to&nbsp;not&nbsp;follow&nbsp;this&nbsp;protocol&nbsp;and&nbsp;close<br>
the&nbsp;connection&nbsp;properly.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
In&nbsp;conclusion,&nbsp;the&nbsp;current&nbsp;specification&nbsp;of&nbsp;WebSockets&nbsp;re-invents<br>
several&nbsp;wheels&nbsp;and&nbsp;does&nbsp;so&nbsp;in&nbsp;ways&nbsp;that&nbsp;are&nbsp;overly&nbsp;complex,&nbsp;error-prone<br>
and&nbsp;yet&nbsp;seriously&nbsp;limited&nbsp;in&nbsp;functionality.&nbsp;The&nbsp;whole&nbsp;concept&nbsp;needs&nbsp;to<br>
be&nbsp;approached&nbsp;from&nbsp;the&nbsp;position&nbsp;of&nbsp;making&nbsp;HTTP's&nbsp;features&nbsp;(which&nbsp;are<br>
already&nbsp;implemented&nbsp;in&nbsp;most&nbsp;UAs)&nbsp;available&nbsp;to&nbsp;Javascript&nbsp;(while<br>
preventing&nbsp;the&nbsp;exploit&nbsp;of&nbsp;non-HTTP&nbsp;services).&nbsp;I&nbsp;do&nbsp;not&nbsp;believe&nbsp;this&nbsp;is<br>
difficult&nbsp;if&nbsp;my&nbsp;recommendations&nbsp;above&nbsp;are&nbsp;followed.&nbsp;I&nbsp;do&nbsp;not&nbsp;wish&nbsp;to&nbsp;be<br>
overly&nbsp;critical&nbsp;without&nbsp;contributing&nbsp;a&nbsp;solution,&nbsp;so&nbsp;if&nbsp;there&nbsp;are&nbsp;no<br>
serious&nbsp;objections&nbsp;to&nbsp;the&nbsp;points&nbsp;I've&nbsp;made&nbsp;I&nbsp;will&nbsp;put&nbsp;time&nbsp;into<br>
reframing&nbsp;my&nbsp;objections&nbsp;as&nbsp;a&nbsp;compete&nbsp;specification&nbsp;proposal.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
Shannon&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/body&gt;<br>
&lt;/html&gt;<br>

</tt>
