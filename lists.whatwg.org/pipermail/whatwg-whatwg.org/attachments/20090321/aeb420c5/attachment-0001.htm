<tt>
&lt;div&gt;That&nbsp;might&nbsp;work.&nbsp;Is&nbsp;it&nbsp;feasible&nbsp;for&nbsp;user&nbsp;agents&nbsp;to&nbsp;enforce&nbsp;limits&nbsp;on&nbsp;how&nbsp;long&nbsp;a&nbsp;callback&nbsp;is&nbsp;allowed&nbsp;to&nbsp;run&nbsp;holding&nbsp;the&nbsp;lock?&nbsp;That&nbsp;way&nbsp;workers&nbsp;can&amp;#39;t&nbsp;starve&nbsp;normal&nbsp;pages&nbsp;from&nbsp;accessing&nbsp;their&nbsp;local&nbsp;storage.&lt;/div&gt;&lt;div&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;-atw&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Sat,&nbsp;Mar&nbsp;21,&nbsp;2009&nbsp;at&nbsp;12:48&nbsp;AM,&nbsp;Jonas&nbsp;Sicking&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;jonas@sicking.cc&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;On&nbsp;Fri,&nbsp;Mar&nbsp;20,&nbsp;2009&nbsp;at&nbsp;3:10&nbsp;PM,&nbsp;Aaron&nbsp;Boodman&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:aa@google.com&quot;&gt;aa@google.com&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;br&gt;<br>
&amp;gt;&nbsp;I&nbsp;think&nbsp;the&nbsp;best&nbsp;option&nbsp;is&nbsp;to&nbsp;make&nbsp;access&nbsp;to&nbsp;localstorage&nbsp;asynchronous&lt;br&gt;<br>
&amp;gt;&nbsp;for&nbsp;workers.&nbsp;This&nbsp;reduces&nbsp;the&nbsp;amount&nbsp;of&nbsp;time&nbsp;a&nbsp;worker&nbsp;can&nbsp;hold&nbsp;the&lt;br&gt;<br>
&amp;gt;&nbsp;localstore&nbsp;lock&nbsp;so&nbsp;that&nbsp;it&nbsp;shouldn&amp;#39;t&nbsp;be&nbsp;a&nbsp;problem&nbsp;for&nbsp;normal&nbsp;pages.&nbsp;It&lt;br&gt;<br>
&amp;gt;&nbsp;sucks&nbsp;to&nbsp;make&nbsp;such&nbsp;a&nbsp;simple&nbsp;and&nbsp;useful&nbsp;API&nbsp;aync&nbsp;though.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;As&nbsp;I&nbsp;understand&nbsp;the&nbsp;current&nbsp;API&nbsp;(on&nbsp;main&nbsp;window)&nbsp;to&nbsp;be&nbsp;defined,&nbsp;as&lt;br&gt;<br>
soon&nbsp;as&nbsp;someone&nbsp;accesses&nbsp;the&nbsp;.localStorage&nbsp;property,&nbsp;the&lt;br&gt;<br>
implementation&nbsp;is&nbsp;supposed&nbsp;to&nbsp;acquire&nbsp;a&nbsp;lock.&nbsp;This&nbsp;lock&nbsp;would&nbsp;be&nbsp;held&lt;br&gt;<br>
on&nbsp;to&nbsp;until&nbsp;that&nbsp;script&nbsp;returns&nbsp;to&nbsp;the&nbsp;event&nbsp;loop&nbsp;for&nbsp;that&nbsp;thread.&lt;br&gt;<br>
&lt;br&gt;<br>
So&nbsp;if&nbsp;javascript&nbsp;in&nbsp;another&nbsp;window,&nbsp;running&nbsp;in&nbsp;another&nbsp;thread&nbsp;or&lt;br&gt;<br>
process,&nbsp;tries&nbsp;to&nbsp;access&nbsp;.localStorage&nbsp;for&nbsp;the&nbsp;same&nbsp;origin,&nbsp;the&lt;br&gt;<br>
.localStorage&nbsp;getter&nbsp;would&nbsp;try&nbsp;to&nbsp;acquire&nbsp;the&nbsp;same&nbsp;lock&nbsp;and&nbsp;block&lt;br&gt;<br>
until&nbsp;the&nbsp;first&nbsp;thread&nbsp;releases&nbsp;the&nbsp;lock.&lt;br&gt;<br>
&lt;br&gt;<br>
This&nbsp;could&nbsp;in&nbsp;theory&nbsp;be&nbsp;applied&nbsp;to&nbsp;applied&nbsp;to&nbsp;workers&nbsp;as&nbsp;well.&nbsp;However&lt;br&gt;<br>
as&nbsp;Jeremy&nbsp;points&nbsp;out&nbsp;that&nbsp;could&nbsp;result&nbsp;in&nbsp;the&nbsp;a&nbsp;worker&nbsp;script&nbsp;running&lt;br&gt;<br>
for&nbsp;a&nbsp;very&nbsp;long&nbsp;time&nbsp;blocking&nbsp;the&nbsp;window&nbsp;thread.&lt;br&gt;<br>
&lt;br&gt;<br>
What&nbsp;we&nbsp;could&nbsp;do,&nbsp;is&nbsp;to&nbsp;have&nbsp;an&nbsp;API&nbsp;like&lt;br&gt;<br>
&lt;br&gt;<br>
getLocalStorage(callback);&lt;br&gt;<br>
&lt;br&gt;<br>
This&nbsp;function&nbsp;returns&nbsp;immediately,&nbsp;but&nbsp;will&nbsp;then&nbsp;call&nbsp;the&nbsp;callback&lt;br&gt;<br>
function&nbsp;as&nbsp;soon&nbsp;as&nbsp;the&nbsp;localStorage&nbsp;becomes&nbsp;available&nbsp;and&nbsp;the&nbsp;lock&lt;br&gt;<br>
been&nbsp;acquired.&nbsp;This&nbsp;would&nbsp;always&nbsp;happen&nbsp;asynchronously&nbsp;off&nbsp;the&nbsp;event&lt;br&gt;<br>
loop,&nbsp;which&nbsp;means&nbsp;that&nbsp;once&nbsp;the&nbsp;callback&nbsp;returns&nbsp;the&nbsp;lock&nbsp;is&nbsp;released&lt;br&gt;<br>
again.&lt;br&gt;<br>
&lt;br&gt;<br>
Of&nbsp;course,&nbsp;it&nbsp;would&nbsp;still&nbsp;mean&nbsp;that&nbsp;a&nbsp;window&nbsp;context&nbsp;or&nbsp;worker&nbsp;could&lt;br&gt;<br>
hold&nbsp;on&nbsp;to&nbsp;the&nbsp;lock&nbsp;for&nbsp;an&nbsp;indefinite&nbsp;time,&nbsp;but&nbsp;as&nbsp;long&nbsp;as&nbsp;the&nbsp;asych&lt;br&gt;<br>
getLocalStorage&nbsp;API&nbsp;is&nbsp;used,&nbsp;this&nbsp;means&nbsp;that&nbsp;no&nbsp;thread&nbsp;is&nbsp;blocked,&lt;br&gt;<br>
just&nbsp;that&nbsp;they&nbsp;aren&amp;#39;t&nbsp;able&nbsp;to&nbsp;get&nbsp;access&nbsp;to&nbsp;the&nbsp;localStorage.&lt;br&gt;<br>
&lt;br&gt;<br>
So&nbsp;for&nbsp;example,&nbsp;the&nbsp;following&nbsp;code&nbsp;would&nbsp;safely&nbsp;add&nbsp;1&nbsp;to&nbsp;the&nbsp;&amp;#39;foo&amp;#39;&lt;br&gt;<br>
property&nbsp;in&nbsp;localStorage:&lt;br&gt;<br>
&lt;br&gt;<br>
getLocalStorage(function(store)&nbsp;{&lt;br&gt;<br>
&nbsp; store.foo&nbsp;=&nbsp;parseInt(store.foo,&nbsp;10)&nbsp;+&nbsp;1;&lt;br&gt;<br>
});&lt;br&gt;<br>
&lt;br&gt;<br>
Additionally,&nbsp;we&nbsp;would&nbsp;have&nbsp;to&nbsp;define&nbsp;that&nbsp;if&nbsp;the&nbsp;store&nbsp;object&nbsp;passed&lt;br&gt;<br>
to&nbsp;the&nbsp;callback&nbsp;function&nbsp;is&nbsp;accessed&nbsp;outside&nbsp;after&nbsp;the&nbsp;callback&nbsp;has&lt;br&gt;<br>
ended&nbsp;this&nbsp;will&nbsp;throw&nbsp;an&nbsp;exception.&nbsp;If&nbsp;the&nbsp;object&nbsp;is&nbsp;reactivated&nbsp;next&lt;br&gt;<br>
time&nbsp;a&nbsp;callback&nbsp;is&nbsp;entered,&nbsp;or&nbsp;if&nbsp;a&nbsp;new&nbsp;storage&nbsp;object&nbsp;is&nbsp;created&nbsp;also&lt;br&gt;<br>
needs&nbsp;to&nbsp;be&nbsp;defined.&lt;br&gt;<br>
&lt;br&gt;<br>
This&nbsp;new&nbsp;API&nbsp;I&nbsp;believe&nbsp;is&nbsp;good&nbsp;enough&nbsp;to&nbsp;be&nbsp;used&nbsp;both&nbsp;from&nbsp;workers&nbsp;and&lt;br&gt;<br>
window&nbsp;contexts.&lt;br&gt;<br>
&lt;br&gt;<br>
We&nbsp;could&nbsp;even&nbsp;keep&nbsp;the&nbsp;current&nbsp;API&nbsp;implemented&nbsp;in&nbsp;IE8,&nbsp;or&nbsp;we&nbsp;could&lt;br&gt;<br>
just&nbsp;ask&nbsp;people&nbsp;to&nbsp;write&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;IE8&nbsp;like:&lt;br&gt;<br>
&lt;br&gt;<br>
function&nbsp;getLocalStorage(callback)&nbsp;{&lt;br&gt;<br>
&nbsp; setTimeout(function()&nbsp;{&nbsp;callback(localStorage);&nbsp;},&nbsp;0);&lt;br&gt;<br>
}&lt;br&gt;<br>
&lt;br&gt;<br>
in&nbsp;an&nbsp;implementation&nbsp;that&nbsp;implements&nbsp;correct&nbsp;locking&nbsp;for&nbsp;the&lt;br&gt;<br>
synchronous&nbsp;API,&nbsp;this&nbsp;will&nbsp;even&nbsp;produce&nbsp;the&nbsp;correct&nbsp;locking&nbsp;behavior&lt;br&gt;<br>
for&nbsp;the&nbsp;new&nbsp;API.&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
/&nbsp;Jonas&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>

</tt>
