<tt>
&lt;html&gt;&lt;body&nbsp;style=&quot;word-wrap:&nbsp;break-word;&nbsp;-webkit-nbsp-mode:&nbsp;space;&nbsp;-webkit-line-break:&nbsp;after-white-space;&nbsp;&quot;&gt;&lt;div&gt;&lt;div&gt;On&nbsp;06.05.2009,&nbsp;at&nbsp;17:31,&nbsp;Adam&nbsp;Barth&nbsp;wrote:&lt;/div&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&gt;&lt;font&nbsp;class=&quot;Apple-style-span&quot;&nbsp;color=&quot;#000000&quot;&gt;&lt;br&gt;&lt;/font&gt;WHY&nbsp;NOT&nbsp;toStaticHTML?&lt;br&gt;&lt;br&gt;toStaticHTML&nbsp;addresses&nbsp;the&nbsp;same&nbsp;use&nbsp;cause&nbsp;by&nbsp;translating&nbsp;an&nbsp;untrusted&lt;br&gt;string&nbsp;to&nbsp;another&nbsp;string&nbsp;that&nbsp;lacks&nbsp;active&nbsp;HTML&nbsp;content.&nbsp;&amp;nbsp;This&nbsp;API&nbsp;has&lt;br&gt;two&nbsp;issues:&lt;br&gt;&lt;br&gt;1)&nbsp;The&nbsp;untrusted&nbsp;string&nbsp;-&amp;gt;&nbsp;static&nbsp;string&nbsp;-&amp;gt;&nbsp;HTML&nbsp;parser&nbsp;workflow&lt;br&gt;requires&nbsp;the&nbsp;browser&nbsp;to&nbsp;parse&nbsp;the&nbsp;string&nbsp;twice,&nbsp;introducing&nbsp;a&lt;br&gt;performance&nbsp;penalty&nbsp;and&nbsp;a&nbsp;security&nbsp;issue&nbsp;if&nbsp;the&nbsp;two&nbsp;parsing&nbsp;aren't&lt;br&gt;identical.&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;That&nbsp;is&nbsp;based&nbsp;on&nbsp;assumptions&nbsp;that:&lt;/div&gt;&lt;div&gt;1.&nbsp;parsing&nbsp;is&nbsp;expensive&nbsp;enough&nbsp;to&nbsp;warrant&nbsp;API&nbsp;optimized&nbsp;for&nbsp;this&nbsp;particular&nbsp;case&lt;/div&gt;&lt;div&gt;2.&nbsp;browsers&nbsp;cannot&nbsp;optimize&nbsp;it&nbsp;otherwise&lt;/div&gt;&lt;div&gt;3.&nbsp;returned&nbsp;code&nbsp;will&nbsp;be&nbsp;ambiguous&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In&nbsp;client-side&nbsp;scripts&nbsp;untrusted&nbsp;content&nbsp;comes&nbsp;from&nbsp;the&nbsp;network,&nbsp;which&nbsp;means&nbsp;that&nbsp;parsing&nbsp;time&nbsp;is&nbsp;going&nbsp;to&nbsp;be&nbsp;miniscule&nbsp;compared&nbsp;to&nbsp;time&nbsp;required&nbsp;to&nbsp;fetch&nbsp;the&nbsp;content&nbsp;(and&nbsp;to&nbsp;render&nbsp;it).&nbsp;My&nbsp;guess&nbsp;is&nbsp;that&nbsp;parsing&nbsp;itself&nbsp;is&nbsp;not&nbsp;a&nbsp;bottleneck.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Second,&nbsp;it&nbsp;_is_&nbsp;possible&nbsp;to&nbsp;avoid&nbsp;reparsing&nbsp;without&nbsp;special&nbsp;API&nbsp;for&nbsp;this.&nbsp;toStaticHTML()&nbsp;may&nbsp;return&nbsp;subclass&nbsp;of&nbsp;String&nbsp;that&nbsp;contains&nbsp;reference&nbsp;to&nbsp;parsed&nbsp;DOM.&nbsp;Roughly&nbsp;something&nbsp;like&nbsp;this:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;function&nbsp;toStaticHTML(html)&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;var&nbsp;cleanDOM&nbsp;=&nbsp;clean(parse(html))&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;return&nbsp;{&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;toString:function(){return&nbsp;unparse(cleanDOM)},&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;node:cleanDOM&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;which&nbsp;should&nbsp;make&nbsp;common&nbsp;case:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;innerHTML&nbsp;=&nbsp;toStaticHTML(html)&nbsp;just&nbsp;as&nbsp;fast&nbsp;as&nbsp;innerStaticHTML&nbsp;=&nbsp;html;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;toStaticHTML()&nbsp;enables&nbsp;other&nbsp;optimisations,&nbsp;e.g.&nbsp;filtered&nbsp;HTML&nbsp;can&nbsp;be&nbsp;saved&nbsp;for&nbsp;future&nbsp;use&nbsp;(in&nbsp;local&nbsp;storage)&nbsp;or&nbsp;string&nbsp;filtered&nbsp;once&nbsp;used&nbsp;in&nbsp;multiple&nbsp;places.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Alternatively&nbsp;there&nbsp;could&nbsp;be&nbsp;toStaticDOM()&nbsp;method&nbsp;that&nbsp;returns&nbsp;DOMDocumentFragment,&nbsp;avoiding&nbsp;reparsing&nbsp;issue&nbsp;entirely.&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&gt;2)&nbsp;The&nbsp;API&nbsp;is&nbsp;difficult&nbsp;to&nbsp;future-proof&nbsp;because&nbsp;future&nbsp;versions&nbsp;of&lt;br&gt;HTML&nbsp;are&nbsp;likely&nbsp;to&nbsp;add&nbsp;new&nbsp;tags&nbsp;with&nbsp;active&nbsp;content&nbsp;(e.g.,&nbsp;like&nbsp;the&lt;br&gt;&amp;lt;video&amp;gt;&nbsp;tag's&nbsp;event&nbsp;handlers).&nbsp;&amp;nbsp;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;When&nbsp;support&nbsp;for&nbsp;new&nbsp;tag&nbsp;is&nbsp;added&nbsp;to&nbsp;a&nbsp;browser,&nbsp;it&nbsp;would&nbsp;also&nbsp;be&nbsp;added&nbsp;to&nbsp;its&nbsp;toStaticHTML()/innerStaticHTML,&nbsp;so&nbsp;evolution&nbsp;of&nbsp;HTML&nbsp;shouldn't&nbsp;be&nbsp;a&nbsp;problem&nbsp;either&nbsp;way.&nbsp;Browser&nbsp;doesn't&nbsp;need&nbsp;to&nbsp;worry&nbsp;about&nbsp;dangerous&nbsp;constructs&nbsp;it&nbsp;does&nbsp;not&nbsp;support.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Methods&nbsp;are&nbsp;easier&nbsp;to&nbsp;patch&nbsp;than&nbsp;properties&nbsp;in&nbsp;JavaScript,&nbsp;so&nbsp;if&nbsp;implementation&nbsp;of&nbsp;existing&nbsp;toStaticHTML()&nbsp;turned&nbsp;out&nbsp;to&nbsp;be&nbsp;insecure,&nbsp;the&nbsp;method&nbsp;could&nbsp;be&nbsp;easily&nbsp;replaced/patched&nbsp;on&nbsp;cilent-side,&nbsp;or&nbsp;applications&nbsp;could&nbsp;post-process&nbsp;output&nbsp;of&nbsp;toStaticHTML().&lt;/div&gt;&lt;div&gt;It's&nbsp;not&nbsp;that&nbsp;easy&nbsp;with&nbsp;a&nbsp;property.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;dislike&nbsp;APIs&nbsp;based&nbsp;on&nbsp;magic&nbsp;properties.&nbsp;Properties&nbsp;cannot&nbsp;take&nbsp;arguments&nbsp;and&nbsp;we'd&nbsp;have&nbsp;to&nbsp;create&nbsp;new&nbsp;property&nbsp;for&nbsp;every&nbsp;combination&nbsp;of&nbsp;arguments.&nbsp;If&nbsp;innerHTML&nbsp;was&nbsp;a&nbsp;method,&nbsp;instead&nbsp;of&nbsp;creating&nbsp;new&nbsp;property&nbsp;we&nbsp;could&nbsp;extend&nbsp;it&nbsp;to&nbsp;be&nbsp;innerHTML(html,&nbsp;static=true).&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If&nbsp;more&nbsp;sophisticated&nbsp;filtering&nbsp;becomes&amp;nbsp;needed&amp;nbsp;in&nbsp;the&nbsp;future,&nbsp;we&nbsp;could&nbsp;have&nbsp;toStaticHTML(html,&nbsp;{preserve:['svg','rdf'],&nbsp;remove:'marquee'}),&nbsp;but&nbsp;it&nbsp;would&nbsp;be&nbsp;silly&nbsp;to&nbsp;create&nbsp;another&nbsp;innerStaticHTMLwithSVGandRDFbutWithoutMarquee&nbsp;property.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&nbsp;&lt;div&gt;&lt;div&gt;&lt;div&gt;--&amp;nbsp;&lt;/div&gt;&lt;div&gt;regards,&amp;nbsp;Kornel&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&nbsp;&lt;/div&gt;&lt;br&gt;&lt;/body&gt;&lt;/html&gt;
</tt>
