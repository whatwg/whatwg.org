<tt>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Wed,&nbsp;Sep&nbsp;9,&nbsp;2009&nbsp;at&nbsp;11:08&nbsp;AM,&nbsp;Aaron&nbsp;Boodman&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:aa@google.com&quot;&gt;aa@google.com&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;On&nbsp;Wed,&nbsp;Sep&nbsp;9,&nbsp;2009&nbsp;at&nbsp;10:55&nbsp;AM,&nbsp;Darin&nbsp;Fisher&lt;&lt;a&nbsp;href=&quot;mailto:darin@chromium.org&quot;&gt;darin@chromium.org&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;&gt;&nbsp;I&nbsp;imagine&nbsp;a&nbsp;simple&nbsp;lock&nbsp;API:&lt;br&gt;<br>
&gt;&nbsp;window.acquireLock(&quot;name&quot;)&lt;br&gt;<br>
&gt;&nbsp;window.releaseLock(&quot;name&quot;)&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;I&nbsp;do&nbsp;not&nbsp;think&nbsp;it&nbsp;is&nbsp;a&nbsp;good&nbsp;idea&nbsp;to&nbsp;allow&nbsp;long-lived&nbsp;(past&nbsp;a&nbsp;stack&lt;br&gt;<br>
frame)&nbsp;locks&nbsp;on&nbsp;the&nbsp;types&nbsp;of&nbsp;things&nbsp;we&#39;ve&nbsp;been&nbsp;discussing&nbsp;(local&lt;br&gt;<br>
storage,&nbsp;databases,&nbsp;etc).&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&gt;&nbsp;This&nbsp;API&nbsp;seems&nbsp;like&nbsp;it&nbsp;could&nbsp;be&nbsp;used&nbsp;to&nbsp;allow&nbsp;LocalStorage&nbsp;to&nbsp;be&nbsp;usable&nbsp;from&lt;br&gt;<br>
&gt;&nbsp;workers.&nbsp; Also,&nbsp;as&nbsp;we&nbsp;start&nbsp;developing&nbsp;other&nbsp;means&nbsp;of&nbsp;local&nbsp;storage&nbsp;(File&lt;br&gt;<br>
&gt;&nbsp;APIs),&nbsp;it&nbsp;seems&nbsp;like&nbsp;having&nbsp;to&nbsp;again&nbsp;invent&nbsp;a&nbsp;reasonable&nbsp;implicit&nbsp;locking&lt;br&gt;<br>
&gt;&nbsp;system&nbsp;will&nbsp;be&nbsp;a&nbsp;pain.&nbsp; Perhaps&nbsp;it&nbsp;would&nbsp;just&nbsp;be&nbsp;better&nbsp;to&nbsp;develop&nbsp;something&lt;br&gt;<br>
&gt;&nbsp;explicit&nbsp;that&nbsp;application&nbsp;developers&nbsp;can&nbsp;use&nbsp;independent&nbsp;of&nbsp;the&nbsp;local&lt;br&gt;<br>
&gt;&nbsp;storage&nbsp;mechanism&nbsp;:-)&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;There&nbsp;would&nbsp;presumably&nbsp;have&nbsp;to&nbsp;be&nbsp;a&nbsp;separate&nbsp;name&nbsp;value&nbsp;for&nbsp;each&nbsp;API,&lt;br&gt;<br>
though,&nbsp;right?&nbsp;So&nbsp;we&#39;re&nbsp;talking&nbsp;about&nbsp;the&nbsp;difference&nbsp;between:&lt;br&gt;<br>
&lt;br&gt;<br>
window.acquireLock(&quot;localStorage&quot;,&nbsp;function()&nbsp;{&lt;br&gt;<br>
...&lt;br&gt;<br>
});&lt;br&gt;<br>
&lt;br&gt;<br>
and:&lt;br&gt;<br>
&lt;br&gt;<br>
window.acquireLocalStorage(function()&nbsp;{&lt;br&gt;<br>
...&lt;br&gt;<br>
});&lt;br&gt;<br>
&lt;br&gt;<br>
It&nbsp;doesn&#39;t&nbsp;seem&nbsp;like&nbsp;much&nbsp;of&nbsp;a&nbsp;win&nbsp;for&nbsp;reusability&nbsp;IMO.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;wanted&nbsp;to&nbsp;leave&nbsp;it&nbsp;up&nbsp;to&nbsp;the&nbsp;app&nbsp;developer&nbsp;to&nbsp;choose&nbsp;the&nbsp;name&nbsp;so&nbsp;that&nbsp;they&nbsp;could&nbsp;define&nbsp;how&nbsp;the&nbsp;lock&nbsp;is&nbsp;interpreted.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;For&nbsp;example,&nbsp;they&nbsp;might&nbsp;want&nbsp;to&nbsp;partition&nbsp;the&nbsp;keyspace&nbsp;for&nbsp;local&nbsp;storage&nbsp;and&nbsp;have&nbsp;separate&nbsp;locks&nbsp;for&nbsp;separate&nbsp;keys.&nbsp; Or,&nbsp;they&nbsp;might&nbsp;want&nbsp;to&nbsp;have&nbsp;a&nbsp;single&nbsp;lock&nbsp;that&nbsp;is&nbsp;inclusive&nbsp;of&nbsp;several&nbsp;storage&nbsp;mechanisms:&nbsp;LocalStorage&nbsp;and&nbsp;FileAPI.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Besides,&nbsp;once&nbsp;we&nbsp;have&nbsp;an&nbsp;explicit&nbsp;locking&nbsp;API,&nbsp;why&nbsp;not&nbsp;just&nbsp;be&nbsp;generic&nbsp;and&nbsp;give&nbsp;it&nbsp;a&nbsp;name&nbsp;divorced&nbsp;from&nbsp;LocalStorage&nbsp;or&nbsp;any&nbsp;kind&nbsp;of&nbsp;storage&nbsp;features&nbsp;for&nbsp;that&nbsp;matter?&nbsp; Locking&nbsp;can&nbsp;be&nbsp;useful&nbsp;to&nbsp;other&nbsp;applications&nbsp;that&nbsp;do&nbsp;not&nbsp;even&nbsp;use&nbsp;local&nbsp;storage...&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;<br>
&gt;&nbsp;It&nbsp;may&nbsp;be&nbsp;the&nbsp;case&nbsp;that&nbsp;we&nbsp;want&nbsp;to&nbsp;only&nbsp;provide&nbsp;acquireScopedLock&nbsp;(or&lt;br&gt;<br>
&gt;&nbsp;something&nbsp;like&nbsp;it)&nbsp;to&nbsp;enforce&nbsp;fine&nbsp;grained&nbsp;locking,&nbsp;but&nbsp;I&nbsp;think&nbsp;that&nbsp;would&lt;br&gt;<br>
&gt;&nbsp;only&nbsp;force&nbsp;people&nbsp;to&nbsp;implement&nbsp;long-lived&nbsp;locks&nbsp;by&nbsp;setting&nbsp;a&nbsp;field&nbsp;in&lt;br&gt;<br>
&gt;&nbsp;LocalStorage.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;Do&nbsp;you&nbsp;have&nbsp;an&nbsp;example&nbsp;of&nbsp;a&nbsp;place&nbsp;where&nbsp;we&nbsp;want&nbsp;to&nbsp;allow&nbsp;long-lived&nbsp;locks?&lt;br&gt;&lt;font&nbsp;class=&quot;Apple-style-span&quot;&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;It&nbsp;is&nbsp;important&nbsp;to&nbsp;think&nbsp;of&nbsp;these&nbsp;differently&nbsp;from&nbsp;normal&nbsp;mutexes&nbsp;that&nbsp;you&nbsp;might&nbsp;program&nbsp;with&nbsp;in&nbsp;C++.&nbsp; Maybe&nbsp;I&nbsp;should&nbsp;have&nbsp;used&nbsp;the&nbsp;term&nbsp;&quot;flag&quot;&nbsp;instead&nbsp;of&nbsp;&quot;lock&quot;&nbsp;;-)&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You&nbsp;might&nbsp;use&nbsp;a&nbsp;long&nbsp;lived&nbsp;lock&nbsp;to&nbsp;indicate&nbsp;that&nbsp;you&nbsp;are&nbsp;the&nbsp;instance&nbsp;responsible&nbsp;for&nbsp;X.&nbsp; I&nbsp;can&nbsp;imagine&nbsp;applications&nbsp;where&nbsp;there&nbsp;could&nbsp;be&nbsp;a&nbsp;master&nbsp;/&nbsp;slave&nbsp;relationships&nbsp;between&nbsp;the&nbsp;instances.&nbsp; One&nbsp;instance&nbsp;is&nbsp;the&nbsp;master&nbsp;and&nbsp;the&nbsp;rest&nbsp;are&nbsp;the&nbsp;slaves.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If&nbsp;we&nbsp;only&nbsp;had&nbsp;fine&nbsp;grained&nbsp;locking,&nbsp;then&nbsp;we&nbsp;are&nbsp;saying&nbsp;that&nbsp;we&nbsp;want&nbsp;simulaneous&nbsp;instances&nbsp;of&nbsp;the&nbsp;same&nbsp;web&nbsp;app&nbsp;to&nbsp;be&nbsp;able&nbsp;to&nbsp;stop&nbsp;on&nbsp;each&nbsp;others&nbsp;data&nbsp;in&nbsp;LocalStorage.&nbsp; Instead,&nbsp;a&nbsp;web&nbsp;app&nbsp;developer&nbsp;might&nbsp;want&nbsp;to&nbsp;disable&nbsp;LocalStorage&nbsp;features&nbsp;in&nbsp;all&nbsp;but&nbsp;the&nbsp;first&nbsp;instance&nbsp;of&nbsp;their&nbsp;web&nbsp;app.&nbsp; The&nbsp;problem&nbsp;is&nbsp;that&nbsp;your&nbsp;state&nbsp;is&nbsp;held&nbsp;not&nbsp;just&nbsp;in&nbsp;LocalStorage&nbsp;but&nbsp;also&nbsp;in&nbsp;JS&nbsp;variables,&nbsp;the&nbsp;DOM,&nbsp;and&nbsp;perhaps&nbsp;in&nbsp;session&nbsp;state&nbsp;held&nbsp;by&nbsp;the&nbsp;server.&nbsp; It&nbsp;is&nbsp;easy&nbsp;for&nbsp;LocalStorage&nbsp;to&nbsp;get&nbsp;corrupted&nbsp;even&nbsp;with&nbsp;proper&nbsp;fine-grained&nbsp;locking.&nbsp; You&nbsp;still&nbsp;need&nbsp;a&nbsp;way&nbsp;to&nbsp;have&nbsp;a&nbsp;big&nbsp;&quot;flag&quot;&nbsp;that&nbsp;says...&nbsp;hey,&nbsp;i&#39;m&nbsp;the&nbsp;one&nbsp;messing&nbsp;with&nbsp;LocalStorage.&nbsp; A&nbsp;good&nbsp;example&nbsp;is&nbsp;the&nbsp;browser&#39;s&nbsp;profile&nbsp;directory.&nbsp; Chrome&nbsp;and&nbsp;Firefox&nbsp;both&nbsp;only&nbsp;allow&nbsp;one&nbsp;instance&nbsp;of&nbsp;the&nbsp;app&nbsp;per&nbsp;profile.&nbsp; A&nbsp;long-lived&nbsp;lock&nbsp;is&nbsp;held&nbsp;to&nbsp;support&nbsp;such&nbsp;behavior.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;suspect&nbsp;there&nbsp;is&nbsp;some&nbsp;overlap&nbsp;with&nbsp;my&nbsp;proposal&nbsp;and&nbsp;shared&nbsp;workers.&nbsp; Perhaps&nbsp;what&nbsp;I&nbsp;am&nbsp;trying&nbsp;to&nbsp;accomplish&nbsp;here&nbsp;could&nbsp;even&nbsp;be&nbsp;implemented&nbsp;on&nbsp;top&nbsp;of&nbsp;shared&nbsp;workers,&nbsp;although&nbsp;using&nbsp;shared&nbsp;workers&nbsp;to&nbsp;achieve&nbsp;mutual&nbsp;exclusion&nbsp;locks&nbsp;seems&nbsp;rather&nbsp;heavyweight.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-Darin&lt;/div&gt;&lt;/div&gt;<br>

</tt>
