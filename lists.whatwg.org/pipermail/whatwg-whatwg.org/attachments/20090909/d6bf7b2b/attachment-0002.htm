<tt>
If&nbsp;this&nbsp;feature&nbsp;existed,&nbsp;we&nbsp;likely&nbsp;would&nbsp;have&nbsp;used&nbsp;it&nbsp;for&nbsp;offline&nbsp;Gmail&nbsp;to&nbsp;coordinate&nbsp;which&nbsp;instance&nbsp;of&nbsp;the&nbsp;app&nbsp;(page&nbsp;with&nbsp;gmail&nbsp;in&nbsp;it)&nbsp;should&nbsp;be&nbsp;responsible&nbsp;for&nbsp;sync&#39;ing&nbsp;the&nbsp;local&nbsp;database&nbsp;with&nbsp;the&nbsp;mail&nbsp;service.&nbsp;In&nbsp;the&nbsp;absence&nbsp;of&nbsp;a&nbsp;feature&nbsp;like&nbsp;this,&nbsp;instead&nbsp;we&nbsp;used&nbsp;the&nbsp;local&nbsp;database&nbsp;itself&nbsp;to&nbsp;register&nbsp;which&nbsp;page&nbsp;was&nbsp;the&nbsp;&#39;syncagent&#39;.&nbsp;This&nbsp;involved&nbsp;periodically&nbsp;updating&nbsp;the&nbsp;db&nbsp;by&nbsp;the&nbsp;syncagent,&nbsp;and&nbsp;periodic&nbsp;polling&nbsp;by&nbsp;the&nbsp;would&nbsp;be&nbsp;syncagents&nbsp;waiting&nbsp;to&nbsp;possibly&nbsp;take&nbsp;over.&nbsp;Much&nbsp;ugliness.&lt;div&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;var&nbsp;isSyncAgent&nbsp;=&nbsp;false;&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;Apple-style-span&quot;&nbsp;style=&quot;font-family:&nbsp;arial,&nbsp;sans-serif;&nbsp;font-size:&nbsp;13px;&nbsp;border-collapse:&nbsp;collapse;&nbsp;&quot;&gt;window.acquireFlag(&quot;syncAgency&quot;,&nbsp;function()&nbsp;{&nbsp;isSyncAgent&nbsp;=&nbsp;true;&nbsp;});&lt;/span&gt;&lt;br&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Much&nbsp;nicer.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Wed,&nbsp;Sep&nbsp;9,&nbsp;2009&nbsp;at&nbsp;7:02&nbsp;PM,&nbsp;Maciej&nbsp;Stachowiak&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:mjs@apple.com&quot;&gt;mjs@apple.com&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
&lt;div&nbsp;style=&quot;word-wrap:break-word&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;div&gt;On&nbsp;Sep&nbsp;9,&nbsp;2009,&nbsp;at&nbsp;6:33&nbsp;PM,&nbsp;Jeremy&nbsp;Orlow&nbsp;wrote:&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&gt;In&nbsp;general&nbsp;this&nbsp;seems&nbsp;like&nbsp;a&nbsp;pretty&nbsp;interesting&nbsp;idea.&nbsp; It&nbsp;definitely&nbsp;would&nbsp;be&nbsp;nice&nbsp;to&nbsp;completely&nbsp;abstract&nbsp;away&nbsp;all&nbsp;concepts&nbsp;of&nbsp;concurrency&nbsp;from&nbsp;web&nbsp;developers,&nbsp;but&nbsp;some&nbsp;of&nbsp;our&nbsp;solutions&nbsp;thus&nbsp;far&nbsp;(message&nbsp;passing,&nbsp;async&nbsp;interfaces,&nbsp;etc)&nbsp;have&nbsp;not&nbsp;been&nbsp;terribly&nbsp;appreciated&nbsp;by&nbsp;developers&nbsp;either.&nbsp; The&nbsp;GlobalScript&nbsp;proposal&nbsp;is&nbsp;a&nbsp;good&nbsp;example:&nbsp;to&nbsp;us,&nbsp;shared&nbsp;workers&nbsp;were&nbsp;an&nbsp;adequate&nbsp;solution,&nbsp;but&nbsp;in&nbsp;practice&nbsp;the&nbsp;lack&nbsp;of&nbsp;shared&nbsp;state&nbsp;is&nbsp;very&nbsp;difficult&nbsp;for&nbsp;some&nbsp;developers&nbsp;to&nbsp;work&nbsp;around.&nbsp; Possibly&nbsp;even&nbsp;more&nbsp;difficult&nbsp;than&nbsp;dealing&nbsp;with&nbsp;some&nbsp;levels&nbsp;of&nbsp;concurrency.&lt;/div&gt;<br>
&nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;think&nbsp;it&#39;d&nbsp;be&nbsp;interesting&nbsp;to&nbsp;introduce&nbsp;this&nbsp;as&nbsp;an&nbsp;experimental&nbsp;API&nbsp;and&nbsp;see&nbsp;what&nbsp;web&nbsp;developers&nbsp;do&nbsp;with&nbsp;it.&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;think&nbsp;it&#39;s&nbsp;predictable&nbsp;that&nbsp;it&nbsp;will&nbsp;be&nbsp;used&nbsp;in&nbsp;badly&nbsp;wrong&nbsp;ways&nbsp;without&nbsp;implementing&nbsp;it.&nbsp;Explicit&nbsp;application-managed&nbsp;locking&nbsp;is&nbsp;a&nbsp;massive&nbsp;failure&nbsp;as&nbsp;a&nbsp;mechanism&nbsp;for&nbsp;managing&nbsp;concurrency.&lt;/div&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&gt;As&nbsp;for&nbsp;the&nbsp;idea&nbsp;of&nbsp;a&nbsp;sync&nbsp;API:  What&nbsp;if&nbsp;some&nbsp;library/framework&nbsp;and&nbsp;the&nbsp;embedding&nbsp;page&nbsp;use&nbsp;these&nbsp;flags/locks?&nbsp; I&nbsp;know&nbsp;you&nbsp;can&#39;t&nbsp;actually&nbsp;deadlock&nbsp;with&nbsp;this&nbsp;API,&nbsp;but&nbsp;I&nbsp;worry&nbsp;some&nbsp;developers&nbsp;will&nbsp;just&nbsp;do&nbsp;|while(!acquireLock(&quot;flag&quot;))&nbsp;{}|&nbsp;which&nbsp;could&nbsp;lead&nbsp;to&nbsp;deadlocks.&nbsp; Only&nbsp;allowing&nbsp;an&nbsp;async&nbsp;API&nbsp;would&nbsp;fix&nbsp;this,&nbsp;but&nbsp;developers&nbsp;have&nbsp;typically&nbsp;not&nbsp;liked&nbsp;async&nbsp;APIs.&lt;/div&gt;<br>
&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;If&nbsp;we&nbsp;want&nbsp;to&nbsp;go&nbsp;async,&nbsp;then&nbsp;I&#39;d&nbsp;rather&nbsp;have&nbsp;an&nbsp;asynchronous&nbsp;way&nbsp;to&nbsp;acquire&nbsp;an&nbsp;*actual*&nbsp;lock&nbsp;on&nbsp;the&nbsp;resource&nbsp;(as&nbsp;with&nbsp;the&nbsp;LocalStorage&nbsp;async&nbsp;transaction&nbsp;proposal),&nbsp;than&nbsp;an&nbsp;async&nbsp;advisory&nbsp;locking&nbsp;model.&nbsp;Having&nbsp;both&nbsp;asynchronicity&nbsp;*and*&nbsp;advisory&nbsp;locks&nbsp;seems&nbsp;like&nbsp;the&nbsp;worst&nbsp;of&nbsp;both&nbsp;worlds.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;On&nbsp;the&nbsp;other&nbsp;hand,&nbsp;if&nbsp;we&nbsp;offer&nbsp;only&nbsp;the&nbsp;equivalent&nbsp;of&nbsp;tryLock()&nbsp;and&nbsp;not&nbsp;a&nbsp;blocking&nbsp;lock(),&nbsp;it&#39;s&nbsp;almost&nbsp;certain&nbsp;Web&nbsp;apps&nbsp;will&nbsp;build&nbsp;spin&nbsp;locks&nbsp;in&nbsp;the&nbsp;way&nbsp;you&nbsp;describe,&nbsp;leading&nbsp;to&nbsp;wasteful&nbsp;CPU&nbsp;usage,&nbsp;bad&nbsp;performance,&nbsp;and&nbsp;the&nbsp;possibility&nbsp;of&nbsp;deadlocks.&lt;/div&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Here&#39;s&nbsp;another&nbsp;idea&nbsp;that&nbsp;I&nbsp;think&nbsp;is&nbsp;actually&nbsp;kind&nbsp;of&nbsp;cool:&nbsp; What&nbsp;if&nbsp;we&nbsp;kept&nbsp;track&nbsp;of&nbsp;locking&nbsp;precedence&nbsp;(i.e.&nbsp;the&nbsp;graph&nbsp;of&nbsp;which&nbsp;locks&nbsp;have&nbsp;been&nbsp;taken&nbsp;while&nbsp;other&nbsp;locks&nbsp;were&nbsp;held)&nbsp;and&nbsp;threw&nbsp;an&nbsp;exception&nbsp;if&nbsp;any&nbsp;lock&nbsp;was&nbsp;ever&nbsp;taken&nbsp;in&nbsp;a&nbsp;way&nbsp;that&nbsp;violated&nbsp;the&nbsp;graph.&nbsp; In&nbsp;other&nbsp;words,&nbsp;we&nbsp;wouldn&#39;t&nbsp;make&nbsp;the&nbsp;developer&nbsp;tell&nbsp;us&nbsp;the&nbsp;locking&nbsp;precedence,&nbsp;and&nbsp;we&nbsp;wouldn&#39;t&nbsp;wait&nbsp;until&nbsp;you&nbsp;hit&nbsp;an&nbsp;actual&nbsp;deadlock.&nbsp; Instead&nbsp;we&nbsp;would&nbsp;look&nbsp;for&nbsp;the&nbsp;first&nbsp;call&nbsp;site&nbsp;that&nbsp;_could_&nbsp;have&nbsp;deadlocked.&nbsp; A&nbsp;long&nbsp;time&nbsp;ago,&nbsp;I&nbsp;was&nbsp;working&nbsp;on&nbsp;a&nbsp;project&nbsp;that&nbsp;had&nbsp;some&nbsp;deadlock&nbsp;problems.&nbsp; We&nbsp;implemented&nbsp;exactly&nbsp;this&nbsp;and&nbsp;it&nbsp;worked&nbsp;pretty&nbsp;well.&lt;/div&gt;<br>
&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;seems&nbsp;like&nbsp;a&nbsp;very&nbsp;challenging&nbsp;programming&nbsp;model&nbsp;for&nbsp;little&nbsp;gain.&nbsp;If&nbsp;the&nbsp;locks&nbsp;are&nbsp;purely&nbsp;advisory,&nbsp;they&nbsp;do&nbsp;not&nbsp;prevent&nbsp;race&nbsp;conditions,&nbsp;but&nbsp;a&nbsp;discipline&nbsp;to&nbsp;prevent&nbsp;deadlocks&nbsp;will&nbsp;still&nbsp;make&nbsp;them&nbsp;very&nbsp;hard&nbsp;to&nbsp;use.&nbsp;Note&nbsp;also&nbsp;that&nbsp;the&nbsp;possibility&nbsp;of&nbsp;synchronous&nbsp;cross-site&nbsp;code&nbsp;execution&nbsp;would&nbsp;require&nbsp;a&nbsp;lock&nbsp;precedence&nbsp;graph&nbsp;to&nbsp;be&nbsp;cross-site&nbsp;to&nbsp;really&nbsp;prevent&nbsp;deadlocks,&nbsp;but&nbsp;it&nbsp;would&nbsp;be&nbsp;impossible&nbsp;for&nbsp;a&nbsp;Web&nbsp;application&nbsp;to&nbsp;guarantee&nbsp;anything&nbsp;about&nbsp;lock&nbsp;order&nbsp;with&nbsp;respect&nbsp;to&nbsp;Web&nbsp;apps&nbsp;in&nbsp;different&nbsp;origins.&nbsp;The&nbsp;other&nbsp;possibility&nbsp;is&nbsp;to&nbsp;drop&nbsp;all&nbsp;locks&nbsp;in&nbsp;the&nbsp;case&nbsp;of&nbsp;synchronous&nbsp;cross-origin&nbsp;code&nbsp;execution,&nbsp;but&nbsp;then&nbsp;these&nbsp;advisory&nbsp;locks&nbsp;would&nbsp;not&nbsp;even&nbsp;be&nbsp;useful&nbsp;for&nbsp;preventing&nbsp;race&nbsp;conditions.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Locking&nbsp;is&nbsp;broken&nbsp;-&nbsp;just&nbsp;don&#39;t&nbsp;do&nbsp;it.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Regards,&lt;/div&gt;&lt;div&gt;Maciej&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;<br>
On&nbsp;Thu,&nbsp;Sep&nbsp;10,&nbsp;2009&nbsp;at&nbsp;9:22&nbsp;AM,&nbsp;Olli&nbsp;Pettay&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:Olli.Pettay@helsinki.fi&quot;&nbsp;target=&quot;_blank&quot;&gt;Olli.Pettay@helsinki.fi&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
&nbsp;&lt;div&gt;On&nbsp;9/10/09&nbsp;2:24&nbsp;AM,&nbsp;Robert&nbsp;O&#39;Callahan&nbsp;wrote:&lt;br&gt;&nbsp;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&gt;&nbsp;On&nbsp;Thu,&nbsp;Sep&nbsp;10,&nbsp;2009&nbsp;at&nbsp;6:37&nbsp;AM,&nbsp;Darin&nbsp;Fisher&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:darin@chromium.org&quot;&nbsp;target=&quot;_blank&quot;&gt;darin@chromium.org&lt;/a&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;div&gt;&nbsp;&lt;mailto:&lt;a&nbsp;href=&quot;mailto:darin@chromium.org&quot;&nbsp;target=&quot;_blank&quot;&gt;darin@chromium.org&lt;/a&gt;&gt;&gt;&nbsp;wrote:&lt;br&gt;&nbsp;&lt;br&gt;&nbsp; &nbsp; Yes,&nbsp;exactly.&nbsp;Sorry&nbsp;for&nbsp;not&nbsp;making&nbsp;this&nbsp;clear.&nbsp; I&nbsp;believe&nbsp;implicit&lt;br&gt;&nbsp; &nbsp; locking&nbsp;for&nbsp;LocalStorage&nbsp;(and&nbsp;the&nbsp;implicit&nbsp;unlocking)&nbsp;is&nbsp;going&nbsp;to&lt;br&gt;<br>
&nbsp; &nbsp; yield&nbsp;something&nbsp;very&nbsp;confusing&nbsp;and&nbsp;hard&nbsp;to&nbsp;implement&nbsp;well.&nbsp; The&lt;br&gt;&nbsp; &nbsp; potential&nbsp;for&nbsp;dead&nbsp;locks&nbsp;when&nbsp;you&nbsp;fail&nbsp;to&nbsp;implicitly&nbsp;unlock&nbsp;properly&lt;br&gt;&nbsp; &nbsp; scares&nbsp;me&lt;br&gt;&nbsp;&lt;br&gt;&nbsp;You&nbsp;mean&nbsp;when&nbsp;the&nbsp;browser&nbsp;implementation&nbsp;has&nbsp;a&nbsp;bug&nbsp;and&nbsp;fails&nbsp;to&lt;br&gt;<br>
&nbsp;implicitly&nbsp;unlock?&lt;br&gt;&nbsp;&lt;br&gt;&nbsp;Giving&nbsp;Web&nbsp;authors&nbsp;the&nbsp;crappy&nbsp;race-prone&nbsp;and&nbsp;deadlock-prone&nbsp;locking&lt;br&gt;&nbsp;programming&nbsp;model&nbsp;scares&nbsp;*me*.&nbsp;Yes,&nbsp;your&nbsp;acquireLock&nbsp;can&#39;t&nbsp;get&nbsp;you&nbsp;into&lt;br&gt;&nbsp;a&nbsp;hard&nbsp;deadlock,&nbsp;strictly&nbsp;speaking,&nbsp;but&nbsp;you&nbsp;can&nbsp;still&nbsp;effectively&lt;br&gt;<br>
&nbsp;deadlock&nbsp;your&nbsp;application&nbsp;by&nbsp;waiting&nbsp;for&nbsp;a&nbsp;lock&nbsp;to&nbsp;become&nbsp;available&nbsp;that&lt;br&gt;&nbsp;never&nbsp;can.&nbsp;Also,&nbsp;how&nbsp;many&nbsp;authors&nbsp;will&nbsp;forget&nbsp;to&nbsp;test&nbsp;the&nbsp;result&nbsp;of&lt;br&gt;&nbsp;acquireLock&nbsp;(because&nbsp;they&#39;re&nbsp;used&nbsp;to&nbsp;other&nbsp;locking&nbsp;APIs&nbsp;that&nbsp;block)&nbsp;and&lt;br&gt;<br>
&nbsp;find&nbsp;that&nbsp;things&nbsp;are&nbsp;OK&nbsp;in&nbsp;their&nbsp;testing?&lt;br&gt;&nbsp;&lt;/div&gt;&lt;/blockquote&gt;&nbsp;If&nbsp;you&#39;re&nbsp;concerned&nbsp;about&nbsp;that,&nbsp;make&nbsp;acquireLock&nbsp;to&nbsp;throw&nbsp;an&nbsp;exception.&lt;br&gt;&nbsp;Authors&nbsp;sure&nbsp;will&nbsp;notice&nbsp;that&nbsp;things&nbsp;aren&#39;t&nbsp;quite&nbsp;right,&nbsp;if&nbsp;the&nbsp;flag&lt;br&gt;<br>
&nbsp;isn&#39;t&nbsp;acquired.&lt;br&gt;&nbsp;And&nbsp;if&nbsp;the&nbsp;acquireLock(&quot;flag&quot;,&nbsp;callback)&nbsp;approach&nbsp;is&nbsp;used,&nbsp;it&nbsp;is&lt;br&gt;&nbsp;harder&nbsp;to&nbsp;make&nbsp;the&nbsp;mistake&nbsp;to&nbsp;not&nbsp;check&nbsp;whether&nbsp;the&nbsp;flag&nbsp;was&nbsp;really&nbsp;got.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;seems&nbsp;like&nbsp;a&nbsp;good&nbsp;idea. &lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&nbsp;As&nbsp;you&nbsp;said&nbsp;on&nbsp;IRC,&nbsp;perhaps&nbsp;there&nbsp;should&nbsp;be&nbsp;a&nbsp;way&nbsp;to&nbsp;acquire&lt;br&gt;&nbsp;many&nbsp;flags&nbsp;at&nbsp;once&nbsp;and&nbsp;then&nbsp;call&nbsp;the&nbsp;callback.&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;like&nbsp;this&nbsp;idea&nbsp;as&nbsp;well.&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
