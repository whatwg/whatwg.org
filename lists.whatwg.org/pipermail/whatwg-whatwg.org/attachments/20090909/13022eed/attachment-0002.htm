<tt>
On&nbsp;Wed,&nbsp;Sep&nbsp;9,&nbsp;2009&nbsp;at&nbsp;4:39&nbsp;AM,&nbsp;Chris&nbsp;Jones&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;&lt;a&nbsp;href=&quot;mailto:cjones@mozilla.com&quot;&gt;cjones@mozilla.com&lt;/a&gt;&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
<br>
Aaron&nbsp;Boodman&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
On&nbsp;Tue,&nbsp;Sep&nbsp;8,&nbsp;2009&nbsp;at&nbsp;11:23&nbsp;AM,&nbsp;Chris&nbsp;Jones&lt;&lt;a&nbsp;href=&quot;mailto:cjones@mozilla.com&quot;&nbsp;target=&quot;_blank&quot;&gt;cjones@mozilla.com&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
In&nbsp;general,&nbsp;I&nbsp;agree&nbsp;with&nbsp;Rob&nbsp;about&nbsp;this&nbsp;proposal.&nbsp; What&nbsp;problem&nbsp;with&nbsp;storage&lt;br&gt;<br>
mutex&nbsp;as&nbsp;spec&#39;d&nbsp;today&nbsp;does&nbsp;your&nbsp;proposal&nbsp;solve?&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
The&nbsp;spec&nbsp;requires&nbsp;a&nbsp;single&nbsp;storage&nbsp;mutex&nbsp;for&nbsp;the&nbsp;entire&nbsp;UA.&nbsp;Therefore&lt;br&gt;<br>
in&nbsp;a&nbsp;MELUA&nbsp;a&nbsp;web&nbsp;page&nbsp;can&nbsp;become&nbsp;unresponsive&nbsp;while&nbsp;waiting&nbsp;for&nbsp;some&lt;br&gt;<br>
other&nbsp;page&nbsp;to&nbsp;give&nbsp;up&nbsp;the&nbsp;lock.&nbsp;This&nbsp;is&nbsp;not&nbsp;good&nbsp;and&nbsp;something&nbsp;we&nbsp;have&lt;br&gt;<br>
tried&nbsp;to&nbsp;avoid&nbsp;everywhere&nbsp;else&nbsp;in&nbsp;the&nbsp;spec.&lt;br&gt;<br>
&lt;br&gt;<br>
Attempts&nbsp;to&nbsp;address&nbsp;this&nbsp;by&nbsp;doing&nbsp;per-origin&nbsp;locks&nbsp;wind&nbsp;up&nbsp;with&lt;br&gt;<br>
deadlocks&nbsp;being&nbsp;possible.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
Aaron&nbsp;Boodman&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
On&nbsp;Tue,&nbsp;Sep&nbsp;8,&nbsp;2009&nbsp;at&nbsp;1:41&nbsp;AM,&nbsp;Robert&nbsp;O&#39;Callahan&lt;&lt;a&nbsp;href=&quot;mailto:robert@ocallahan.org&quot;&nbsp;target=&quot;_blank&quot;&gt;robert@ocallahan.org&lt;/a&gt;&gt;&lt;br&gt;<br>
wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
What&nbsp;is&nbsp;the&nbsp;intended&nbsp;semantics&nbsp;here?&nbsp;Chris&#39;&nbsp;explicit&nbsp;commitTransaction&lt;br&gt;<br>
would&lt;br&gt;<br>
throw&nbsp;an&nbsp;exception&nbsp;if&nbsp;the&nbsp;transaction&nbsp;was&nbsp;aborted&nbsp;due&nbsp;to&nbsp;data&lt;br&gt;<br>
inconsistency,&lt;br&gt;<br>
leaving&nbsp;it&nbsp;up&nbsp;to&nbsp;the&nbsp;script&nbsp;to&nbsp;retry&nbsp;---&nbsp;and&nbsp;making&nbsp;it&nbsp;clear&nbsp;to&nbsp;script&lt;br&gt;<br>
authors&nbsp;that&nbsp;non-storage&nbsp;side&nbsp;effects&nbsp;during&nbsp;the&nbsp;transaction&nbsp;are&nbsp;not&lt;br&gt;<br>
undone.&lt;br&gt;<br>
How&nbsp;would&nbsp;you&nbsp;handle&nbsp;transaction&nbsp;aborts?&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
Calls&nbsp;to&nbsp;transaction()&nbsp;are&nbsp;queued&nbsp;and&nbsp;executed&nbsp;serially&nbsp;per-origin&lt;br&gt;<br>
with&nbsp;exclusive&nbsp;access.&nbsp;There&nbsp;is&nbsp;no&nbsp;such&nbsp;thing&nbsp;as&nbsp;a&nbsp;transaction&nbsp;abort&lt;br&gt;<br>
because&nbsp;there&nbsp;cannot&nbsp;be&nbsp;consistency&nbsp;problems&nbsp;because&nbsp;of&nbsp;the&nbsp;serialized&lt;br&gt;<br>
access.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
No,&nbsp;transactions&nbsp;can&nbsp;still&nbsp;fail.&nbsp; They&nbsp;can&nbsp;fail&nbsp;in&nbsp;ways&nbsp;immediately&nbsp;hidden&lt;br&gt;<br>
from&nbsp;the&nbsp;script&nbsp;that&nbsp;requested&nbsp;them&nbsp;if&nbsp;the&nbsp;UA&nbsp;has&nbsp;to&nbsp;interrupt&nbsp;the&lt;br&gt;<br>
conceptually&nbsp;executing&nbsp;transaction&nbsp;in&nbsp;the&nbsp;ways&nbsp;enumerated&nbsp;in&nbsp;a&nbsp;separate&lt;br&gt;<br>
branch&nbsp;of&nbsp;this&nbsp;thread.&nbsp; Later&nbsp;script&nbsp;executions&nbsp;can&nbsp;observe&nbsp;inconsistent&lt;br&gt;<br>
state&nbsp;unless&nbsp;more&nbsp;is&nbsp;specified&nbsp;by&nbsp;your&nbsp;proposal.&lt;br&gt;<br>
&lt;br&gt;<br>
Transactions&nbsp;can&nbsp;also&nbsp;fail&nbsp;visibly&nbsp;if&nbsp;write-to-disk&nbsp;fails&nbsp;(probably&nbsp;also&nbsp;in&lt;br&gt;<br>
other&nbsp;ways&nbsp;I&nbsp;haven&#39;t&nbsp;considered).&nbsp; It&#39;s&nbsp;not&nbsp;clear&nbsp;what&nbsp;should&nbsp;happen&nbsp;wrt&nbsp;to&lt;br&gt;<br>
your&nbsp;proposal&nbsp;in&nbsp;this&nbsp;case.&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;<br>
If&nbsp;so,&nbsp;I&nbsp;agree&nbsp;with&nbsp;roc&#39;s&nbsp;responses&nbsp;to&nbsp;them&nbsp;that&nbsp;they&nbsp;could&nbsp;probably&lt;br&gt;<br>
be&nbsp;handled&nbsp;without&nbsp;surfacing&nbsp;errors&nbsp;to&nbsp;the&nbsp;developer.&lt;br&gt;<br>
&lt;br&gt;<br>
OTOH,&nbsp;I&#39;m&nbsp;not&nbsp;really&nbsp;against&nbsp;adding&nbsp;the&nbsp;concept&nbsp;of&nbsp;fallibility&nbsp;here.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex&quot;&gt;<br>
In&nbsp;fact,&nbsp;I&nbsp;believe&nbsp;that&nbsp;the&nbsp;&quot;Synchronous&nbsp;database&nbsp;API&quot;&nbsp;describes&nbsp;the&nbsp;same&lt;br&gt;<br>
transaction&nbsp;semantics&nbsp;as&nbsp;I&nbsp;proposed&nbsp;in&nbsp;the&nbsp;OP.&nbsp; That&nbsp;spec&nbsp;adds&nbsp;implicit&lt;br&gt;<br>
begin/commitTransaction&nbsp;and&nbsp;read-only&nbsp;transactions,&nbsp;but&nbsp;otherwise&nbsp;the&lt;br&gt;<br>
semantics&nbsp;are&nbsp;the&nbsp;same.&lt;br&gt;<br>
&lt;br&gt;<br>
So&nbsp;I&#39;d&nbsp;like&nbsp;to&nbsp;amend&nbsp;my&nbsp;original&nbsp;proposal&nbsp;to&nbsp;be&lt;br&gt;<br>
&lt;br&gt;<br>
 Use&nbsp;Synchronous&nbsp;Web&nbsp;Database&nbsp;API&nbsp;transaction&nbsp;semantics.&nbsp; Except&nbsp;do&nbsp;not&lt;br&gt;<br>
offer&nbsp;readTransaction:&nbsp;a&nbsp;transaction&nbsp;is&nbsp;implicitly&nbsp;a&nbsp;read-only&nbsp;transaction&lt;br&gt;<br>
if&nbsp;only&nbsp;getItem()&nbsp;is&nbsp;called&nbsp;on&nbsp;localStorage&nbsp;from&nbsp;within&lt;br&gt;<br>
localStorage.transaction().&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
Agree.&nbsp;That&nbsp;is&nbsp;what&nbsp;I&nbsp;was&nbsp;trying&nbsp;to&nbsp;propose,&nbsp;too.&nbsp;I&#39;m&nbsp;not&nbsp;sure&nbsp;where&lt;br&gt;<br>
we&nbsp;disagree&nbsp;:).&nbsp;Is&nbsp;it&nbsp;just&nbsp;that&nbsp;my&nbsp;proposal&nbsp;has&nbsp;no&nbsp;concept&nbsp;of&nbsp;errors?&lt;br&gt;<br>
I&#39;m&nbsp;not&nbsp;against&nbsp;adding&nbsp;them,&nbsp;mainly&nbsp;I&nbsp;was&nbsp;trying&nbsp;to&nbsp;keep&nbsp;my&nbsp;proposal&lt;br&gt;<br>
simple&nbsp;for&nbsp;purposes&nbsp;of&nbsp;discussion.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/div&gt;&lt;/blockquote&gt;<br>
&lt;br&gt;<br>
Ay,&nbsp;there&#39;s&nbsp;the&nbsp;rub:&nbsp;I&nbsp;think&nbsp;the&nbsp;disagreement&nbsp;is&nbsp;between&nbsp;&quot;mutex&quot;&nbsp;vs.&nbsp;&quot;transaction&quot;&nbsp;semantics.&nbsp; So&nbsp;far,&nbsp;I&nbsp;think&nbsp;perhaps&nbsp;&quot;mutex&quot;&nbsp;has&nbsp;been&nbsp;used&nbsp;as&nbsp;shorthand&nbsp;for&nbsp;&quot;transaction.&quot;&nbsp; But&nbsp;they&nbsp;aren&#39;t&nbsp;the&nbsp;same.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;<br>
I&nbsp;think&nbsp;we&nbsp;all&nbsp;agree&nbsp;that&nbsp;a&nbsp;script&nbsp;may&nbsp;fail&nbsp;to&nbsp;modify&nbsp;localStorage&nbsp;in&nbsp;some&nbsp;situations&nbsp;(irrespective&nbsp;of&nbsp;global&nbsp;mutex&nbsp;vs.&nbsp;per-domain&nbsp;mutex).&nbsp;One&nbsp;camp,&nbsp;wanting&nbsp;&quot;mutex&quot;&nbsp;semantics,&nbsp;would&nbsp;prefer&nbsp;to&nbsp;pretend&nbsp;that&nbsp;the&nbsp;failures&nbsp;never&nbsp;happen&nbsp;and&nbsp;let&nbsp;scripts&nbsp;clean&nbsp;up&nbsp;the&nbsp;mess&nbsp;(partially-applied&nbsp;changes)&nbsp;if&nbsp;they&nbsp;do&nbsp;occur.&nbsp; This&nbsp;is&nbsp;semantically&nbsp;broken,&nbsp;IMHO.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;<br>
The&nbsp;second&nbsp;camp,&nbsp;wanting&nbsp;&quot;transaction&quot;&nbsp;semantics,&nbsp;explicitly&nbsp;acknowledge&nbsp;to&nbsp;web&nbsp;authors&nbsp;that&nbsp;localStorage&nbsp;is&nbsp;fallible,&nbsp;guarantee&nbsp;that&nbsp;modifications&nbsp;to&nbsp;localStorage&nbsp;are&nbsp;atomic,&nbsp;and&nbsp;notify&nbsp;scripts&nbsp;when&nbsp;modifications&nbsp;can&#39;t&nbsp;be&nbsp;made&nbsp;atomically.&nbsp; This&nbsp;is&nbsp;the&nbsp;same&nbsp;approach&nbsp;taken&nbsp;by&nbsp;Web&nbsp;Database.&nbsp; IMHO,&nbsp;this&nbsp;is&nbsp;much&nbsp;better&nbsp;semantically&nbsp;because&nbsp;(i)&nbsp;it&nbsp;gives&nbsp;web&nbsp;apps&nbsp;stronger&nbsp;guarantees;&nbsp;and&nbsp;(ii)&nbsp;it&nbsp;makes&nbsp;the&nbsp;discussion&nbsp;about&nbsp;global&nbsp;mutex/per-domain&nbsp;mutex/non-blocking&nbsp;an&nbsp;implementation&nbsp;issue&nbsp;rather&nbsp;semantic&nbsp;issue,&nbsp;as&nbsp;it&nbsp;should&nbsp;be.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;<br>
Can&nbsp;those&nbsp;in&nbsp;the&nbsp;first&nbsp;camp&nbsp;explain&nbsp;why&nbsp;&quot;mutex&quot;&nbsp;semantics&nbsp;is&nbsp;better&nbsp;than&nbsp;&quot;transaction&quot;&nbsp;semantics?&nbsp; And&nbsp;why&nbsp;it&#39;s&nbsp;desirable&nbsp;to&nbsp;have&nbsp;one&nbsp;DB&nbsp;spec&nbsp;specify&nbsp;&quot;transaction&quot;&nbsp;semantics&nbsp;(Web&nbsp;Database)&nbsp;and&nbsp;a&nbsp;second&nbsp;specify&nbsp;&quot;mutex&quot;&nbsp;semantics&nbsp;(localStorage)?&lt;/blockquote&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;way&nbsp;I&nbsp;understand&nbsp;it,&nbsp;there&#39;s&nbsp;3&nbsp;camps...and&nbsp;I&nbsp;think&nbsp;they&#39;ve&nbsp;been&nbsp;abusing&nbsp;both&nbsp;the&nbsp;word&nbsp;transaction&nbsp;and&nbsp;mutex.&nbsp; We&nbsp;should&nbsp;probably&nbsp;all&nbsp;start&nbsp;being&nbsp;more&nbsp;precise&nbsp;with&nbsp;our&nbsp;wording&nbsp;in&nbsp;this&nbsp;respect.&nbsp; :-)&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Those&nbsp;who&nbsp;want pessimistic transactions.&nbsp; I.e.&nbsp;using&nbsp;locking&nbsp;so&nbsp;that&nbsp;you&nbsp;never&nbsp;need&nbsp;to&nbsp;do&nbsp;a&nbsp;rollback&nbsp;(because&nbsp;it&nbsp;can&nbsp;never&nbsp;&quot;fail&quot;).&nbsp; This&nbsp;would&nbsp;be&nbsp;compatible&nbsp;with&nbsp;either&nbsp;a&nbsp;sync&nbsp;or&nbsp;an&nbsp;async&nbsp;interface.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Those&nbsp;who&nbsp;optimistic&nbsp;transactions.&nbsp; I.e.&nbsp;rollback&nbsp;may&nbsp;happen.&nbsp; Either&nbsp;we&nbsp;need&nbsp;to&nbsp;restrict&nbsp;what&nbsp;can&nbsp;be&nbsp;done&nbsp;during&nbsp;a&nbsp;localStorage&nbsp;transaction&nbsp;or&nbsp;we&nbsp;need&nbsp;to&nbsp;have&nbsp;an&nbsp;exception&nbsp;that&nbsp;tells&nbsp;the&nbsp;script&nbsp;to&nbsp;undo&nbsp;itself.&nbsp; This&nbsp;was&nbsp;the&nbsp;original&nbsp;proposal,&nbsp;AFAICT.&nbsp; It&nbsp;would&nbsp;work&nbsp;with&nbsp;both&nbsp;a&nbsp;sync&nbsp;or&nbsp;an&nbsp;async&nbsp;interface.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Those&nbsp;who&nbsp;want&nbsp;a&nbsp;queue.&nbsp; I.e.&nbsp;those&nbsp;who&nbsp;want&nbsp;an&nbsp;asynchronous&nbsp;callback&nbsp;based&nbsp;interface&nbsp;and&nbsp;the&nbsp;UA&nbsp;will&nbsp;only&nbsp;call&nbsp;one&nbsp;callback&nbsp;at&nbsp;a&nbsp;time.&nbsp; Perhaps&nbsp;on&nbsp;a&nbsp;per-origin&nbsp;basis.&nbsp; Note&nbsp;that&nbsp;this&nbsp;can&nbsp;never&nbsp;&quot;fail&quot;,&nbsp;need&nbsp;to&nbsp;be&nbsp;rolled&nbsp;back,&nbsp;etc.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;believe&nbsp;Aaron&nbsp;is&nbsp;in&nbsp;the&nbsp;queue&nbsp;camp&nbsp;with&nbsp;me.&nbsp; I&#39;m&nbsp;becoming&nbsp;more&nbsp;and&nbsp;more&nbsp;convinced&nbsp;that&nbsp;Chromium&nbsp;should/will not&nbsp;implement&nbsp;the&nbsp;storage&nbsp;mutex&nbsp;at&nbsp;all&nbsp;(even&nbsp;for&nbsp;LocalStorage)&nbsp;unless&nbsp;we&nbsp;can&nbsp;come&nbsp;up&nbsp;with&nbsp;a&nbsp;way&nbsp;for&nbsp;event&nbsp;loops&nbsp;to&nbsp;not&nbsp;be&nbsp;blocked.&nbsp; And,&nbsp;as&nbsp;far&nbsp;as&nbsp;I&nbsp;can&nbsp;tell,&nbsp;Async&nbsp;interfaces&nbsp;are&nbsp;the&nbsp;only&nbsp;way&nbsp;to accomplish this.&lt;/div&gt;<br>
<br>
&lt;/div&gt;<br>

</tt>
