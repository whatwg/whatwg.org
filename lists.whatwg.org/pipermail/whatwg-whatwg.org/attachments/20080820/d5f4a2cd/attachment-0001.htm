<tt>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;On&nbsp;Wed,&nbsp;Aug&nbsp;20,&nbsp;2008&nbsp;at&nbsp;5:36&nbsp;PM,&nbsp;Ian&nbsp;Hickson&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&lt;ian@hixie.ch&gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;br&gt;<br>
I&#39;ve&nbsp;received&nbsp;feedback&nbsp;from&nbsp;a&nbsp;number&nbsp;of&nbsp;people&nbsp;requesting&nbsp;a&nbsp;rethink&nbsp;to&nbsp;the&lt;br&gt;<br>
API&nbsp;for&nbsp;creating&nbsp;and&nbsp;communicating&nbsp;with&nbsp;workers.&lt;br&gt;<br>
&lt;br&gt;<br>
Here&nbsp;is&nbsp;a&nbsp;skeleton&nbsp;of&nbsp;a&nbsp;new&nbsp;proposal.&nbsp;It&nbsp;makes&nbsp;the&nbsp;following&nbsp;changes:&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;*&nbsp;Shared&nbsp;workers&nbsp;and&nbsp;dedicated&nbsp;workers&nbsp;get&nbsp;their&nbsp;own&nbsp;interfaces,&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;inheriting&nbsp;from&nbsp;a&nbsp;common&nbsp;base&nbsp;interface,&nbsp;both&nbsp;for&nbsp;the&nbsp;global&nbsp;scope&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;objects&nbsp;and&nbsp;for&nbsp;the&nbsp;objects&nbsp;returned&nbsp;when&nbsp;they&nbsp;are&nbsp;created.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;*&nbsp;Shared&nbsp;workers&nbsp;get&nbsp;a&nbsp;port&nbsp;per&nbsp;connection.&nbsp;Dedicated&nbsp;workers&nbsp;don&#39;t&nbsp;get&nbsp;a&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;port,&nbsp;but&nbsp;they&nbsp;have&nbsp;a&nbsp;convenience&nbsp;method&nbsp;on&nbsp;the&nbsp;worker&nbsp;and&nbsp;on&nbsp;the&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;worker&#39;s&nbsp;global&nbsp;object&nbsp;that&nbsp;allows&nbsp;for&nbsp;easy&nbsp;creation&nbsp;of&nbsp;ports&nbsp;to&nbsp;send&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;threaded&nbsp;messages&nbsp;(direct&nbsp;replies).&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;*&nbsp;Uses&nbsp;constructors&nbsp;instead&nbsp;of&nbsp;factory&nbsp;methods&nbsp;to&nbsp;create&nbsp;workers.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;*&nbsp;Removes&nbsp;&#39;onload&#39;&nbsp;from&nbsp;the&nbsp;Worker&nbsp;objects.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;*&nbsp;Renamed&nbsp;&quot;onunload&quot;&nbsp;to&nbsp;&quot;onclose&quot;&nbsp;throughout.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;*&nbsp;Removes&nbsp;the&nbsp;&quot;closing&quot;&nbsp;boolean.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;*&nbsp;Adds&nbsp;a&nbsp;way&nbsp;to&nbsp;kill&nbsp;a&nbsp;dedicated&nbsp;worker.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
OUTSIDE&lt;br&gt;<br>
&lt;br&gt;<br>
//&nbsp;(abstract,&nbsp;never&nbsp;instantiated)&lt;br&gt;<br>
[NoInterfaceObject]&nbsp;interface&nbsp;Worker&nbsp;{&lt;br&gt;<br>
&nbsp;&nbsp;attribute&nbsp;EventListener&nbsp;onerror;&nbsp;//&nbsp;invoked&nbsp;if&nbsp;the&nbsp;worker&nbsp;fails&nbsp;to&nbsp;start&lt;br&gt;<br>
&nbsp;&nbsp;attribute&nbsp;EventListener&nbsp;onclose;&nbsp;//&nbsp;invoked&nbsp;if&nbsp;the&nbsp;worker&nbsp;closes&lt;br&gt;<br>
};&lt;br&gt;<br>
&lt;br&gt;<br>
interface&nbsp;DedicatedWorker&nbsp;:&nbsp;Worker&nbsp;{&lt;br&gt;<br>
&nbsp;&nbsp;void&nbsp;close();&nbsp;//&nbsp;kills&nbsp;the&nbsp;worker&nbsp;immediately,&nbsp;without&nbsp;cleanup&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Is&nbsp;the&nbsp;shutdown&nbsp;sequence&nbsp;initiated&nbsp;by&nbsp;this&nbsp;method&nbsp;call&nbsp;different&nbsp;then&nbsp;the&nbsp;shutdown&nbsp;sequence&nbsp;initiated&nbsp;by&nbsp;a&nbsp;call&nbsp;to&nbsp;self.close()&nbsp;from&nbsp;within&nbsp;the&nbsp;worker&nbsp;itself?&nbsp;&nbsp;The&nbsp;comment&nbsp;hints&nbsp;that&nbsp;it&nbsp;is...&nbsp;if&nbsp;so&nbsp;why?&lt;br&gt;<br>
&nbsp;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;&nbsp;//&nbsp;these&nbsp;all&nbsp;work&nbsp;the&nbsp;same&nbsp;as&nbsp;on&nbsp;MessagePorts:&lt;br&gt;<br>
&nbsp;&nbsp;attribute&nbsp;EventListener&nbsp;onmessage;&nbsp;//&nbsp;receives&nbsp;messages&nbsp;from&nbsp;the&nbsp;worker&lt;br&gt;<br>
&nbsp;&nbsp;boolean&nbsp;postMessage(in&nbsp;DOMString&nbsp;message);&lt;br&gt;<br>
&nbsp;&nbsp;boolean&nbsp;postMessage(in&nbsp;DOMString&nbsp;message,&nbsp;in&nbsp;MessagePort,&nbsp;port);&lt;br&gt;<br>
&nbsp;&nbsp;MessagePort&nbsp;startConversation(in&nbsp;DOMString&nbsp;message);&lt;br&gt;<br>
};&lt;br&gt;<br>
&lt;br&gt;<br>
interface&nbsp;SharedWorker&nbsp;:&nbsp;Worker&nbsp;{&lt;br&gt;<br>
&nbsp;&nbsp;readonly&nbsp;attribute&nbsp;MessagePort&nbsp;port;&nbsp;//&nbsp;local&nbsp;end&nbsp;of&nbsp;channel&nbsp;to&nbsp;worker&lt;br&gt;<br>
};&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
INSIDE&lt;br&gt;<br>
&lt;br&gt;<br>
//&nbsp;(abstract,&nbsp;never&nbsp;instantiated)&lt;br&gt;<br>
[NoInterfaceObject]&nbsp;interface&nbsp;WorkerGlobalScope&nbsp;{&lt;br&gt;<br>
&nbsp;&nbsp;void&nbsp;close();&lt;br&gt;<br>
&nbsp;&nbsp;attribute&nbsp;EventListener&nbsp;onclose;&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;&nbsp;readonly&nbsp;attribute&nbsp;WorkerGlobalScope&nbsp;self;&lt;br&gt;<br>
&nbsp;&nbsp;readonly&nbsp;attribute&nbsp;WorkerLocation&nbsp;location;&lt;br&gt;<br>
&nbsp;&nbsp;//&nbsp;also&nbsp;implements&nbsp;everything&nbsp;on&nbsp;WorkerUtils&lt;br&gt;<br>
};&lt;br&gt;<br>
&lt;br&gt;<br>
[NoInterfaceObject]&nbsp;interface&nbsp;DedicatedWorkerGlobalScope&nbsp;:&nbsp;WorkerGlobalScope&nbsp;{&lt;br&gt;<br>
&nbsp;&nbsp;//&nbsp;these&nbsp;all&nbsp;work&nbsp;the&nbsp;same&nbsp;as&nbsp;on&nbsp;MessagePorts:&lt;br&gt;<br>
&nbsp;&nbsp;attribute&nbsp;EventListener&nbsp;onmessage;&nbsp;//&nbsp;receives&nbsp;messages&nbsp;from&nbsp;the&nbsp;owner&lt;br&gt;<br>
&nbsp;&nbsp;boolean&nbsp;postMessage(in&nbsp;DOMString&nbsp;message);&lt;br&gt;<br>
&nbsp;&nbsp;boolean&nbsp;postMessage(in&nbsp;DOMString&nbsp;message,&nbsp;in&nbsp;MessagePort,&nbsp;port);&lt;br&gt;<br>
&nbsp;&nbsp;MessagePort&nbsp;startConversation(in&nbsp;DOMString&nbsp;message);&lt;br&gt;<br>
};&lt;br&gt;<br>
&lt;br&gt;<br>
[NoInterfaceObject]&nbsp;interface&nbsp;DedicatedWorkerGlobalScope&nbsp;:&nbsp;WorkerGlobalScope&nbsp;{&lt;br&gt;<br>
&nbsp;&nbsp;attribute&nbsp;EventListener&nbsp;onconnect;&nbsp;//&nbsp;called&nbsp;by&nbsp;createSharedWorker()&lt;br&gt;<br>
&nbsp;&nbsp;readonly&nbsp;attribute&nbsp;DOMString&nbsp;name;&lt;br&gt;<br>
};&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
CREATING&nbsp;WORKERS&lt;br&gt;<br>
&lt;br&gt;<br>
To&nbsp;created&nbsp;workes,&nbsp;use&nbsp;constructors:&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;var&nbsp;worker&nbsp;=&nbsp;new&nbsp;DedicatedWorker(url);&lt;br&gt;<br>
&nbsp;&nbsp;&nbsp;var&nbsp;service&nbsp;=&nbsp;new&nbsp;SharedWorker(name,&nbsp;url);&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;<br>
Is&nbsp;it&nbsp;possible&nbsp;for&nbsp;a&nbsp;worker&nbsp;(shared&nbsp;or&nbsp;dedicated)&nbsp;to&nbsp;reload&nbsp;itself?&lt;br&gt;&nbsp;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
Comments?&nbsp;&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;How&nbsp;do&nbsp;workers&nbsp;and&nbsp;appCaches&nbsp;interact?&lt;br&gt;&nbsp;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
<br>
--&lt;br&gt;<br>
Ian&nbsp;Hickson&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;U+1047E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\._.,--....,&#39;``.&nbsp;&nbsp;&nbsp;&nbsp;fL&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://ln.hixie.ch/&quot;&nbsp;target=&quot;_blank&quot;&gt;http://ln.hixie.ch/&lt;/a&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;U+263A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/,&nbsp;&nbsp;&nbsp;_..&nbsp;\&nbsp;&nbsp;&nbsp;_\&nbsp;&nbsp;;`._&nbsp;,.&lt;br&gt;<br>
Things&nbsp;that&nbsp;are&nbsp;impossible&nbsp;just&nbsp;take&nbsp;longer.&nbsp;&nbsp;&nbsp;`._.-(,_..&#39;--(,_..&#39;`-.;.&#39;&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>

</tt>
