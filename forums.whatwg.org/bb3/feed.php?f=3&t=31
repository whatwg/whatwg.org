<br />
<b>Strict Standards</b>:  Non-static method phpbb_feed_factory::init() should not be called statically in <b>/home/whatforums/forums.whatwg.org/bb3/feed.php</b> on line <b>66</b><br />
<b>[phpBB Debug] PHP Notice</b>: in file <b>/feed.php</b> on line <b>171</b>: <b>Cannot modify header information - headers already sent by (output started at /feed.php:66)</b><br />
<b>[phpBB Debug] PHP Notice</b>: in file <b>/feed.php</b> on line <b>172</b>: <b>Cannot modify header information - headers already sent by (output started at /feed.php:66)</b><br />
<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="https://forums.whatwg.org/bb3/feed.php?f=3&amp;t=31" />

<title>WHATWG forums</title>
<subtitle>A Forum for HTML Discussions: Semantics, DOM APIs, Microdata, Canvas, WebGL, Offline Web Applications, Local Storage, WebM Video, WebSockets, Web Workers, Drag and Drop, Forms, Accessibility, Syntax, News, Keywords, Yet More Keywords &amp; More.</subtitle>
<link href="https://forums.whatwg.org/bb3/index.php" />
<updated>2008-02-20T17:07:28+00:00</updated>

<author><name><![CDATA[WHATWG forums]]></name></author>
<id>https://forums.whatwg.org/bb3/feed.php?f=3&amp;t=31</id>
<entry>
<author><name><![CDATA[coh]]></name></author>
<updated>2008-02-20T17:07:28+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=614#p614</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=614#p614"/>
<title type="html"><![CDATA[Apple Patent]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=614#p614"><![CDATA[
After reading the wiki article stating that Apple owns patent rights to the Canvas tag, my concern is that this will lead to newer obfuscated implementations of similar ideas to Canvas, akin to the 50 billion different variates of ECMA.<br /><br />Canvas should be left as an optional plugin available from Apple, such as Silverlight and Flash, as both are patented technologies as well.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=255">coh</a> — Wed Feb 20, 2008 5:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kig]]></name></author>
<updated>2007-11-25T14:28:05+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=464#p464</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=464#p464"/>
<title type="html"><![CDATA[Re: Canvas suggestions]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=464#p464"><![CDATA[
<blockquote><div><cite>Jordan wrote:</cite><br />Also we DO need a way to get the CTM.<br /></div></blockquote><br /><br />+1. Might also be nice to have ctx.identity = function(){ this.setTransform(1,0,0,1,0,0) }<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=199">kig</a> — Sun Nov 25, 2007 2:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Ph0N37Ic5]]></name></author>
<updated>2007-10-28T04:37:57+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=456#p456</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=456#p456"/>
<title type="html"><![CDATA[Canvas suggestions]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=456#p456"><![CDATA[
There was a whole topic on the ML about clip regions, and it's behaviour, I guees I'm just trying to add simplicity for the authors.<br /><br />For the font thing, I have lost my reference, but I assume both is in use by different engines, anyway, it was more meant as an example than an argument in it self.<br /><br />With the whole winding order thing, I see your point. I haven't been able to check if the winding order is coherent on all browsers though, it might be an idea to include this in the standard, so all regular paths have a predefined (clockwise?) winding order.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=191">Ph0N37Ic5</a> — Sun Oct 28, 2007 4:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Philip]]></name></author>
<updated>2007-10-27T20:32:25+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=454#p454</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=454#p454"/>
<title type="html"><![CDATA[Canvas suggestions]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=454#p454"><![CDATA[
<blockquote class="uncited"><div><br />It's no stright foreward way of creating filled areas with holes in them.<br /></div></blockquote><br />In this particular case, you can get the &quot;wanted fill&quot; by making the triangle and rectangle have opposite winding orders, like <dl class="codebox"><dt>Code: </dt><dd><code>ctx.beginPath&#40;&#41;;<br />ctx.moveTo&#40;150, 150&#41;;<br />ctx.lineTo&#40;150, 100&#41;;<br />ctx.lineTo&#40;100, 100&#41;;<br />ctx.rect&#40;110, 110, 30, 30&#41;;<br />ctx.fill&#40;&#41;;</code></dd></dl><br /><br /><blockquote class="uncited"><div><br />This is the way true-type fonts are drawn<br /></div></blockquote><br /><a href="http://www.microsoft.com/typography/otspec/TTCH01.htm" class="postlink">This</a> says they use the non-zero winding rule, rather than even-odd.<br /><br /><a href="http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-May/011484.html" class="postlink">This message</a> also suggested adding a nonzero/evenodd switch. It looks like it's a fairly standard feature of graphics APIs and should be trivial to implement in most browsers.<br /><br /><blockquote class="uncited"><div><br />There is no easy way to create a non rectangular hole (transparent black) in a canvas. <br />This could be done by specifying a clip path and clearing with clearRect(), but with the apparent problems with clearing/discarding the clipping path, I don't really see this as a viable solution.<br /></div></blockquote><br />Which apparent problems are you referring to? I think you could do &quot;ctx.save(); ...make path...; ctx.clip(); ctx.clearRect(...); ctx.restore()&quot;, and the clip region would be reset at the end.<br /><br />&quot;ctx.save(); ctx.globalCompositeOperation = 'destination-out'; ctx.fillStyle = '#000'; ctx.fill(); ctx.restore();&quot; should [I think; untested...] also be equivalent to &quot;ctx.clear()&quot;. Then you can use shadows to get the 'feather' behaviour.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=91">Philip</a> — Sat Oct 27, 2007 8:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Ph0N37Ic5]]></name></author>
<updated>2007-10-27T11:13:17+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=453#p453</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=453#p453"/>
<title type="html"><![CDATA[Canvas suggestions]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=453#p453"><![CDATA[
Hmm, seems that my examples could be fixed with <span style="color: green">globalCompositingOperation</span> and an extra <span style="color: green">fill()</span>, so it was a poor example, my point still stands though, it would make things a bit easier.<br /><br />I have a polyline class that would benefit greatly from this. Part of my idea is to be able to get definition strings from the server via AJAX and add or change elements in the canvas fairly easy. Sometimes it is wanted to draw shapes with holes in on top of each other.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=191">Ph0N37Ic5</a> — Sat Oct 27, 2007 11:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Ph0N37Ic5]]></name></author>
<updated>2007-10-27T08:36:48+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=452#p452</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=452#p452"/>
<title type="html"><![CDATA[Some more stuff adding to the original post.]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=452#p452"><![CDATA[
<span style="font-weight: bold">Problem 1:</span><br />It's no stright foreward way of creating filled areas with holes in them.<br /><dl class="codebox"><dt>Code: </dt><dd><code>shape:      current fill:   wanted fill:<br /> \------|   \*******        \*******<br />  \     |    \******         \******<br />   \--| |     ******          \   **<br />   |\ | |     ******          *\  **<br />   | \| |     ******          **\ **<br />   |--\ |     ******          ***\**<br />       \|         \*              \*<br />        \          \               \<br /></code></dd></dl><br /><br /><span style="font-weight: bold">Code:</span><br /><dl class="codebox"><dt>Code: </dt><dd><code>ctx.beginPath&#40;&#41;;<br />ctx.moveTo&#40;100, 100&#41;;<br />ctx.lineTo&#40;150, 100&#41;;<br />ctx.lineTo&#40;150, 150&#41;;<br />ctx.rect&#40;110, 110, 30, 30&#41;;<br />ctx.fill&#40;&#41;;<br /></code></dd></dl><br /><br /><span style="font-weight: bold">Suggestion:</span><br />Add a <span style="color: green">fillMode</span> property allowing the programmer to choose between <span style="color: blue">'full'</span> mode, equal to the current mode(winding), and <span style="color: blue">'alternate'</span>(odd/even) mode allowing for the fill I wanted, and also allowing a subpath to create a hole in the fill areas of other subpaths.<br /><br /><span style="font-weight: bold">Processing model:</span><br />This would work pretty much equally to other similar properties, if an invalid value is entered, it is discarded/ignored without further processing, and the original value is retained. The odd/even filling mode does not treat subpaths as separate entities as such, but more as parts of the overall path.<br /><br /><span style="font-weight: bold">Why browsers would implement it:</span><br />Although this is a slightly more cycle hungry way of filling than the current implementation, it makes creating a lot of polyline based objects easier for the authors. Text for example could be presented as polylines and transformed in the same way.<br /><br /><span style="font-weight: bold">Why authors would want it:</span><br />As I have alredy said, this is an easier way of creating objects with holes in them. It is also a more regular way of handling paths in vector illustration programs, making it easier to export some compatible script.<br /><br /><span style="font-weight: bold">Why people would be desperate for it</span><br />This is the way true-type fonts are drawn, as far as I know. It would make it easier to make export functions for vector illustration programs. I would say that this is the only good reason for implementing subpaths in the first place, apart from keeping the authors from writing <span style="color: green">fill()</span> too many times.<br /><br /><br /><span style="font-weight: bold">Problem 2:</span><br />There is no easy way to create a non rectangular hole (transparent black) in a canvas.<br />This could be done by specifying a clip path and clearing with <span style="color: green">clearRect()</span>, but with the apparent problems with clearing/discarding the clipping path, I don't really see this as a viable solution.<br /><br /><span style="font-weight: bold">Suggestion:</span><br />Implement a <span style="color: green">clear()</span> function that works like <span style="color: green">fill()</span> but in stead of drawing clears the area specified by the path to transparent black. Further an argument could be implemented in order to create feathered edges or this could be implemented as a separate <span style="color: green">feather()</span> function.<br /><br /><span style="font-weight: bold">Processing model:</span><br />The <span style="color: green">clear()</span> function would work exactly like <span style="color: green">fill()</span>, with the only difference being that the marked area will be cleared to it's original state, rather than being filled with a colour. As for the <span style="color: green">feather()</span> function would probably be more work to implement as you would need to make an alpha gradient keeping track of the nearest point on the path.<br /><br /><span style="font-weight: bold">Why browsers would implement it:</span><br />The authors might want it.<br /><br /><span style="font-weight: bold">Why authors would want it:</span><br />It would make it easier to make some sort of overlay that reveals something behind it. Or to make animated frames for images. It would also make it easier to use multiple canvi on top of each other as a simple layer structure.<br /><br /><span style="font-weight: bold">Why people would be desperate for it:</span><br />They could create an animation with a randomly generated background. They could update the view based on difference, in stead of redrawing the whole picture. It would make it easy to cut off parts of drawn polylines.<br /><br /><br /><span style="font-weight: bold">Other stuff:</span><br /><ul><li>Layer support would be nice, but might be a bit more difficult to implement</li><li>Back buffer support would be neat, so one can draw the whole picture before doing a <span style="color: green">flip()</span>. It seems like this is implemented to a certain extent on some browsers already, but it isn't controllable by the programmer</li></ul><p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=191">Ph0N37Ic5</a> — Sat Oct 27, 2007 8:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[haustein]]></name></author>
<updated>2007-04-27T12:55:25+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=177#p177</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=177#p177"/>
<title type="html"><![CDATA[Re: Canvas suggestions]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=177#p177"><![CDATA[
<blockquote><div><cite>vladimir wrote:</cite><br />Yeah, drawString really needs to be done; I keep meaning to propose a spec based on some stuff that I discussed with hixie a few months ago, but haven't had a chance to yet.  Maybe in a few weeks.<br /></div></blockquote><br /><br />Hi Vladimir, <br /><br />I would really love to see some progress concerning drawString(). I have tried to write down a drawString() proposal, including some discussion of alternatives:<br /><a href="http://rhino-canvas.sourceforge.net/www/drawstring.html" class="postlink">http://rhino-canvas.sourceforge.net/www/drawstring.html</a><br /><br />Perhaps if you do not have the time to write a proposal for the spec right now you can just highlight some key points of your discussion in some form?<br /><br />Best regards,<br />Stefan<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=82">haustein</a> — Fri Apr 27, 2007 12:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jordan]]></name></author>
<updated>2007-04-20T21:42:39+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=142#p142</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=142#p142"/>
<title type="html"><![CDATA[Re: Canvas suggestions]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=142#p142"><![CDATA[
<blockquote><div><cite>vladimir wrote:</cite><br />Great suggestions!  Some comments, at least from my point of view.  I don't know how well this will work on the forums -- it would be good to get someone from Apple and Opera at least to chime in about their implementations, and I don't know if they're following the forums -- but we'll see.<br /></div></blockquote><br />I hope they will come as well. I thought the forums were more user friendly (with ability to edit posts, and read more than one message at once), and thus we could have feedback from more people.<br /><br /><blockquote><div><cite>vladimir wrote:</cite><br />Resetting the clipping path would be straightforward; a resetClip() method could be done. union/replace/subtract/xor could be hard, though; certainly for mozilla to implement it, we'd have to rasterize the clip and track it separately, and convert drawing operations with a complex clip into rendering to a temporary surface and a mask by the clip surface.<br /></div></blockquote><br />resetClip() would be much appreciated. For the clipping path, it can actually mainly be &quot;emulated&quot; with globalCompositeOperation, wich is already implemented. Applications could use a hidden canvas as a temporary buffer, and then copy it to the actual canvas, but it would be significantly more overhead to use (and probably way slower).<br /><br />Isn't there a way for implementations to reuse the code of globalCompositeOperation to do this with clipping paths? (even if new operations are not as efficient as the simple union, it would still be better than emulating them <img src="https://forums.whatwg.org/bb3/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /> )<br /><br /><blockquote><div><cite>vladimir wrote:</cite><br />Something that could alleviate the need for union/etc. would be to allow the setting of an even-odd fill rule instead of winding. This would let you do things like clip to the region left behind by punching a circle into a rectangle, which would be hard to do right now.<br /></div></blockquote><br />Hm yes, though you cannot add something then substract something else with that, am i wrong?<br />Or do you mean that a single path could use different fill rules for each of its subpath?<br /><br /><blockquote><div><cite>vladimir wrote:</cite><br />I don't really have an opinion on this, but in what situations is reading the current color desirable?  If the particular app needs to know the current color it can always track it itself; it seems like it would be simpler for apps that need this functionality to do that tracking than to change the spec.<br /></div></blockquote><br />I don't know. <img src="https://forums.whatwg.org/bb3/images/smilies/icon_confused.gif" alt=":?" title="Confused" /><br />But the current way it is right now feels overly complex, especially for a specification that aims to be simple. If a way to read colors is provided, and it is complex enough that there is a need to keep track of it by hand, then there is no point. <img src="https://forums.whatwg.org/bb3/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><br />Also, we can hope that few applications have already implemented parsing rgba/#... from that property yet, so maybe changing what it returns to be an array would not break too many things? (and anyway if they had implemented it, updating to support the array way as well should be easier than the other way).<br /><br /><blockquote><div><cite>vladimir wrote:</cite><br />Sure, we could do that.  What do you mean by orientation, though?<br /></div></blockquote><br />Sorry, i wanted to say the angle of the last subpath at the last point. Err... the angle of the tangent to the last subpath command drawn at the last point drawn. It's not mandatory, but it somehow makes sense to provide it if we give a way to retrieve the position of the last point. I thought the implementation is already able to calculate that because of the need for miter limits and such, so it would not be too complex as well.<br /><br />We agree about transformations <img src="https://forums.whatwg.org/bb3/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br />Also, a getTransformMatrix() method would be nice too. <img src="https://forums.whatwg.org/bb3/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><br /><br /><blockquote><div><cite>vladimir wrote:</cite><br />Yeah, drawString really needs to be done; I keep meaning to propose a spec based on some stuff that I discussed with hixie a few months ago, but haven't had a chance to yet. Maybe in a few weeks.<br /></div></blockquote><br />Well, you probably know way better than me about that, so i'll leave that to you. <img src="https://forums.whatwg.org/bb3/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=67">Jordan</a> — Fri Apr 20, 2007 9:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[vladimir]]></name></author>
<updated>2007-04-20T03:54:33+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=138#p138</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=138#p138"/>
<title type="html"><![CDATA[Re: Canvas suggestions]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=138#p138"><![CDATA[
Great suggestions!  Some comments, at least from my point of view.  I don't know how well this will work on the forums -- it would be good to get someone from Apple and Opera at least to chime in about their implementations, and I don't know if they're following the forums -- but we'll see.<br /><br /><ul><span style="font-weight: bold">Request for other operations than intersection for clipping path</span> (like union, replace, substract and xor?). It seems it would be difficult to implement on some systems due to graphic API limitations, though.<br />At least, a way to reset the clipping path to the full canvas without having to call save() / restore() each time would be appreciated.</ul><br />Resetting the clipping path would be straightforward; a resetClip() method could be done.  union/replace/subtract/xor could be hard, though; certainly for mozilla to implement it, we'd have to rasterize the clip and track it separately, and convert drawing operations with a complex clip into rendering to a temporary surface and a mask by the clip surface.<br /><br />Something that could alleviate the need for union/etc. would be to allow the setting of an even-odd fill rule instead of winding.  This would let you do things like clip to the region left behind by punching a circle into a rectangle, which would be hard to do right now.<br /><br /><ul><span style="font-weight: bold">A better way to read colors.</span> Return an array[4] instead of a string?<br />Actually the properties may fully behave like an array[4] if it is a color?<br />But setting to strings of format #xxxxxx and rgba(...) would still be allowed for backward compatibility?</ul><br />I don't really have an opinion on this, but in what situations is reading the current color desirable?  If the particular app needs to know the current color it can always track it itself; it seems like it would be simpler for apps that need this functionality to do that tracking than to change the spec.<br /><br /><ul><span style="font-weight: bold">Path API</span>: a way to get the last point of the last subpath drawn and its orientation? Not absolutely needed, but shouldn't be too hard to implement, without breaking anything.</ul><br />Sure, we could do that.  What do you mean by orientation, though?<br /><br /><ul><span style="font-weight: bold">Transformations</span>: Change the way transformations work to support the Firefox-ish / Safari-ish way? The way it is currently described in the spec is only implemented in Opera for now, and seems less versatile (and creates more overhead for implementations, it seems ;)).<br />(By the way, why was it choosen to be that way in the spec if it was already implemented by Apple the other way around? Is there a good reason? Does someone know?)<br />Also we DO need a way to get the CTM.</ul><br /><br />It's entirely possible that this totally slipped by when we were reading over the spec as Hixie wrote it; there were a few other examples of this, unfortunately.  Implementing it in the way the spec states wouldn't be particularily difficult, even given an underlying graphics API that transforms the path as path commands are added -- you'd just have to buffer the path operations and then replay them whenever any drawing operation that needs the path is called, so that the path is created with the current CTM.<br /><br />However, I'd much rather the spec be changed, not only due to less work for me ;) but also because as you say it's a little more flexible and IMO more straightforward for developers.<br /><br /><blockquote class="uncited"><div><br />I think i have forgotten nothing important, except drawString(), but this deserves a topic on its own. ;)<br />BTW, i didn't want to create too much topics to avoid proliferation, but maybe a small topic for each request would have been easier to keep track of? :-/<br /></div></blockquote><br /><br />Yeah, drawString really needs to be done; I keep meaning to propose a spec based on some stuff that I discussed with hixie a few months ago, but haven't had a chance to yet.  Maybe in a few weeks.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=70">vladimir</a> — Fri Apr 20, 2007 3:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jordan]]></name></author>
<updated>2007-04-18T20:58:32+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=131#p131</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=131#p131"/>
<title type="html"><![CDATA[Canvas suggestions]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=31&amp;p=131#p131"><![CDATA[
Continuing the discussion started on the ML.<br />For more details the first message is <a href="http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-April/010916.html" class="postlink">here</a>.<br /><br />Here is a small summary that i believe representative of what was said:<br /><ul><span style="font-weight: bold">Request for other operations than intersection for clipping path</span> (like union, replace, substract and xor?). It seems it would be difficult to implement on some systems due to graphic API limitations, though.<br />At least, a way to reset the clipping path to the full canvas without having to call save() / restore() each time would be appreciated.</ul><ul><span style="font-weight: bold">A better way to read colors.</span> Return an array[4] instead of a string?<br />Actually the properties may fully behave like an array[4] if it is a color?<br />But setting to strings of format #xxxxxx and rgba(...) would still be allowed for backward compatibility?</ul><ul><span style="font-weight: bold">Path API</span>: a way to get the last point of the last subpath drawn and its orientation? Not absolutely needed, but shouldn't be too hard to implement, without breaking anything.</ul><ul><span style="font-weight: bold">Transformations</span>: Change the way transformations work to support the Firefox-ish / Safari-ish way? The way it is currently described in the spec is only implemented in Opera for now, and seems less versatile (and creates more overhead for implementations, it seems <img src="https://forums.whatwg.org/bb3/images/smilies/icon_wink.gif" alt=";)" title="Wink" />).<br />(By the way, why was it choosen to be that way in the spec if it was already implemented by Apple the other way around? Is there a good reason? Does someone know?)<br />Also we DO need a way to get the CTM.</ul><br /><br />I think i have forgotten nothing important, except drawString(), but this deserves a topic on its own. <img src="https://forums.whatwg.org/bb3/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br />BTW, i didn't want to create too much topics to avoid proliferation, but maybe a small topic for each request would have been easier to keep track of? :-/<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=67">Jordan</a> — Wed Apr 18, 2007 8:58 pm</p><hr />
]]></content>
</entry>
</feed>