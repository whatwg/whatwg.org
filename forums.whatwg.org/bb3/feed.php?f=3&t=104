<br />
<b>Strict Standards</b>:  Non-static method phpbb_feed_factory::init() should not be called statically in <b>/home/whatforums/forums.whatwg.org/bb3/feed.php</b> on line <b>66</b><br />
<b>[phpBB Debug] PHP Notice</b>: in file <b>/feed.php</b> on line <b>171</b>: <b>Cannot modify header information - headers already sent by (output started at /feed.php:66)</b><br />
<b>[phpBB Debug] PHP Notice</b>: in file <b>/feed.php</b> on line <b>172</b>: <b>Cannot modify header information - headers already sent by (output started at /feed.php:66)</b><br />
<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="https://forums.whatwg.org/bb3/feed.php?f=3&amp;t=104" />

<title>WHATWG forums</title>
<subtitle>A Forum for HTML Discussions: Semantics, DOM APIs, Microdata, Canvas, WebGL, Offline Web Applications, Local Storage, WebM Video, WebSockets, Web Workers, Drag and Drop, Forms, Accessibility, Syntax, News, Keywords, Yet More Keywords &amp; More.</subtitle>
<link href="https://forums.whatwg.org/bb3/index.php" />
<updated>2010-05-19T11:19:05+00:00</updated>

<author><name><![CDATA[WHATWG forums]]></name></author>
<id>https://forums.whatwg.org/bb3/feed.php?f=3&amp;t=104</id>
<entry>
<author><name><![CDATA[mskinner]]></name></author>
<updated>2010-05-19T11:19:05+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=5890#p5890</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=5890#p5890"/>
<title type="html"><![CDATA[New Element Suggestion - Inverse of NOSCRIPT]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=5890#p5890"><![CDATA[
This topic was concluded in 2007. <img src="https://forums.whatwg.org/bb3/images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /><p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=125">mskinner</a> — Wed May 19, 2010 11:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[luzagodom]]></name></author>
<updated>2010-05-19T10:12:13+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=5889#p5889</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=5889#p5889"/>
<title type="html"><![CDATA[New Element Suggestion - Inverse of NOSCRIPT]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=5889#p5889"><![CDATA[
mskinner wrote: <br />* What is the problem you are trying to solve? <br />There is a useful element NOSCRIPT that can display content based upon JavaScript not being enabled (or not being present if using lynx). <br /><br />There doesn't appear to be an element to display content based upon JavaScript being enabled, and optionally based upon the version of JavaScript that the user agent supports. Some people get around this by using CSS visibility/display when the server serves up a page, and requiring the onload event to set the div to visible/block. <br />It's not clear to me from the above what the problem actually is. <br /><br />If you want different styling when scripting is enabled or not, you can e.g. use &lt;noscript&gt;&lt;link rel=stylesheet&gt;&lt;/noscript&gt; or &lt;script&gt; document.body.className += &quot; js-enabled&quot; &lt;/script&gt; and then prefix the relevant selectors with .js-enabled. <br /><br />If you want to use different markup when scripting is enabled then you can replace some parts of the DOM with scripting. <br /><br />mskinner wrote: <br />* What is the feature you are suggesting to help solve it? <br />I'm not sure on a suitable element name, but a workmate joked it should be YESSCRIPT. I'm completely open to suggestions for the element name and attributes... <br /><br />eg: <br />Code: <br /><br />&lt;yesscript minver=&quot;1.2&quot;  maxver=&quot;*&quot;&gt; <br />&lt;!--Display super duper JavaScript 1.2 panel that does something cool--&gt; <br />&lt;/yesscript&gt; <br /> <br /><br /><br />* What is the processing model for that feature, including error handling? <br />The NOSCRIPT element would behave the same as it does currently, so lets forget about that. <br /><br />User agents not supporting JavaScript, or with JavaScript disabled would need to ignore content inside the YESSCRIPT element. <br />How do you make it degrade in existing UAs?<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=1186">luzagodom</a> — Wed May 19, 2010 10:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nog_lorp]]></name></author>
<updated>2010-05-17T09:37:57+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=5878#p5878</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=5878#p5878"/>
<title type="html"><![CDATA[New Element Suggestion - Inverse of NOSCRIPT]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=5878#p5878"><![CDATA[
Maybe call it ifscript instead? Letter-runs in all lower case unspaced type is a bit of a pain.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=1178">nog_lorp</a> — Mon May 17, 2010 9:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zcorpan]]></name></author>
<updated>2007-09-10T23:05:20+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=422#p422</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=422#p422"/>
<title type="html"><![CDATA[New Element Suggestion - Inverse of NOSCRIPT]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=422#p422"><![CDATA[
<blockquote><div><cite>bfrohs wrote:</cite><br />As an afterthought, I can see why the language attribute was removed...As zcorpan stated above, even if a browser 'supports' a certain version, it may not support everything in that version.<br /></div></blockquote>Indeed. (Though that's not the reason the language attribute was deprecated, and you can still specify version using type=&quot;&quot; by having a version parameter.) <br /><blockquote><div><cite>bfrohs wrote:</cite><br />That is why I propose UAs <span style="font-weight: bold">must</span> support everything in a JS version in order to claim to support it.<br /></div></blockquote>But this doesn't work. Browsers never support everything in one go, they add support for new stuff incrementally, and even if they believe to support everything they will still have bugs, so you can never trust that if a UA declares to support X that it actually does so fully and correctly. You also have the scenario where a particular UA supports the feature you want to use but not some other feature that is in the same &quot;version&quot;, and so won't run your script even though it would be capable.<br /><blockquote><div><cite>bfrohs wrote:</cite><br />A possibility to allow for less support than full would to release multiple versions of JavaScript...for example, one version would be a full version...another version would be some of the most used functions...another version would have functions that a mobile device could support (Cell Phone for example). It seems like a pain, but I believe in the end it would end the trouble of having broken websites. After all, we're trying to advance the web, not just make it more confusing.<br /></div></blockquote>This is where the idea starts to get hairy. Multiply the number of versions you introduce with the number of UAs and that is the mess you'll have to deal with.<br /><br />The better approach, IMHO, is to: <ol style="list-style-type: decimal"><li>Make the page &quot;work&quot; for UAs that only support HTML and HTTP (if necessary for your purpose)</li><li>Add client side scripting enhancements where you check that each feature is implemented and works correctly (if you think some UAs will have bugs) before you use it (rather than trusting what the UA claims it supports).</li></ol><br />If you do this, you don't need to know what &quot;version&quot; the browser supports. It doesn't matter. You only check the features you use before using them. It doesn't even make a difference whether scripting is enabled or not.<br /><br />Also note that the DOM has something called <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMFeatures" class="postlink">feature strings</a>, where you can see whether the UA claims to support a specific feature or version of something, but no-one uses it (probably because it is unreliable -- it suffers from the same problems as this proposal).<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=4">zcorpan</a> — Mon Sep 10, 2007 11:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bfrohs]]></name></author>
<updated>2007-09-10T05:23:09+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=421#p421</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=421#p421"/>
<title type="html"><![CDATA[New Element Suggestion - Inverse of NOSCRIPT]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=421#p421"><![CDATA[
Yes, it is IE-specific, but it is a good idea...as much as I hate to say it, Microsoft may have something here. JavaScript would work perfectly in this case...except what we're trying to find out is if the browser even supports JS, and what version, so conditional statements would be the best way to do this browser-side.<br /><br />I would prefer the UA sending the JavaScript information direction to the server though, as I have always been one for having clean code presented to the user.<br /><br /><br />As an afterthought, I can see why the language attribute was removed...As zcorpan stated above, even if a browser 'supports' a certain version, it may not support everything in that version. That is why I propose UAs <span style="font-weight: bold">must</span> support everything in a JS version in order to claim to support it. A possibility to allow for less support than full would to release multiple versions of JavaScript...for example, one version would be a full version...another version would be some of the most used functions...another version would have functions that a mobile device could support (Cell Phone for example). It seems like a pain, but I believe in the end it would end the trouble of having broken websites. After all, we're trying to advance the web, not just make it more confusing.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=94">bfrohs</a> — Mon Sep 10, 2007 5:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mskinner]]></name></author>
<updated>2007-09-10T03:06:04+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=420#p420</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=420#p420"/>
<title type="html"><![CDATA[New Element Suggestion - Inverse of NOSCRIPT]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=420#p420"><![CDATA[
Hi Bfrohs,<br /><br />Thanks for the comment.<br /><br />I was thinking that the contents of yesscript would primarily be HTML elements, but script block would be acceptable too. Your HTML commented example is similar to what was used back in the day:<br /><dl class="codebox"><dt>Code: </dt><dd><code>&lt;script language=&quot;javascript1.2&quot;&gt;<br /></code></dd></dl><br />However now the language attribute has been deprecated. Now we are using the following, which doesn't discriminate based upon the version that the UA supports (which kinda sucks):<br /><dl class="codebox"><dt>Code: </dt><dd><code>&lt;script type=&quot;text/javascript&quot;&gt;<br /></code></dd></dl><br /><br />I also have a feeling that the HTML conditional comments are Internet Explorer specific (please correct me if I am wrong):<br /><a href="http://msdn2.microsoft.com/en-us/library/ms537512.aspx" class="postlink">http://msdn2.microsoft.com/en-us/library/ms537512.aspx</a><br /><br />I agree that UAs sending the JS version would be neat. You could limit it to one variable - the version. A value of zero could mean that JavaScript is disabled? User agents already send the web server info on whether they accept HTML, XHTML (application/xhtml+xml), HTTP version supported and gzip/deflate compression - I don't know why JavaScript couldn't have something similar.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=125">mskinner</a> — Mon Sep 10, 2007 3:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bfrohs]]></name></author>
<updated>2007-09-09T23:25:24+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=418#p418</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=418#p418"/>
<title type="html"><![CDATA[New Element Suggestion - Inverse of NOSCRIPT]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=418#p418"><![CDATA[
Here is a possibility for backwards compatibility.<br /><br />&lt;yesscript minver=&quot;1.2&quot;  maxver=&quot;*&quot;&gt;<br />&lt;!--Display super duper JavaScript 1.2 panel that does something cool--&gt;<br />&lt;/yesscript&gt;<br /><br />turns into<br /><br />&lt;!--[if jsver 1.2-*]&gt;<br />&lt;script type=&quot;text/javascript&gt;<br />&lt;!--Display super duper JavaScript 1.2 panel that does something cool--&gt;<br />&lt;/script&gt;<br />&lt;![endif]--&gt;<br /><br /><br />Also, on a side-note, I believe UAs should send what version of JavaScript they support (currently using) as well as if scripting is enabled. This would allow for PHP (or another back-end language) to send different javascript code. This would also be highly backward compatible...even more-so than the example above. If the server received the two above variables (jsver and jsenabled), it knows that it is safe to provide javascript of that version to the browser. If the UA does not provide those variables (if either is missing), the server sends non-javascript pages. It may be difficult for those just starting out in the field, but would be excellent for experienced developers/designers.<br /><br />If the above feature (sending variables to server) is implemented, this would allow for UAs to catch up on current standards. I believe the UA <span style="font-weight: bold">must</span> not send the JavaScript Version unless the UA supports <span style="font-weight: bold">all</span> of the language version. This would enhance the experience of the visitor to the website as well as the designer/programmer.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=94">bfrohs</a> — Sun Sep 09, 2007 11:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zcorpan]]></name></author>
<updated>2007-09-04T09:56:36+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=412#p412</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=412#p412"/>
<title type="html"><![CDATA[New Element Suggestion - Inverse of NOSCRIPT]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=412#p412"><![CDATA[
The problem is that scripting may be enabled and the version is supported but the script still uses e.g. unsupported DOM APIs. You don't know if the script is actually supported without running it, and when you run it you could replace the &quot;noscript&quot; content with your fancy &quot;yesscript&quot; content using the script. This way you can never get into a situation where you show the &quot;yesscript&quot; content but it doesn't work because something in the script wasn't supported after all.<br /><br />You also haven't explained how it is supposed to be implemented or what the backwards compatibility story is.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=4">zcorpan</a> — Tue Sep 04, 2007 9:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mskinner]]></name></author>
<updated>2007-09-04T01:36:26+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=411#p411</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=411#p411"/>
<title type="html"><![CDATA[Re: New Element Suggestion - Inverse of NOSCRIPT]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=411#p411"><![CDATA[
Hi, thanks for your response.<br /><br /><blockquote><div><cite>zcorpan wrote:</cite><br /><blockquote><div><cite>mskinner wrote:</cite><span style="font-weight: bold">* What is the problem you are trying to solve?</span><br />There is a useful element NOSCRIPT that can display content based upon JavaScript not being enabled (or not being present if using lynx).<br /><br />There doesn't appear to be an element to display content based upon JavaScript being enabled, and optionally based upon the version of JavaScript that the user agent supports. Some people get around this by using CSS visibility/display when the server serves up a page, and requiring the onload event to set the div to visible/block.<br /></div></blockquote><br />It's not clear to me from the above what the problem actually is.<br /><br />If you want different styling when scripting is enabled or not, you can e.g. use &lt;noscript&gt;&lt;link rel=stylesheet&gt;&lt;/noscript&gt; or &lt;script&gt; document.body.className += &quot; js-enabled&quot; &lt;/script&gt; and then prefix the relevant selectors with .js-enabled.<br /><br />If you want to use different markup when scripting is enabled then you can replace some parts of the DOM with scripting.<br /></div></blockquote><br />I realise this, however requiring script to style the body or it's contents is not elegant, and ultimately increases the time it takes for browsers to rendering pages. We have a noscript element that displays content when scripting is not available (or disabled) - I think it makes sense to have another element that displays content if script is present and enabled - and have it optionally dependent upon script versions supported by the UA.<br /><br /><blockquote><div><cite>zcorpan wrote:</cite><br /><blockquote><div><cite>mskinner wrote:</cite><span style="font-weight: bold">* What is the feature you are suggesting to help solve it?</span><br />I'm not sure on a suitable element name, but a workmate joked it should be YESSCRIPT. I'm completely open to suggestions for the element name and attributes...<br /><br />eg:<br /><dl class="codebox"><dt>Code: </dt><dd><code>&lt;yesscript minver=&quot;1.2&quot;  maxver=&quot;*&quot;&gt;<br />&lt;!--Display super duper JavaScript 1.2 panel that does something cool--&gt;<br />&lt;/yesscript&gt;<br /></code></dd></dl><br /><br /><span style="font-weight: bold">* What is the processing model for that feature, including error handling?</span><br />The NOSCRIPT element would behave the same as it does currently, so lets forget about that.<br /><br />User agents not supporting JavaScript, or with JavaScript disabled would need to ignore content inside the YESSCRIPT element.<br /></div></blockquote>How do you make it degrade in existing UAs?<br /></div></blockquote><br />I don't really know... anybody have any suggestions? I assume the existing UAs would ignore these elements and render the markup inside (this might be an issue or still require scripted styling).<br /><br /><blockquote><div><cite>zcorpan wrote:</cite><br /><blockquote><div><cite>mskinner wrote:</cite>User agents with JavaScript enabled should look for the optional attributes minver/maxver. If minver is 1.2 and maxver is not present (or an asterisk or something), and the user agent has JavaScript 1.5, then the user agent would render the YESSCRIPT content immediately.<br /><br />I would think YESSCRIPT would contain block level elements.<br /><br /><span style="font-weight: bold">* Why do you think browsers would implement this feature?</span><br />To make it easier (or more pleasant) for users to experience web sites based upon the JavaScript capabilities of said browsers.<br /></div></blockquote> I'm not convinced. <img src="https://forums.whatwg.org/bb3/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /></div></blockquote><br />Do'h <img src="https://forums.whatwg.org/bb3/images/smilies/icon_wink.gif" alt=";-)" title="Wink" /><br /><br /><blockquote><div><cite>zcorpan wrote:</cite><br /><blockquote><div><cite>mskinner wrote:</cite>For an example, say you loaded <a href="http://www.xhtmlized.com" class="postlink">http://www.xhtmlized.com</a> without JavaScript enabled, the (JavaScript dependent) pages/days sliders would not be visible - and this is made possible by an element, not by JavaScript (which isn't enabled in this case anyway).<br /></div></blockquote> Without JS I still get some information, namely what it costs for 1 page in 7 days, and the sliders indicate that pages and days are variable. To make it more useful without JS you don't hide it altogether, you make a form out of it and let the server calculate the cost for other pages/days combinations (and then override it with client side script, i.e. progressive enhancement). So it's not clear to me that your proposed feature would help in this case at all.<br /><br /><blockquote><div><cite>mskinner wrote:</cite><br /><span style="font-weight: bold">* Why do you think authors would use this feature?</span><br />To support accessible sites supporting JavaScript and script-less operation with the same markup, and no dependency on JavaScript to hide/show content based upon the user agent's JavaScript capabilities.<br /></div></blockquote> Doesn't your proposed feature require different markup for the scripted and non-scripted cases? In any case, it is already possible to create accessible sites JavaScript and script-less operation with the same markup, by not using &lt;noscript&gt; but instead starting from functional markup involving the server to do scripted stuff and using client side script as an enhancement.<br /></div></blockquote><br />I realise the server can be used, however this places more load on the server - and assumes that dynamic pages are permitted by the hosting company/environment. I just think it would be easier for the browser to decide what it should render based upon it's capabilities - without using server or client side scripting.<br /><br /><blockquote><div><cite>zcorpan wrote:</cite><br /><blockquote><div><cite>mskinner wrote:</cite><span style="font-weight: bold">* What evidence is there that this feature is desparately needed?</span><br />These days countries like AU, GB and US have DDA/508 laws requiring accessible sites. I develop an ecommerce application, and based upon the accessibility guidelines such as:<br /><blockquote class="uncited"><div>6.3 Ensure that pages are usable when scripts, applets, or other programmatic objects are turned off or not supported. If this is not possible, provide equivalent information on an alternative accessible page. [Priority 1]<br /></div></blockquote><br /><br />we need to ensure that our application is accessible to all regardless of JavaScript being present, and the JavaScript version. Requiring JavaScript to display JavaScript specific controls/panels etc. seems like a workaround - when an element would be more elegant.<br /><br />I see JavaScript getting more widespread, more governments requiring accessible content and sites paying attention to accessibility. A YESSCRIPT style element would make the lives of developers easier, and hopefully websites more usable to users.<br /><br />As stated previously, I'm completely open to suggestions on the element name and attribute names. I'm interested in hearing what others think, and if there are any improvements that can be made. If it's a bad idea, or I have completely overlooked something major I'm sure you'll let me know <img src="https://forums.whatwg.org/bb3/images/smilies/icon_wink.gif" alt=";-)" title="Wink" /></div></blockquote>Accessibility guidelines or laws don't support your proposal because it's already possible to create existing pages without it, as I mentioned above.</div></blockquote><br />It is possible, but I don't consider it elegant - more like it's a workaround or an afterthought. Noscript is elegant - I wish I had the internet when it was first suggested so I could have suggested this. Newer/future web developers will probably find yesscript(?) easier to understand and implement.<br /><br />I'm thinking this element might need a type attribute so script language and version requirements could be expressed to the UA? Seems like I still have convincing to do - I will have to put some thought into it <img src="https://forums.whatwg.org/bb3/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />--Mike--<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=125">mskinner</a> — Tue Sep 04, 2007 1:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zcorpan]]></name></author>
<updated>2007-09-03T22:12:29+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=410#p410</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=410#p410"/>
<title type="html"><![CDATA[Re: New Element Suggestion - Inverse of NOSCRIPT]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=410#p410"><![CDATA[
<blockquote><div><cite>mskinner wrote:</cite><br /><span style="font-weight: bold">* What is the problem you are trying to solve?</span><br />There is a useful element NOSCRIPT that can display content based upon JavaScript not being enabled (or not being present if using lynx).<br /><br />There doesn't appear to be an element to display content based upon JavaScript being enabled, and optionally based upon the version of JavaScript that the user agent supports. Some people get around this by using CSS visibility/display when the server serves up a page, and requiring the onload event to set the div to visible/block.<br /></div></blockquote> It's not clear to me from the above what the problem actually is.<br /><br />If you want different styling when scripting is enabled or not, you can e.g. use &lt;noscript&gt;&lt;link rel=stylesheet&gt;&lt;/noscript&gt; or &lt;script&gt; document.body.className += &quot; js-enabled&quot; &lt;/script&gt; and then prefix the relevant selectors with .js-enabled.<br /><br />If you want to use different markup when scripting is enabled then you can replace some parts of the DOM with scripting.<br /><br /><blockquote><div><cite>mskinner wrote:</cite><br /><span style="font-weight: bold">* What is the feature you are suggesting to help solve it?</span><br />I'm not sure on a suitable element name, but a workmate joked it should be YESSCRIPT. I'm completely open to suggestions for the element name and attributes...<br /><br />eg:<br /><dl class="codebox"><dt>Code: </dt><dd><code>&lt;yesscript minver=&quot;1.2&quot;  maxver=&quot;*&quot;&gt;<br />&lt;!--Display super duper JavaScript 1.2 panel that does something cool--&gt;<br />&lt;/yesscript&gt;<br /></code></dd></dl><br /><br /><span style="font-weight: bold">* What is the processing model for that feature, including error handling?</span><br />The NOSCRIPT element would behave the same as it does currently, so lets forget about that.<br /><br />User agents not supporting JavaScript, or with JavaScript disabled would need to ignore content inside the YESSCRIPT element.<br /></div></blockquote>How do you make it degrade in existing UAs?<br /><br /><blockquote><div><cite>mskinner wrote:</cite><br />User agents with JavaScript enabled should look for the optional attributes minver/maxver. If minver is 1.2 and maxver is not present (or an asterisk or something), and the user agent has JavaScript 1.5, then the user agent would render the YESSCRIPT content immediately.<br /><br />I would think YESSCRIPT would contain block level elements.<br /><br /><span style="font-weight: bold">* Why do you think browsers would implement this feature?</span><br />To make it easier (or more pleasant) for users to experience web sites based upon the JavaScript capabilities of said browsers.<br /></div></blockquote> I'm not convinced. <img src="https://forums.whatwg.org/bb3/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><blockquote><div><cite>mskinner wrote:</cite><br />For an example, say you loaded <a href="http://www.xhtmlized.com" class="postlink">http://www.xhtmlized.com</a> without JavaScript enabled, the (JavaScript dependent) pages/days sliders would not be visible - and this is made possible by an element, not by JavaScript (which isn't enabled in this case anyway).<br /></div></blockquote> Without JS I still get some information, namely what it costs for 1 page in 7 days, and the sliders indicate that pages and days are variable. To make it more useful without JS you don't hide it altogether, you make a form out of it and let the server calculate the cost for other pages/days combinations (and then override it with client side script, i.e. progressive enhancement). So it's not clear to me that your proposed feature would help in this case at all.<br /><br /><blockquote><div><cite>mskinner wrote:</cite><br /><span style="font-weight: bold">* Why do you think authors would use this feature?</span><br />To support accessible sites supporting JavaScript and script-less operation with the same markup, and no dependency on JavaScript to hide/show content based upon the user agent's JavaScript capabilities.<br /></div></blockquote> Doesn't your proposed feature require different markup for the scripted and non-scripted cases? In any case, it is already possible to create accessible sites JavaScript and script-less operation with the same markup, by not using &lt;noscript&gt; but instead starting from functional markup involving the server to do scripted stuff and using client side script as an enhancement.<br /><br /><blockquote><div><cite>mskinner wrote:</cite><br /><span style="font-weight: bold">* What evidence is there that this feature is desparately needed?</span><br />These days countries like AU, GB and US have DDA/508 laws requiring accessible sites. I develop an ecommerce application, and based upon the accessibility guidelines such as:<br /><blockquote class="uncited"><div>6.3 Ensure that pages are usable when scripts, applets, or other programmatic objects are turned off or not supported. If this is not possible, provide equivalent information on an alternative accessible page. [Priority 1]<br /></div></blockquote><br /><br />we need to ensure that our application is accessible to all regardless of JavaScript being present, and the JavaScript version. Requiring JavaScript to display JavaScript specific controls/panels etc. seems like a workaround - when an element would be more elegant.<br /><br />I see JavaScript getting more widespread, more governments requiring accessible content and sites paying attention to accessibility. A YESSCRIPT style element would make the lives of developers easier, and hopefully websites more usable to users.<br /><br />As stated previously, I'm completely open to suggestions on the element name and attribute names. I'm interested in hearing what others think, and if there are any improvements that can be made. If it's a bad idea, or I have completely overlooked something major I'm sure you'll let me know <img src="https://forums.whatwg.org/bb3/images/smilies/icon_wink.gif" alt=";-)" title="Wink" /></div></blockquote>Accessibility guidelines or laws don't support your proposal because it's already possible to create existing pages without it, as I mentioned above.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=4">zcorpan</a> — Mon Sep 03, 2007 10:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mskinner]]></name></author>
<updated>2007-08-31T23:19:47+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=409#p409</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=409#p409"/>
<title type="html"><![CDATA[New Element Suggestion - Inverse of NOSCRIPT]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=104&amp;p=409#p409"><![CDATA[
<span style="font-weight: bold">* What is the problem you are trying to solve?</span><br />There is a useful element NOSCRIPT that can display content based upon JavaScript not being enabled (or not being present if using lynx).<br /><br />There doesn't appear to be an element to display content based upon JavaScript being enabled, and optionally based upon the version of JavaScript that the user agent supports. Some people get around this by using CSS visibility/display when the server serves up a page, and requiring the onload event to set the div to visible/block.<br /><br /><span style="font-weight: bold">* What is the feature you are suggesting to help solve it?</span><br />I'm not sure on a suitable element name, but a workmate joked it should be YESSCRIPT. I'm completely open to suggestions for the element name and attributes...<br /><br />eg:<br /><dl class="codebox"><dt>Code: </dt><dd><code>&lt;yesscript minver=&quot;1.2&quot;  maxver=&quot;*&quot;&gt;<br />&lt;!--Display super duper JavaScript 1.2 panel that does something cool--&gt;<br />&lt;/yesscript&gt;<br /></code></dd></dl><br /><br /><span style="font-weight: bold">* What is the processing model for that feature, including error handling?</span><br />The NOSCRIPT element would behave the same as it does currently, so lets forget about that.<br /><br />User agents not supporting JavaScript, or with JavaScript disabled would need to ignore content inside the YESSCRIPT element.<br /><br />User agents with JavaScript enabled should look for the optional attributes minver/maxver. If minver is 1.2 and maxver is not present (or an asterisk or something), and the user agent has JavaScript 1.5, then the user agent would render the YESSCRIPT content immediately.<br /><br />I would think YESSCRIPT would contain block level elements.<br /><br /><span style="font-weight: bold">* Why do you think browsers would implement this feature?</span><br />To make it easier (or more pleasant) for users to experience web sites based upon the JavaScript capabilities of said browsers.<br /><br />For an example, say you loaded <a href="http://www.xhtmlized.com" class="postlink">http://www.xhtmlized.com</a> without JavaScript enabled, the (JavaScript dependent) pages/days sliders would not be visible - and this is made possible by an element, not by JavaScript (which isn't enabled in this case anyway).<br /><br /><span style="font-weight: bold">* Why do you think authors would use this feature?</span><br />To support accessible sites supporting JavaScript and script-less operation with the same markup, and no dependency on JavaScript to hide/show content based upon the user agent's JavaScript capabilities.<br /><br /><span style="font-weight: bold">* What evidence is there that this feature is desparately needed?</span><br />These days countries like AU, GB and US have DDA/508 laws requiring accessible sites. I develop an ecommerce application, and based upon the accessibility guidelines such as:<br /><blockquote class="uncited"><div><br />6.3 Ensure that pages are usable when scripts, applets, or other programmatic objects are turned off or not supported. If this is not possible, provide equivalent information on an alternative accessible page. [Priority 1]<br /></div></blockquote><br /><br />we need to ensure that our application is accessible to all regardless of JavaScript being present, and the JavaScript version. Requiring JavaScript to display JavaScript specific controls/panels etc. seems like a workaround - when an element would be more elegant.<br /><br />I see JavaScript getting more widespread, more governments requiring accessible content and sites paying attention to accessibility. A YESSCRIPT style element would make the lives of developers easier, and hopefully websites more usable to users.<br /><br />As stated previously, I'm completely open to suggestions on the element name and attribute names. I'm interested in hearing what others think, and if there are any improvements that can be made. If it's a bad idea, or I have completely overlooked something major I'm sure you'll let me know <img src="https://forums.whatwg.org/bb3/images/smilies/icon_wink.gif" alt=";-)" title="Wink" /><p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=125">mskinner</a> — Fri Aug 31, 2007 11:19 pm</p><hr />
]]></content>
</entry>
</feed>