<br />
<b>Strict Standards</b>:  Non-static method phpbb_feed_factory::init() should not be called statically in <b>/home/whatforums/forums.whatwg.org/bb3/feed.php</b> on line <b>66</b><br />
<b>[phpBB Debug] PHP Notice</b>: in file <b>/feed.php</b> on line <b>171</b>: <b>Cannot modify header information - headers already sent by (output started at /feed.php:66)</b><br />
<b>[phpBB Debug] PHP Notice</b>: in file <b>/feed.php</b> on line <b>172</b>: <b>Cannot modify header information - headers already sent by (output started at /feed.php:66)</b><br />
<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="https://forums.whatwg.org/bb3/feed.php?f=3&amp;t=4998" />

<title>WHATWG forums</title>
<subtitle>A Forum for HTML Discussions: Semantics, DOM APIs, Microdata, Canvas, WebGL, Offline Web Applications, Local Storage, WebM Video, WebSockets, Web Workers, Drag and Drop, Forms, Accessibility, Syntax, News, Keywords, Yet More Keywords &amp; More.</subtitle>
<link href="https://forums.whatwg.org/bb3/index.php" />
<updated>2012-05-24T20:26:17+00:00</updated>

<author><name><![CDATA[WHATWG forums]]></name></author>
<id>https://forums.whatwg.org/bb3/feed.php?f=3&amp;t=4998</id>
<entry>
<author><name><![CDATA[TomPenzer]]></name></author>
<updated>2012-05-24T20:26:17+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=4998&amp;p=7905#p7905</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=4998&amp;p=7905#p7905"/>
<title type="html"><![CDATA[Re: Proposal: Filenames as Metadata, or Solving Retina/2x Im]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=4998&amp;p=7905#p7905"><![CDATA[
I will note that this would not have the ability that the srcset implementation has to specify a different viewport size for the 2x asset than for the 1x asset. I will admit that I am confused as to why someone would ever want to do that, however, since the layout would be changed depending on which asset the client chose to load. Can anyone explain why we might want that capability?<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=3505">TomPenzer</a> — Thu May 24, 2012 8:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[TomPenzer]]></name></author>
<updated>2012-05-18T19:47:59+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=4998&amp;p=7896#p7896</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=4998&amp;p=7896#p7896"/>
<title type="html"><![CDATA[Re: Proposal: Filenames as Metadata, or Solving Retina/2x Im]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=4998&amp;p=7896#p7896"><![CDATA[
Meant to say when it encounters <span style="font-weight: bold">&lt;img src=</span>, not <span style="font-weight: bold">url=</span>.<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=3505">TomPenzer</a> — Fri May 18, 2012 7:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[TomPenzer]]></name></author>
<updated>2012-05-17T22:46:27+00:00</updated>
<id>https://forums.whatwg.org/bb3/viewtopic.php?t=4998&amp;p=7892#p7892</id>
<link href="https://forums.whatwg.org/bb3/viewtopic.php?t=4998&amp;p=7892#p7892"/>
<title type="html"><![CDATA[Proposal: Filenames as Metadata, or Solving Retina/2x Images]]></title>

<content type="html" xml:base="https://forums.whatwg.org/bb3/viewtopic.php?t=4998&amp;p=7892#p7892"><![CDATA[
In response to certain proposals I've seen lately, including &lt;picture&gt; and &lt;img srcset=&quot;&quot; /&gt;, I would like to offer what I think allows for what might be a significantly more convenient approach for authors to add support for double-pixel-density rendering displays, such as so-called Retina displays, and eventually higher densities in the future. By taking advantage of image variant filenames in a systematic way, we might allow for a more powerful way to express the availability of various pixel density image assets. I propose we add the following elements:<br /><br />1) The new 'meta' attribute 'image-scaling' with arguments listed in the format {'scaling factor' : 'scaling filename key'}, where the filename key is the often-standardized string added to the filename for 2x assets, i.e. '_2x' (it might even be possible to specify a different filename extension for the 2x asset by detecting whether the 'scaling filename key' string contains a period i.e. 'xxx.xxx'). Sub-attributes to the 'image-scaling' attribute would include the optional boolean (defaulted to 'true') attribute 'assume-present', and potentially the optional attribute 'image-scaling-path' for cases where sites store their various scaled image assets in different directories than their 1x images.<br /><br />2) A new series of optional attributes to the img tag named after the scaling factor, i.e. '2x', '4x', etc., (possible values include 'true', 'false', a string for the double-res filename key, or 'url()' to specify a completely different path for the asset corresponding to that scaling factor)<br /><br />3) A series of new optional CSS properties named after the scaling factor, i.e. 'background-image-2x', 'border-image-2x' and 'list-style-image-2x' (possible values for these include 'true', 'false', a string for the double-res filename key, or 'url()').<br /><br />A simple example usage of these new capabilities would be the following:<br /><br />&lt;meta image-scaling={2:&quot;_2x&quot;} /&gt;<br /><br />The effect of adding this single line to the page would be that a user agent that wishes to display double-res images would then attempt to access 'filename_2x.ext' whenever it encounters an img tag like '&lt;img url=(&quot;filename.ext&quot;) /&gt;', or a CSS property like '.class {background-image: url(&quot;filename.ext&quot;);}', '.class {border-image: url(&quot;filename.ext&quot;);}' or '.class {list-style-image: url(&quot;filename.ext&quot;);}'. For all these, in the case that the 'filename_2x.ext' file does not exist, a second request is made for 'filename.ext'.<br /><br />If the bulk of the 2x-resolution images are located in a different directory than the 1x assets, the meta tag could be extended as such:<br /><br />&lt;meta image-scaling={2:&quot;_2x&quot;} image-scaling-path={2:&quot;2x_images/&quot;} /&gt;<br /><br />Then, any 2x img or css-image assets would be requested from '2x_images/filename_2x.ext' instead of 'images/filename.ext'.<br /><br />If a particular 2x img tag asset or css-image asset has a '@2x' double-resolution filename key instead of '_2x' for some reason (maybe you're integrating with some 3rd party off-site content with a different 2x naming convention), you could add a '2x' attribute to its img tag, such as '&lt;img 2x=&quot;@2x&quot; /&gt;', or to its css properties, such as '.class {background-image-2x: &quot;@2x&quot;;}'.<br /><br />If a particular 2x-resolution img tag asset or css-image asset is not located in the same directory as the 1x asset, or if the filenames and/or file formats are not identical to the 1x asset, a separate path could be specified by doing this: '&lt;img 2x=url(&quot;path/to/filename_@2x.ext&quot;) /&gt;', or to its css properties by doing: '.class {background-image-2x: url(&quot;path/to/filename_@2x.ext&quot;);}'.<br /><br />In the case that a majority, but not all img and css-image assets are available in 2x resolution, the img assets that lack a 2x version would include the a tag such as, '&lt;img 2x=false /&gt;, or a css property such as '.class{background-image-2x: false;}'.<br /><br />In the case that a majority, but not all img and css-image assets are unavailable in 2x resolution, you would add the 'assume-present={2,false}' attribute to the meta 'image-scaling' attribute, such as '&lt;meta image-scaling={2:&quot;_2x&quot;} assume-present={2:false} /&gt;', and use the '2x' attribute to flag img assets with a double-resolution asset available, such as '&lt;img 2x=true /&gt;, and the css with '.class {background-image-2x: true;}'.<br /><br />In the case that no double-resolution image assets are available, the meta 'image-scaling' attribute can be simply omitted.<br /><br />By using this approach, we avoid the need to specify the same list of filenames varying only by scaling factor filename key for every single image asset. We are also able to achieve the same level of performance for those willing to put in the extra work to flag assets that deviate from the default setting (to minimize requests), and we allow the flexibility to be lazy or wrong, and have the user agent make two requests in those cases. This solution is also completely backwards-compatible with existing browsers.<br /><br />As a corollary to this, a similar approach could be used to add support for different image formats without losing backwards-compatibility, and again saving many precious developer-years. Imagine &lt;meta image-formats={jpeg2000:&quot;.jp2&quot;} assume-present={jpeg2000:boolean} /&gt;<p>Statistics: Posted by <a href="https://forums.whatwg.org/bb3/memberlist.php?mode=viewprofile&amp;u=3505">TomPenzer</a> — Thu May 17, 2012 10:46 pm</p><hr />
]]></content>
</entry>
</feed>